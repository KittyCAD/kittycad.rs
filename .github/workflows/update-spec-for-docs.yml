on:
  push:
    tags:
      - v*
  pull_request:
    paths:
      - .github/workflows/update-spec-for-docs.yml
  workflow_dispatch:
name: update spec for docs
concurrency:
  group: docs-${{ github.ref }}
  cancel-in-progress: true
jobs:
  update-spec:
    name: update-spec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: make generate
        shell: bash
        run: |
          make generate
        env:
          KITTYCAD_API_TOKEN: ${{secrets.KITTYCAD_API_TOKEN}}
      # Ensure no files changed.
      - name: Ensure no files changed
        shell: bash
        run: |
          if [[ `git status --porcelain` ]]; then
            echo "Files changed, exiting";
            exit 1;
          else
            # No changes
            echo "No files changed, proceeding";
          fi
      # Checkout the docs repo since we will want to update the files there.
      - uses: actions/checkout@v3
        with:
          repository: 'kittycad/docs'
          path: 'docs'
          token: ${{secrets.GLOBAL_PAT}}
      - name: move json patch file to docs
        shell: bash
        run: |
          rm docs/kittycad.rs.patch.json || true
          cp kittycad.rs.patch.json docs/kittycad.rs.patch.json
      - name: commit the changes in the docs repo
        shell: bash
        run: |
          export VERSION=$(cat VERSION.txt);
          cd docs
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -am "YOYO NEW RUST SPEC DOCS ${VERSION}!" || exit 0
          git fetch origin
          git rebase origin/main || exit 0
          export NEW_BRANCH="update-spec-rust"
          git checkout -b "$NEW_BRANCH"
          git push -f origin "$NEW_BRANCH"
          gh pr create --title "Update rust lang spec docs for ${VERSION}" \
              --body "Updating the generated docs for rust" \
              --head "$NEW_BRANCH" \
              --base main || true
        env:
          GITHUB_TOKEN: ${{secrets.GLOBAL_PAT}}


