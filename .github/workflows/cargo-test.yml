on:
  push:
    paths:
      - '**.rs'
      - Cargo.toml
      - Cargo.lock
      - .github/workflows/cargo-test.yml
name: cargo test
jobs:
  cargotest:
    name: cargo test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Install latest stable/nightly
        shell: bash
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | bash -s -- -y
          rustup default nightly
          rustup default stable
          rustup component add rustfmt
          rustup component add rustfmt --toolchain nightly
          rustup component add clippy
          echo PATH="${HOME}/.cargo/bin:${PATH}" >> ${GITHUB_ENV}
      - name: Cache cargo registry
        uses: actions/cache@v3.2.2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v3.2.2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v3.2.2
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Run cargo test
        run: |
          cargo test --all
        shell: bash
        env:
          KITTYCAD_API_TOKEN: ${{secrets.KITTYCAD_API_TOKEN}}
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.15.0'
          args: '--timeout 2000'
        env:
          KITTYCAD_API_TOKEN: ${{secrets.KITTYCAD_API_TOKEN}}
          RUST_BACKTRACE: 1

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          fail_ci_if_error: true
          flags: unittests
          verbose: true
