[package]
name = "kittycad"
description = "A fully generated & opinionated API client for the KittyCAD API."
version = "0.2.17"
documentation = "https://docs.rs/kittycad"
readme = "README.md"
repository = "https://github.com/KittyCAD/kittycad.rs/tree/main/kittycad"
edition = "2018"
license = "MIT"

[dependencies]
anyhow = "1"
async-trait = "^0.1.53"
base64 = "0.21"
bytes = { version = "1", features = ["serde"] }
clap = { version = "4.2.4", features = ["cargo", "derive", "env", "unicode"], optional = true }
chrono = { version = "0.4", default-features = false, features = ["serde", "std"] }
data-encoding = "^2.3.2"
dirs = { version = "^5.0.1", optional = true }
format_serde_error = "^0.3.0"
futures = "0.3.26"
http = "^0.2.8"
itertools = "^0.10.3"
log = { version = "^0.4", features = ["serde"] }
mime = "0.3"
parse-display = "^0.8.1"
percent-encoding = "2.1"
phonenumber = "0.3.2"
rand = "0.8"
reqwest = { version = "0.11", default-features = false, features = ["json", "multipart", "rustls-tls"] }
reqwest-conditional-middleware = { version = "0.2.1", optional = true }
reqwest-middleware = { version = "0.2.2", optional = true }
reqwest-retry = { version = "0.2.2", optional = true }
reqwest-tracing = { version = "0.4.4", features = ["opentelemetry_0_17"], optional = true }
schemars = { version = "0.8", features = ["bytes", "chrono", "url", "uuid1"] }
serde = { version = "1", features = ["derive"] }
serde_json = "1"
serde_urlencoded = "^0.7"
tabled = { version = "0.14.0", features = ["color"], optional = true }
thiserror = "1"
tracing = "^0.1"
url = { version = "2", features = ["serde"] }
uuid = { version = "1", features = ["serde", "v4"] }

[dev-dependencies]
expectorate = "1"
futures-util = "^0.3.26"
pretty_assertions = "1"
rand = "0.8"
tokio = { version = "1.20.0", features = ["rt", "macros"] }
tokio-tungstenite = "0.19"

[features]
default = ["retry"]
clap = ["dep:clap"]
tabled = ["dep:tabled"]
retry = ["dep:reqwest-conditional-middleware", "dep:reqwest-retry", "dep:reqwest-middleware", "dep:reqwest-tracing"]
js = ["uuid/js"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
