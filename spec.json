{
  "components": {
    "responses": {
      "Error": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Error"
      }
    },
    "schemas": {
      "AccountProvider": {
        "description": "An account provider.",
        "oneOf": [
          {
            "description": "The Google account provider.",
            "enum": [
              "google"
            ],
            "type": "string"
          },
          {
            "description": "The GitHub account provider.",
            "enum": [
              "github"
            ],
            "type": "string"
          }
        ]
      },
      "AiPluginApi": {
        "description": "AI plugin api information.",
        "properties": {
          "is_user_authenticated": {
            "default": false,
            "description": "If the API is authenticated.",
            "type": "boolean"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AiPluginApiType"
              }
            ],
            "default": "openapi",
            "description": "The type of API."
          },
          "url": {
            "description": "The url to the API's schema.",
            "format": "uri",
            "type": "string"
          }
        },
        "required": [
          "url"
        ],
        "type": "object"
      },
      "AiPluginApiType": {
        "description": "AI plugin api type.",
        "oneOf": [
          {
            "description": "An OpenAPI specification.",
            "enum": [
              "openapi"
            ],
            "type": "string"
          }
        ]
      },
      "AiPluginAuth": {
        "description": "AI plugin auth information.",
        "properties": {
          "authorization_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AiPluginHttpAuthType"
              }
            ],
            "description": "The type of http authorization.",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AiPluginAuthType"
              }
            ],
            "default": "none",
            "description": "The type of authentication."
          }
        },
        "type": "object"
      },
      "AiPluginAuthType": {
        "description": "AI plugin auth type.",
        "oneOf": [
          {
            "description": "None.",
            "enum": [
              "none"
            ],
            "type": "string"
          },
          {
            "description": "User http.",
            "enum": [
              "user_http"
            ],
            "type": "string"
          },
          {
            "description": "Service http.",
            "enum": [
              "service_http"
            ],
            "type": "string"
          },
          {
            "description": "OAuth.",
            "enum": [
              "oauth"
            ],
            "type": "string"
          }
        ]
      },
      "AiPluginHttpAuthType": {
        "description": "AI plugin http auth type.",
        "oneOf": [
          {
            "description": "Basic.",
            "enum": [
              "basic"
            ],
            "type": "string"
          },
          {
            "description": "Bearer.",
            "enum": [
              "bearer"
            ],
            "type": "string"
          }
        ]
      },
      "AiPluginManifest": {
        "description": "AI plugin manifest.\n\nThis is used for OpenAI's ChatGPT plugins. You can read more about them [here](https://platform.openai.com/docs/plugins/getting-started/plugin-manifest).",
        "properties": {
          "api": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AiPluginApi"
              }
            ],
            "description": "API specification."
          },
          "auth": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AiPluginAuth"
              }
            ],
            "description": "Authentication schema."
          },
          "contact_email": {
            "description": "Email contact for safety/moderation reachout, support, and deactivation.",
            "format": "email",
            "type": "string"
          },
          "description_for_human": {
            "description": "Human-readable description of the plugin.",
            "type": "string"
          },
          "description_for_model": {
            "description": "Description better tailored to the model, such as token context length considerations or keyword usage for improved plugin prompting.",
            "type": "string"
          },
          "legal_info_url": {
            "description": "Redirect URL for users to view plugin information.",
            "format": "uri",
            "type": "string"
          },
          "logo_url": {
            "description": "URL used to fetch the plugin's logo.",
            "format": "uri",
            "type": "string"
          },
          "name_for_human": {
            "description": "Human-readable name, such as the full company name.",
            "type": "string"
          },
          "name_for_model": {
            "description": "Name the model will used to target the plugin.",
            "type": "string"
          },
          "schema_version": {
            "description": "Manifest schema version.",
            "type": "string"
          }
        },
        "required": [
          "api",
          "auth",
          "legal_info_url",
          "logo_url"
        ],
        "type": "object"
      },
      "ApiCallQueryGroup": {
        "description": "A response for a query on the API call table that is grouped by something.",
        "properties": {
          "count": {
            "format": "int64",
            "type": "integer"
          },
          "query": {
            "type": "string"
          }
        },
        "required": [
          "count",
          "query"
        ],
        "type": "object"
      },
      "ApiCallQueryGroupBy": {
        "description": "The field of an API call to group by.",
        "oneOf": [
          {
            "description": "The email of the user that requested the API call.",
            "enum": [
              "email"
            ],
            "type": "string"
          },
          {
            "description": "The HTTP method of the API call.",
            "enum": [
              "method"
            ],
            "type": "string"
          },
          {
            "description": "The endpoint of the API call.",
            "enum": [
              "endpoint"
            ],
            "type": "string"
          },
          {
            "description": "The user ID of the user that requested the API call.",
            "enum": [
              "user_id"
            ],
            "type": "string"
          },
          {
            "description": "The origin of the API call. This is parsed from the `Origin` header.",
            "enum": [
              "origin"
            ],
            "type": "string"
          },
          {
            "description": "The IP address of the user making the API call.",
            "enum": [
              "ip_address"
            ],
            "type": "string"
          }
        ]
      },
      "ApiCallStatus": {
        "description": "The status of an async API call.",
        "oneOf": [
          {
            "description": "The async API call is queued.",
            "enum": [
              "Queued"
            ],
            "type": "string"
          },
          {
            "description": "The async API call was uploaded to be converted.",
            "enum": [
              "Uploaded"
            ],
            "type": "string"
          },
          {
            "description": "The async API call is in progress.",
            "enum": [
              "In Progress"
            ],
            "type": "string"
          },
          {
            "description": "The async API call has completed.",
            "enum": [
              "Completed"
            ],
            "type": "string"
          },
          {
            "description": "The async API call has failed.",
            "enum": [
              "Failed"
            ],
            "type": "string"
          }
        ]
      },
      "ApiCallWithPrice": {
        "description": "An API call with the price.\n\nThis is a join of the `ApiCall` and `ApiCallPrice` tables.",
        "properties": {
          "completed_at": {
            "description": "The date and time the API call completed billing.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The date and time the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "duration": {
            "description": "The duration of the API call.",
            "format": "duration",
            "nullable": true,
            "title": "int64",
            "type": "integer"
          },
          "email": {
            "description": "The user's email address.",
            "format": "email",
            "type": "string"
          },
          "endpoint": {
            "description": "The endpoint requested by the API call.",
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier for the API call."
          },
          "ip_address": {
            "default": "",
            "description": "The ip address of the origin.",
            "format": "ip",
            "title": "String",
            "type": "string"
          },
          "litterbox": {
            "description": "If the API call was spawned from the litterbox or not.",
            "nullable": true,
            "type": "boolean"
          },
          "method": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Method"
              }
            ],
            "description": "The HTTP method requsted by the API call."
          },
          "minutes": {
            "description": "The number of minutes the API call was billed for.",
            "format": "int32",
            "nullable": true,
            "type": "integer"
          },
          "origin": {
            "description": "The origin of the API call.",
            "type": "string"
          },
          "price": {
            "description": "The price of the API call.",
            "format": "money-usd",
            "nullable": true,
            "title": "Number",
            "type": "number"
          },
          "request_body": {
            "description": "The request body sent by the API call.",
            "nullable": true,
            "type": "string"
          },
          "request_query_params": {
            "description": "The request query params sent by the API call.",
            "type": "string"
          },
          "response_body": {
            "description": "The response body returned by the API call. We do not store this information if it is above a certain size.",
            "nullable": true,
            "type": "string"
          },
          "started_at": {
            "description": "The date and time the API call started billing.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status_code": {
            "description": "The status code returned by the API call.",
            "format": "int32",
            "nullable": true,
            "title": "int32",
            "type": "integer"
          },
          "stripe_invoice_item_id": {
            "description": "The Stripe invoice item ID of the API call if it is billable.",
            "type": "string"
          },
          "token": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The API token that made the API call."
          },
          "updated_at": {
            "description": "The date and time the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_agent": {
            "description": "The user agent of the request.",
            "type": "string"
          },
          "user_id": {
            "description": "The ID of the user that made the API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "method",
          "token",
          "updated_at",
          "user_agent"
        ],
        "type": "object"
      },
      "ApiCallWithPriceResultsPage": {
        "description": "A single page of results",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "items": {
              "$ref": "#/components/schemas/ApiCallWithPrice"
            },
            "type": "array"
          },
          "next_page": {
            "description": "token used to fetch the next page of results (if any)",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "items"
        ],
        "type": "object"
      },
      "ApiToken": {
        "description": "An API token.\n\nThese are used to authenticate users with Bearer authentication.",
        "properties": {
          "created_at": {
            "description": "The date and time the API token was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the API token.",
            "type": "string"
          },
          "is_valid": {
            "description": "If the token is valid. We never delete API tokens, but we can mark them as invalid. We save them for ever to preserve the history of the API token.",
            "type": "boolean"
          },
          "token": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The API token itself."
          },
          "updated_at": {
            "description": "The date and time the API token was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The ID of the user that owns the API token.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "is_valid",
          "token",
          "updated_at"
        ],
        "type": "object"
      },
      "ApiTokenResultsPage": {
        "description": "A single page of results",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "items": {
              "$ref": "#/components/schemas/ApiToken"
            },
            "type": "array"
          },
          "next_page": {
            "description": "token used to fetch the next page of results (if any)",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "items"
        ],
        "type": "object"
      },
      "AppClientInfo": {
        "description": "Information about a third party app client.",
        "properties": {
          "url": {
            "description": "The URL for consent.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AsyncApiCall": {
        "description": "An async API call.",
        "properties": {
          "completed_at": {
            "description": "The time and date the async API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The time and date the async API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the async API call.\n\nThis is the same as the API call ID."
          },
          "input": {
            "default": null,
            "description": "The JSON input for the API call. These are determined by the endpoint that is run."
          },
          "output": {
            "description": "The JSON output for the API call. These are determined by the endpoint that is run.",
            "nullable": true
          },
          "started_at": {
            "description": "The time and date the async API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the async API call."
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AsyncApiCallType"
              }
            ],
            "description": "The type of async API call."
          },
          "updated_at": {
            "description": "The time and date the async API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the async API call.",
            "type": "string"
          },
          "worker": {
            "description": "The worker node that is performing or performed the async API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "status",
          "type",
          "updated_at"
        ],
        "type": "object"
      },
      "AsyncApiCallOutput": {
        "description": "The output from the async API call.",
        "oneOf": [
          {
            "description": "A file conversion.",
            "properties": {
              "completed_at": {
                "description": "The time and date the API call was completed.",
                "format": "date-time",
                "nullable": true,
                "title": "DateTime",
                "type": "string"
              },
              "created_at": {
                "description": "The time and date the API call was created.",
                "format": "date-time",
                "title": "DateTime",
                "type": "string"
              },
              "error": {
                "description": "The error the function returned, if any.",
                "nullable": true,
                "type": "string"
              },
              "id": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ],
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
              },
              "output": {
                "description": "The converted file (if single file conversion), if completed, base64 encoded. This field is deprecated, and will be removed in a future release. Use `outputs` instead.",
                "format": "byte",
                "nullable": true,
                "title": "String",
                "type": "string"
              },
              "output_format": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileExportFormat"
                  }
                ],
                "description": "The output format of the file conversion."
              },
              "output_format_options": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OutputFormat"
                  }
                ],
                "description": "The output format options of the file conversion.",
                "nullable": true
              },
              "outputs": {
                "additionalProperties": {
                  "format": "byte",
                  "title": "String",
                  "type": "string"
                },
                "description": "The converted files (if multiple file conversion), if completed, base64 encoded. The key of the map is the path of the output file.",
                "type": "object"
              },
              "src_format": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileImportFormat"
                  }
                ],
                "description": "The source format of the file conversion."
              },
              "src_format_options": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InputFormat"
                  }
                ],
                "description": "The source format options of the file conversion.",
                "nullable": true
              },
              "started_at": {
                "description": "The time and date the API call was started.",
                "format": "date-time",
                "nullable": true,
                "title": "DateTime",
                "type": "string"
              },
              "status": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ],
                "description": "The status of the API call."
              },
              "type": {
                "enum": [
                  "FileConversion"
                ],
                "type": "string"
              },
              "updated_at": {
                "description": "The time and date the API call was last updated.",
                "format": "date-time",
                "title": "DateTime",
                "type": "string"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "type": "string"
              }
            },
            "required": [
              "created_at",
              "id",
              "output_format",
              "src_format",
              "status",
              "type",
              "updated_at"
            ],
            "type": "object"
          },
          {
            "description": "File center of mass.",
            "properties": {
              "center_of_mass": {
                "description": "The resulting center of mass.",
                "items": {
                  "format": "double",
                  "type": "number"
                },
                "nullable": true,
                "type": "array"
              },
              "completed_at": {
                "description": "The time and date the API call was completed.",
                "format": "date-time",
                "nullable": true,
                "title": "DateTime",
                "type": "string"
              },
              "created_at": {
                "description": "The time and date the API call was created.",
                "format": "date-time",
                "title": "DateTime",
                "type": "string"
              },
              "error": {
                "description": "The error the function returned, if any.",
                "nullable": true,
                "type": "string"
              },
              "id": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ],
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
              },
              "src_format": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileImportFormat"
                  }
                ],
                "description": "The source format of the file."
              },
              "started_at": {
                "description": "The time and date the API call was started.",
                "format": "date-time",
                "nullable": true,
                "title": "DateTime",
                "type": "string"
              },
              "status": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ],
                "description": "The status of the API call."
              },
              "type": {
                "enum": [
                  "FileCenterOfMass"
                ],
                "type": "string"
              },
              "updated_at": {
                "description": "The time and date the API call was last updated.",
                "format": "date-time",
                "title": "DateTime",
                "type": "string"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "type": "string"
              }
            },
            "required": [
              "created_at",
              "id",
              "src_format",
              "status",
              "type",
              "updated_at"
            ],
            "type": "object"
          },
          {
            "description": "A file mass.",
            "properties": {
              "completed_at": {
                "description": "The time and date the API call was completed.",
                "format": "date-time",
                "nullable": true,
                "title": "DateTime",
                "type": "string"
              },
              "created_at": {
                "description": "The time and date the API call was created.",
                "format": "date-time",
                "title": "DateTime",
                "type": "string"
              },
              "error": {
                "description": "The error the function returned, if any.",
                "nullable": true,
                "type": "string"
              },
              "id": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ],
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
              },
              "mass": {
                "description": "The resulting mass.",
                "format": "double",
                "nullable": true,
                "type": "number"
              },
              "material_density": {
                "default": 0.0,
                "description": "The material density as denoted by the user.",
                "format": "float",
                "type": "number"
              },
              "src_format": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileImportFormat"
                  }
                ],
                "description": "The source format of the file."
              },
              "started_at": {
                "description": "The time and date the API call was started.",
                "format": "date-time",
                "nullable": true,
                "title": "DateTime",
                "type": "string"
              },
              "status": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ],
                "description": "The status of the API call."
              },
              "type": {
                "enum": [
                  "FileMass"
                ],
                "type": "string"
              },
              "updated_at": {
                "description": "The time and date the API call was last updated.",
                "format": "date-time",
                "title": "DateTime",
                "type": "string"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "type": "string"
              }
            },
            "required": [
              "created_at",
              "id",
              "src_format",
              "status",
              "type",
              "updated_at"
            ],
            "type": "object"
          },
          {
            "description": "A file volume.",
            "properties": {
              "completed_at": {
                "description": "The time and date the API call was completed.",
                "format": "date-time",
                "nullable": true,
                "title": "DateTime",
                "type": "string"
              },
              "created_at": {
                "description": "The time and date the API call was created.",
                "format": "date-time",
                "title": "DateTime",
                "type": "string"
              },
              "error": {
                "description": "The error the function returned, if any.",
                "nullable": true,
                "type": "string"
              },
              "id": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ],
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
              },
              "src_format": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileImportFormat"
                  }
                ],
                "description": "The source format of the file."
              },
              "started_at": {
                "description": "The time and date the API call was started.",
                "format": "date-time",
                "nullable": true,
                "title": "DateTime",
                "type": "string"
              },
              "status": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ],
                "description": "The status of the API call."
              },
              "type": {
                "enum": [
                  "FileVolume"
                ],
                "type": "string"
              },
              "updated_at": {
                "description": "The time and date the API call was last updated.",
                "format": "date-time",
                "title": "DateTime",
                "type": "string"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "type": "string"
              },
              "volume": {
                "description": "The resulting volume.",
                "format": "double",
                "nullable": true,
                "type": "number"
              }
            },
            "required": [
              "created_at",
              "id",
              "src_format",
              "status",
              "type",
              "updated_at"
            ],
            "type": "object"
          },
          {
            "description": "A file density.",
            "properties": {
              "completed_at": {
                "description": "The time and date the API call was completed.",
                "format": "date-time",
                "nullable": true,
                "title": "DateTime",
                "type": "string"
              },
              "created_at": {
                "description": "The time and date the API call was created.",
                "format": "date-time",
                "title": "DateTime",
                "type": "string"
              },
              "density": {
                "description": "The resulting density.",
                "format": "double",
                "nullable": true,
                "type": "number"
              },
              "error": {
                "description": "The error the function returned, if any.",
                "nullable": true,
                "type": "string"
              },
              "id": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ],
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
              },
              "material_mass": {
                "default": 0.0,
                "description": "The material mass as denoted by the user.",
                "format": "float",
                "type": "number"
              },
              "src_format": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileImportFormat"
                  }
                ],
                "description": "The source format of the file."
              },
              "started_at": {
                "description": "The time and date the API call was started.",
                "format": "date-time",
                "nullable": true,
                "title": "DateTime",
                "type": "string"
              },
              "status": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ],
                "description": "The status of the API call."
              },
              "type": {
                "enum": [
                  "FileDensity"
                ],
                "type": "string"
              },
              "updated_at": {
                "description": "The time and date the API call was last updated.",
                "format": "date-time",
                "title": "DateTime",
                "type": "string"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "type": "string"
              }
            },
            "required": [
              "created_at",
              "id",
              "src_format",
              "status",
              "type",
              "updated_at"
            ],
            "type": "object"
          },
          {
            "description": "A file surface area.",
            "properties": {
              "completed_at": {
                "description": "The time and date the API call was completed.",
                "format": "date-time",
                "nullable": true,
                "title": "DateTime",
                "type": "string"
              },
              "created_at": {
                "description": "The time and date the API call was created.",
                "format": "date-time",
                "title": "DateTime",
                "type": "string"
              },
              "error": {
                "description": "The error the function returned, if any.",
                "nullable": true,
                "type": "string"
              },
              "id": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ],
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
              },
              "src_format": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileImportFormat"
                  }
                ],
                "description": "The source format of the file."
              },
              "started_at": {
                "description": "The time and date the API call was started.",
                "format": "date-time",
                "nullable": true,
                "title": "DateTime",
                "type": "string"
              },
              "status": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ],
                "description": "The status of the API call."
              },
              "surface_area": {
                "description": "The resulting surface area.",
                "format": "double",
                "nullable": true,
                "type": "number"
              },
              "type": {
                "enum": [
                  "FileSurfaceArea"
                ],
                "type": "string"
              },
              "updated_at": {
                "description": "The time and date the API call was last updated.",
                "format": "date-time",
                "title": "DateTime",
                "type": "string"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "type": "string"
              }
            },
            "required": [
              "created_at",
              "id",
              "src_format",
              "status",
              "type",
              "updated_at"
            ],
            "type": "object"
          }
        ]
      },
      "AsyncApiCallResultsPage": {
        "description": "A single page of results",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "items": {
              "$ref": "#/components/schemas/AsyncApiCall"
            },
            "type": "array"
          },
          "next_page": {
            "description": "token used to fetch the next page of results (if any)",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "items"
        ],
        "type": "object"
      },
      "AsyncApiCallType": {
        "description": "The type of async API call.",
        "oneOf": [
          {
            "description": "File conversion.",
            "enum": [
              "FileConversion"
            ],
            "type": "string"
          },
          {
            "description": "File volume.",
            "enum": [
              "FileVolume"
            ],
            "type": "string"
          },
          {
            "description": "File center of mass.",
            "enum": [
              "FileCenterOfMass"
            ],
            "type": "string"
          },
          {
            "description": "File mass.",
            "enum": [
              "FileMass"
            ],
            "type": "string"
          },
          {
            "description": "File density.",
            "enum": [
              "FileDensity"
            ],
            "type": "string"
          },
          {
            "description": "File surface area.",
            "enum": [
              "FileSurfaceArea"
            ],
            "type": "string"
          }
        ]
      },
      "Axis": {
        "description": "Co-ordinate axis specifier.\n\nSee [cglearn.eu] for background reading.\n\n[cglearn.eu]: https://cglearn.eu/pub/computer-graphics/introduction-to-geometry#material-coordinate-systems-1",
        "oneOf": [
          {
            "description": "'Y' axis.",
            "enum": [
              "y"
            ],
            "type": "string"
          },
          {
            "description": "'Z' axis.",
            "enum": [
              "z"
            ],
            "type": "string"
          }
        ]
      },
      "AxisDirectionPair": {
        "description": "An [`Axis`] paired with a [`Direction`].",
        "properties": {
          "axis": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Axis"
              }
            ],
            "description": "Axis specifier."
          },
          "direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Direction"
              }
            ],
            "description": "Specifies which direction the axis is pointing."
          }
        },
        "required": [
          "axis",
          "direction"
        ],
        "type": "object"
      },
      "BillingInfo": {
        "description": "The billing information for payments.",
        "properties": {
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NewAddress"
              }
            ],
            "description": "The address of the customer.",
            "nullable": true
          },
          "name": {
            "description": "The name of the customer.",
            "type": "string"
          },
          "phone": {
            "default": "",
            "description": "The phone for the customer.",
            "format": "phone",
            "title": "String",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CacheMetadata": {
        "description": "Metadata about our cache.\n\nThis is mostly used for internal purposes and debugging.",
        "properties": {
          "ok": {
            "description": "If the cache returned an ok response from ping.",
            "type": "boolean"
          }
        },
        "required": [
          "ok"
        ],
        "type": "object"
      },
      "CameraDragInteractionType": {
        "description": "The type of camera drag interaction.",
        "oneOf": [
          {
            "description": "Camera pan",
            "enum": [
              "pan"
            ],
            "type": "string"
          },
          {
            "description": "Camera rotate (revolve/orbit)",
            "enum": [
              "rotate"
            ],
            "type": "string"
          },
          {
            "description": "Camera zoom (increase or decrease distance to reference point center)",
            "enum": [
              "zoom"
            ],
            "type": "string"
          }
        ]
      },
      "CardDetails": {
        "description": "The card details of a payment method.",
        "properties": {
          "brand": {
            "description": "Card brand.\n\nCan be `amex`, `diners`, `discover`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
            "type": "string"
          },
          "checks": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodCardChecks"
              }
            ],
            "default": {},
            "description": "Checks on Card address and CVC if provided."
          },
          "country": {
            "description": "Two-letter ISO code representing the country of the card.",
            "type": "string"
          },
          "exp_month": {
            "default": 0,
            "description": "Two-digit number representing the card's expiration month.",
            "format": "int64",
            "type": "integer"
          },
          "exp_year": {
            "default": 0,
            "description": "Four-digit number representing the card's expiration year.",
            "format": "int64",
            "type": "integer"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular card number.",
            "type": "string"
          },
          "funding": {
            "description": "Card funding type.\n\nCan be `credit`, `debit`, `prepaid`, or `unknown`.",
            "type": "string"
          },
          "last4": {
            "description": "The last four digits of the card.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Cluster": {
        "description": "Cluster information.",
        "properties": {
          "addr": {
            "description": "The IP address of the cluster.",
            "nullable": true,
            "type": "string"
          },
          "auth_timeout": {
            "default": 0,
            "description": "The auth timeout of the cluster.",
            "format": "int64",
            "type": "integer"
          },
          "cluster_port": {
            "default": 0,
            "description": "The port of the cluster.",
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "default": "",
            "description": "The name of the cluster.",
            "type": "string"
          },
          "tls_timeout": {
            "default": 0,
            "description": "The TLS timeout for the cluster.",
            "format": "int64",
            "type": "integer"
          },
          "urls": {
            "description": "The urls of the cluster.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CodeLanguage": {
        "description": "The language code is written in.",
        "oneOf": [
          {
            "description": "The `go` programming language.",
            "enum": [
              "go"
            ],
            "type": "string"
          },
          {
            "description": "The `python` programming language.",
            "enum": [
              "python"
            ],
            "type": "string"
          },
          {
            "description": "The `node` programming language.",
            "enum": [
              "node"
            ],
            "type": "string"
          }
        ]
      },
      "CodeOutput": {
        "description": "Output of the code being executed.",
        "properties": {
          "output_files": {
            "description": "The contents of the files requested if they were passed.",
            "items": {
              "$ref": "#/components/schemas/OutputFile"
            },
            "type": "array"
          },
          "stderr": {
            "default": "",
            "description": "The stderr of the code.",
            "type": "string"
          },
          "stdout": {
            "default": "",
            "description": "The stdout of the code.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Commit": {
        "description": "Commit holds the Git-commit (SHA1) that a binary was built from, as reported in the version-string of external tools, such as `containerd`, or `runC`.",
        "properties": {
          "expected": {
            "description": "Commit ID of external tool expected by dockerd as set at build time.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Actual commit ID of external tool.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Connection": {
        "description": "Metadata about a pub-sub connection.\n\nThis is mostly used for internal purposes and debugging.",
        "properties": {
          "auth_timeout": {
            "default": 0,
            "description": "The auth timeout of the server.",
            "format": "int64",
            "type": "integer"
          },
          "cluster": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Cluster"
              }
            ],
            "default": {
              "auth_timeout": 0,
              "cluster_port": 0,
              "name": "",
              "tls_timeout": 0
            },
            "description": "Information about the cluster."
          },
          "config_load_time": {
            "description": "The time the configuration was loaded.",
            "format": "date-time",
            "type": "string"
          },
          "connections": {
            "default": 0,
            "description": "The number of connections to the server.",
            "format": "int64",
            "type": "integer"
          },
          "cores": {
            "default": 0,
            "description": "The CPU core usage of the server.",
            "format": "int64",
            "type": "integer"
          },
          "cpu": {
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "gateway": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Gateway"
              }
            ],
            "default": {
              "auth_timeout": 0,
              "host": "",
              "name": "",
              "port": 0,
              "tls_timeout": 0
            },
            "description": "Information about the gateway."
          },
          "git_commit": {
            "default": "",
            "description": "The git commit.",
            "type": "string"
          },
          "go": {
            "default": "",
            "description": "The go version.",
            "type": "string"
          },
          "gomaxprocs": {
            "default": 0,
            "description": "`GOMAXPROCS` of the server.",
            "format": "int64",
            "type": "integer"
          },
          "host": {
            "description": "The host of the server.",
            "format": "ip",
            "type": "string"
          },
          "http_base_path": {
            "default": "",
            "description": "The http base path of the server.",
            "type": "string"
          },
          "http_host": {
            "default": "",
            "description": "The http host of the server.",
            "type": "string"
          },
          "http_port": {
            "default": 0,
            "description": "The http port of the server.",
            "format": "int64",
            "type": "integer"
          },
          "http_req_stats": {
            "additionalProperties": {
              "format": "int64",
              "type": "integer"
            },
            "type": "object"
          },
          "https_port": {
            "default": 0,
            "description": "The https port of the server.",
            "format": "int64",
            "type": "integer"
          },
          "in_bytes": {
            "default": 0,
            "description": "The count of inbound bytes for the server.",
            "format": "int64",
            "type": "integer"
          },
          "in_msgs": {
            "default": 0,
            "description": "The number of inbound messages for the server.",
            "format": "int64",
            "type": "integer"
          },
          "jetstream": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Jetstream"
              }
            ],
            "default": {
              "config": {
                "domain": "",
                "max_memory": 0,
                "max_storage": 0,
                "store_dir": ""
              },
              "meta": {
                "cluster_size": 0,
                "leader": "",
                "name": ""
              },
              "stats": {
                "accounts": 0,
                "api": {
                  "errors": 0,
                  "inflight": 0,
                  "total": 0
                },
                "ha_assets": 0,
                "memory": 0,
                "reserved_memory": 0,
                "reserved_store": 0,
                "store": 0
              }
            },
            "description": "Jetstream information."
          },
          "leaf": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LeafNode"
              }
            ],
            "default": {
              "auth_timeout": 0,
              "host": "",
              "port": 0,
              "tls_timeout": 0
            },
            "description": "Information about leaf nodes."
          },
          "leafnodes": {
            "default": 0,
            "description": "The number of leaf nodes for the server.",
            "format": "int64",
            "type": "integer"
          },
          "max_connections": {
            "default": 0,
            "description": "The max connections of the server.",
            "format": "int64",
            "type": "integer"
          },
          "max_control_line": {
            "default": 0,
            "description": "The max control line of the server.",
            "format": "int64",
            "type": "integer"
          },
          "max_payload": {
            "default": 0,
            "description": "The max payload of the server.",
            "format": "int64",
            "type": "integer"
          },
          "max_pending": {
            "default": 0,
            "description": "The max pending of the server.",
            "format": "int64",
            "type": "integer"
          },
          "mem": {
            "default": 0,
            "description": "The memory usage of the server.",
            "format": "int64",
            "type": "integer"
          },
          "now": {
            "description": "The time now.",
            "format": "date-time",
            "type": "string"
          },
          "out_bytes": {
            "default": 0,
            "description": "The count of outbound bytes for the server.",
            "format": "int64",
            "type": "integer"
          },
          "out_msgs": {
            "default": 0,
            "description": "The number of outbound messages for the server.",
            "format": "int64",
            "type": "integer"
          },
          "ping_interval": {
            "default": 0,
            "description": "The ping interval of the server.",
            "format": "int64",
            "type": "integer"
          },
          "ping_max": {
            "default": 0,
            "description": "The ping max of the server.",
            "format": "int64",
            "type": "integer"
          },
          "port": {
            "default": 0,
            "description": "The port of the server.",
            "format": "int64",
            "type": "integer"
          },
          "proto": {
            "default": 0,
            "description": "The protocol version.",
            "format": "int64",
            "type": "integer"
          },
          "remotes": {
            "default": 0,
            "description": "The number of remotes for the server.",
            "format": "int64",
            "type": "integer"
          },
          "routes": {
            "default": 0,
            "description": "The number of routes for the server.",
            "format": "int64",
            "type": "integer"
          },
          "server_id": {
            "default": "",
            "description": "The server ID.",
            "type": "string"
          },
          "server_name": {
            "default": "",
            "description": "The server name.",
            "type": "string"
          },
          "slow_consumers": {
            "default": 0,
            "description": "The number of slow consumers for the server.",
            "format": "int64",
            "type": "integer"
          },
          "start": {
            "description": "When the server was started.",
            "format": "date-time",
            "type": "string"
          },
          "subscriptions": {
            "default": 0,
            "description": "The number of subscriptions for the server.",
            "format": "int64",
            "type": "integer"
          },
          "system_account": {
            "default": "",
            "description": "The system account.",
            "type": "string"
          },
          "tls_timeout": {
            "default": 0,
            "description": "The TLS timeout of the server.",
            "format": "int64",
            "type": "integer"
          },
          "total_connections": {
            "default": 0,
            "description": "The total number of connections to the server.",
            "format": "int64",
            "type": "integer"
          },
          "uptime": {
            "default": "",
            "description": "The uptime of the server.",
            "type": "string"
          },
          "version": {
            "default": "",
            "description": "The version of the service.",
            "type": "string"
          },
          "write_deadline": {
            "default": 0,
            "description": "The write deadline of the server.",
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "config_load_time",
          "host",
          "http_req_stats",
          "now",
          "start"
        ],
        "type": "object"
      },
      "CountryCode": {
        "description": "An enumeration of all ISO-3166 alpha-2 country codes.",
        "oneOf": [
          {
            "description": "Afghanistan",
            "enum": [
              "AF"
            ],
            "type": "string"
          },
          {
            "description": "Åland Islands",
            "enum": [
              "AX"
            ],
            "type": "string"
          },
          {
            "description": "Albania",
            "enum": [
              "AL"
            ],
            "type": "string"
          },
          {
            "description": "Algeria",
            "enum": [
              "DZ"
            ],
            "type": "string"
          },
          {
            "description": "American Samoa",
            "enum": [
              "AS"
            ],
            "type": "string"
          },
          {
            "description": "Andorra",
            "enum": [
              "AD"
            ],
            "type": "string"
          },
          {
            "description": "Angola",
            "enum": [
              "AO"
            ],
            "type": "string"
          },
          {
            "description": "Anguilla",
            "enum": [
              "AI"
            ],
            "type": "string"
          },
          {
            "description": "Antarctica",
            "enum": [
              "AQ"
            ],
            "type": "string"
          },
          {
            "description": "Antigua and Barbuda",
            "enum": [
              "AG"
            ],
            "type": "string"
          },
          {
            "description": "Argentina",
            "enum": [
              "AR"
            ],
            "type": "string"
          },
          {
            "description": "Armenia",
            "enum": [
              "AM"
            ],
            "type": "string"
          },
          {
            "description": "Aruba",
            "enum": [
              "AW"
            ],
            "type": "string"
          },
          {
            "description": "Australia",
            "enum": [
              "AU"
            ],
            "type": "string"
          },
          {
            "description": "Austria",
            "enum": [
              "AT"
            ],
            "type": "string"
          },
          {
            "description": "Azerbaijan",
            "enum": [
              "AZ"
            ],
            "type": "string"
          },
          {
            "description": "Bahamas",
            "enum": [
              "BS"
            ],
            "type": "string"
          },
          {
            "description": "Bahrain",
            "enum": [
              "BH"
            ],
            "type": "string"
          },
          {
            "description": "Bangladesh",
            "enum": [
              "BD"
            ],
            "type": "string"
          },
          {
            "description": "Barbados",
            "enum": [
              "BB"
            ],
            "type": "string"
          },
          {
            "description": "Belarus",
            "enum": [
              "BY"
            ],
            "type": "string"
          },
          {
            "description": "Belgium",
            "enum": [
              "BE"
            ],
            "type": "string"
          },
          {
            "description": "Belize",
            "enum": [
              "BZ"
            ],
            "type": "string"
          },
          {
            "description": "Benin",
            "enum": [
              "BJ"
            ],
            "type": "string"
          },
          {
            "description": "Bermuda",
            "enum": [
              "BM"
            ],
            "type": "string"
          },
          {
            "description": "Bhutan",
            "enum": [
              "BT"
            ],
            "type": "string"
          },
          {
            "description": "Bolivia (Plurinational State of)",
            "enum": [
              "BO"
            ],
            "type": "string"
          },
          {
            "description": "Bonaire, Sint Eustatius and Saba",
            "enum": [
              "BQ"
            ],
            "type": "string"
          },
          {
            "description": "Bosnia and Herzegovina",
            "enum": [
              "BA"
            ],
            "type": "string"
          },
          {
            "description": "Botswana",
            "enum": [
              "BW"
            ],
            "type": "string"
          },
          {
            "description": "Bouvet Island",
            "enum": [
              "BV"
            ],
            "type": "string"
          },
          {
            "description": "Brazil",
            "enum": [
              "BR"
            ],
            "type": "string"
          },
          {
            "description": "British Indian Ocean Territory",
            "enum": [
              "IO"
            ],
            "type": "string"
          },
          {
            "description": "Brunei Darussalam",
            "enum": [
              "BN"
            ],
            "type": "string"
          },
          {
            "description": "Bulgaria",
            "enum": [
              "BG"
            ],
            "type": "string"
          },
          {
            "description": "Burkina Faso",
            "enum": [
              "BF"
            ],
            "type": "string"
          },
          {
            "description": "Burundi",
            "enum": [
              "BI"
            ],
            "type": "string"
          },
          {
            "description": "Cabo Verde",
            "enum": [
              "CV"
            ],
            "type": "string"
          },
          {
            "description": "Cambodia",
            "enum": [
              "KH"
            ],
            "type": "string"
          },
          {
            "description": "Cameroon",
            "enum": [
              "CM"
            ],
            "type": "string"
          },
          {
            "description": "Canada",
            "enum": [
              "CA"
            ],
            "type": "string"
          },
          {
            "description": "Cayman Islands",
            "enum": [
              "KY"
            ],
            "type": "string"
          },
          {
            "description": "Central African Republic",
            "enum": [
              "CF"
            ],
            "type": "string"
          },
          {
            "description": "Chad",
            "enum": [
              "TD"
            ],
            "type": "string"
          },
          {
            "description": "Chile",
            "enum": [
              "CL"
            ],
            "type": "string"
          },
          {
            "description": "China",
            "enum": [
              "CN"
            ],
            "type": "string"
          },
          {
            "description": "Christmas Island",
            "enum": [
              "CX"
            ],
            "type": "string"
          },
          {
            "description": "Cocos (Keeling) Islands",
            "enum": [
              "CC"
            ],
            "type": "string"
          },
          {
            "description": "Colombia",
            "enum": [
              "CO"
            ],
            "type": "string"
          },
          {
            "description": "Comoros",
            "enum": [
              "KM"
            ],
            "type": "string"
          },
          {
            "description": "Congo",
            "enum": [
              "CG"
            ],
            "type": "string"
          },
          {
            "description": "Congo (Democratic Republic of the)",
            "enum": [
              "CD"
            ],
            "type": "string"
          },
          {
            "description": "Cook Islands",
            "enum": [
              "CK"
            ],
            "type": "string"
          },
          {
            "description": "Costa Rica",
            "enum": [
              "CR"
            ],
            "type": "string"
          },
          {
            "description": "Côte d'Ivoire",
            "enum": [
              "CI"
            ],
            "type": "string"
          },
          {
            "description": "Croatia",
            "enum": [
              "HR"
            ],
            "type": "string"
          },
          {
            "description": "Cuba",
            "enum": [
              "CU"
            ],
            "type": "string"
          },
          {
            "description": "Curaçao",
            "enum": [
              "CW"
            ],
            "type": "string"
          },
          {
            "description": "Cyprus",
            "enum": [
              "CY"
            ],
            "type": "string"
          },
          {
            "description": "Czechia",
            "enum": [
              "CZ"
            ],
            "type": "string"
          },
          {
            "description": "Denmark",
            "enum": [
              "DK"
            ],
            "type": "string"
          },
          {
            "description": "Djibouti",
            "enum": [
              "DJ"
            ],
            "type": "string"
          },
          {
            "description": "Dominica",
            "enum": [
              "DM"
            ],
            "type": "string"
          },
          {
            "description": "Dominican Republic",
            "enum": [
              "DO"
            ],
            "type": "string"
          },
          {
            "description": "Ecuador",
            "enum": [
              "EC"
            ],
            "type": "string"
          },
          {
            "description": "Egypt",
            "enum": [
              "EG"
            ],
            "type": "string"
          },
          {
            "description": "El Salvador",
            "enum": [
              "SV"
            ],
            "type": "string"
          },
          {
            "description": "Equatorial Guinea",
            "enum": [
              "GQ"
            ],
            "type": "string"
          },
          {
            "description": "Eritrea",
            "enum": [
              "ER"
            ],
            "type": "string"
          },
          {
            "description": "Estonia",
            "enum": [
              "EE"
            ],
            "type": "string"
          },
          {
            "description": "Ethiopia",
            "enum": [
              "ET"
            ],
            "type": "string"
          },
          {
            "description": "Falkland Islands (Malvinas)",
            "enum": [
              "FK"
            ],
            "type": "string"
          },
          {
            "description": "Faroe Islands",
            "enum": [
              "FO"
            ],
            "type": "string"
          },
          {
            "description": "Fiji",
            "enum": [
              "FJ"
            ],
            "type": "string"
          },
          {
            "description": "Finland",
            "enum": [
              "FI"
            ],
            "type": "string"
          },
          {
            "description": "France",
            "enum": [
              "FR"
            ],
            "type": "string"
          },
          {
            "description": "French Guiana",
            "enum": [
              "GF"
            ],
            "type": "string"
          },
          {
            "description": "French Polynesia",
            "enum": [
              "PF"
            ],
            "type": "string"
          },
          {
            "description": "French Southern Territories",
            "enum": [
              "TF"
            ],
            "type": "string"
          },
          {
            "description": "Gabon",
            "enum": [
              "GA"
            ],
            "type": "string"
          },
          {
            "description": "Gambia",
            "enum": [
              "GM"
            ],
            "type": "string"
          },
          {
            "description": "Georgia",
            "enum": [
              "GE"
            ],
            "type": "string"
          },
          {
            "description": "Germany",
            "enum": [
              "DE"
            ],
            "type": "string"
          },
          {
            "description": "Ghana",
            "enum": [
              "GH"
            ],
            "type": "string"
          },
          {
            "description": "Gibraltar",
            "enum": [
              "GI"
            ],
            "type": "string"
          },
          {
            "description": "Greece",
            "enum": [
              "GR"
            ],
            "type": "string"
          },
          {
            "description": "Greenland",
            "enum": [
              "GL"
            ],
            "type": "string"
          },
          {
            "description": "Grenada",
            "enum": [
              "GD"
            ],
            "type": "string"
          },
          {
            "description": "Guadeloupe",
            "enum": [
              "GP"
            ],
            "type": "string"
          },
          {
            "description": "Guam",
            "enum": [
              "GU"
            ],
            "type": "string"
          },
          {
            "description": "Guatemala",
            "enum": [
              "GT"
            ],
            "type": "string"
          },
          {
            "description": "Guernsey",
            "enum": [
              "GG"
            ],
            "type": "string"
          },
          {
            "description": "Guinea",
            "enum": [
              "GN"
            ],
            "type": "string"
          },
          {
            "description": "Guinea-Bissau",
            "enum": [
              "GW"
            ],
            "type": "string"
          },
          {
            "description": "Guyana",
            "enum": [
              "GY"
            ],
            "type": "string"
          },
          {
            "description": "Haiti",
            "enum": [
              "HT"
            ],
            "type": "string"
          },
          {
            "description": "Heard Island and McDonald Islands",
            "enum": [
              "HM"
            ],
            "type": "string"
          },
          {
            "description": "Holy See",
            "enum": [
              "VA"
            ],
            "type": "string"
          },
          {
            "description": "Honduras",
            "enum": [
              "HN"
            ],
            "type": "string"
          },
          {
            "description": "Hong Kong",
            "enum": [
              "HK"
            ],
            "type": "string"
          },
          {
            "description": "Hungary",
            "enum": [
              "HU"
            ],
            "type": "string"
          },
          {
            "description": "Iceland",
            "enum": [
              "IS"
            ],
            "type": "string"
          },
          {
            "description": "India",
            "enum": [
              "IN"
            ],
            "type": "string"
          },
          {
            "description": "Indonesia",
            "enum": [
              "ID"
            ],
            "type": "string"
          },
          {
            "description": "Iran (Islamic Republic of)",
            "enum": [
              "IR"
            ],
            "type": "string"
          },
          {
            "description": "Iraq",
            "enum": [
              "IQ"
            ],
            "type": "string"
          },
          {
            "description": "Ireland",
            "enum": [
              "IE"
            ],
            "type": "string"
          },
          {
            "description": "Isle of Man",
            "enum": [
              "IM"
            ],
            "type": "string"
          },
          {
            "description": "Israel",
            "enum": [
              "IL"
            ],
            "type": "string"
          },
          {
            "description": "Italy",
            "enum": [
              "IT"
            ],
            "type": "string"
          },
          {
            "description": "Jamaica",
            "enum": [
              "JM"
            ],
            "type": "string"
          },
          {
            "description": "Japan",
            "enum": [
              "JP"
            ],
            "type": "string"
          },
          {
            "description": "Jersey",
            "enum": [
              "JE"
            ],
            "type": "string"
          },
          {
            "description": "Jordan",
            "enum": [
              "JO"
            ],
            "type": "string"
          },
          {
            "description": "Kazakhstan",
            "enum": [
              "KZ"
            ],
            "type": "string"
          },
          {
            "description": "Kenya",
            "enum": [
              "KE"
            ],
            "type": "string"
          },
          {
            "description": "Kiribati",
            "enum": [
              "KI"
            ],
            "type": "string"
          },
          {
            "description": "Korea (Democratic People's Republic of)",
            "enum": [
              "KP"
            ],
            "type": "string"
          },
          {
            "description": "Korea (Republic of)",
            "enum": [
              "KR"
            ],
            "type": "string"
          },
          {
            "description": "Kuwait",
            "enum": [
              "KW"
            ],
            "type": "string"
          },
          {
            "description": "Kyrgyzstan",
            "enum": [
              "KG"
            ],
            "type": "string"
          },
          {
            "description": "Lao People's Democratic Republic",
            "enum": [
              "LA"
            ],
            "type": "string"
          },
          {
            "description": "Latvia",
            "enum": [
              "LV"
            ],
            "type": "string"
          },
          {
            "description": "Lebanon",
            "enum": [
              "LB"
            ],
            "type": "string"
          },
          {
            "description": "Lesotho",
            "enum": [
              "LS"
            ],
            "type": "string"
          },
          {
            "description": "Liberia",
            "enum": [
              "LR"
            ],
            "type": "string"
          },
          {
            "description": "Libya",
            "enum": [
              "LY"
            ],
            "type": "string"
          },
          {
            "description": "Liechtenstein",
            "enum": [
              "LI"
            ],
            "type": "string"
          },
          {
            "description": "Lithuania",
            "enum": [
              "LT"
            ],
            "type": "string"
          },
          {
            "description": "Luxembourg",
            "enum": [
              "LU"
            ],
            "type": "string"
          },
          {
            "description": "Macao",
            "enum": [
              "MO"
            ],
            "type": "string"
          },
          {
            "description": "Macedonia (the former Yugoslav Republic of)",
            "enum": [
              "MK"
            ],
            "type": "string"
          },
          {
            "description": "Madagascar",
            "enum": [
              "MG"
            ],
            "type": "string"
          },
          {
            "description": "Malawi",
            "enum": [
              "MW"
            ],
            "type": "string"
          },
          {
            "description": "Malaysia",
            "enum": [
              "MY"
            ],
            "type": "string"
          },
          {
            "description": "Maldives",
            "enum": [
              "MV"
            ],
            "type": "string"
          },
          {
            "description": "Mali",
            "enum": [
              "ML"
            ],
            "type": "string"
          },
          {
            "description": "Malta",
            "enum": [
              "MT"
            ],
            "type": "string"
          },
          {
            "description": "Marshall Islands",
            "enum": [
              "MH"
            ],
            "type": "string"
          },
          {
            "description": "Martinique",
            "enum": [
              "MQ"
            ],
            "type": "string"
          },
          {
            "description": "Mauritania",
            "enum": [
              "MR"
            ],
            "type": "string"
          },
          {
            "description": "Mauritius",
            "enum": [
              "MU"
            ],
            "type": "string"
          },
          {
            "description": "Mayotte",
            "enum": [
              "YT"
            ],
            "type": "string"
          },
          {
            "description": "Mexico",
            "enum": [
              "MX"
            ],
            "type": "string"
          },
          {
            "description": "Micronesia (Federated States of)",
            "enum": [
              "FM"
            ],
            "type": "string"
          },
          {
            "description": "Moldova (Republic of)",
            "enum": [
              "MD"
            ],
            "type": "string"
          },
          {
            "description": "Monaco",
            "enum": [
              "MC"
            ],
            "type": "string"
          },
          {
            "description": "Mongolia",
            "enum": [
              "MN"
            ],
            "type": "string"
          },
          {
            "description": "Montenegro",
            "enum": [
              "ME"
            ],
            "type": "string"
          },
          {
            "description": "Montserrat",
            "enum": [
              "MS"
            ],
            "type": "string"
          },
          {
            "description": "Morocco",
            "enum": [
              "MA"
            ],
            "type": "string"
          },
          {
            "description": "Mozambique",
            "enum": [
              "MZ"
            ],
            "type": "string"
          },
          {
            "description": "Myanmar",
            "enum": [
              "MM"
            ],
            "type": "string"
          },
          {
            "description": "Namibia",
            "enum": [
              "NA"
            ],
            "type": "string"
          },
          {
            "description": "Nauru",
            "enum": [
              "NR"
            ],
            "type": "string"
          },
          {
            "description": "Nepal",
            "enum": [
              "NP"
            ],
            "type": "string"
          },
          {
            "description": "Netherlands",
            "enum": [
              "NL"
            ],
            "type": "string"
          },
          {
            "description": "New Caledonia",
            "enum": [
              "NC"
            ],
            "type": "string"
          },
          {
            "description": "New Zealand",
            "enum": [
              "NZ"
            ],
            "type": "string"
          },
          {
            "description": "Nicaragua",
            "enum": [
              "NI"
            ],
            "type": "string"
          },
          {
            "description": "Niger",
            "enum": [
              "NE"
            ],
            "type": "string"
          },
          {
            "description": "Nigeria",
            "enum": [
              "NG"
            ],
            "type": "string"
          },
          {
            "description": "Niue",
            "enum": [
              "NU"
            ],
            "type": "string"
          },
          {
            "description": "Norfolk Island",
            "enum": [
              "NF"
            ],
            "type": "string"
          },
          {
            "description": "Northern Mariana Islands",
            "enum": [
              "MP"
            ],
            "type": "string"
          },
          {
            "description": "Norway",
            "enum": [
              "NO"
            ],
            "type": "string"
          },
          {
            "description": "Oman",
            "enum": [
              "OM"
            ],
            "type": "string"
          },
          {
            "description": "Pakistan",
            "enum": [
              "PK"
            ],
            "type": "string"
          },
          {
            "description": "Palau",
            "enum": [
              "PW"
            ],
            "type": "string"
          },
          {
            "description": "Palestine, State of",
            "enum": [
              "PS"
            ],
            "type": "string"
          },
          {
            "description": "Panama",
            "enum": [
              "PA"
            ],
            "type": "string"
          },
          {
            "description": "Papua New Guinea",
            "enum": [
              "PG"
            ],
            "type": "string"
          },
          {
            "description": "Paraguay",
            "enum": [
              "PY"
            ],
            "type": "string"
          },
          {
            "description": "Peru",
            "enum": [
              "PE"
            ],
            "type": "string"
          },
          {
            "description": "Philippines",
            "enum": [
              "PH"
            ],
            "type": "string"
          },
          {
            "description": "Pitcairn",
            "enum": [
              "PN"
            ],
            "type": "string"
          },
          {
            "description": "Poland",
            "enum": [
              "PL"
            ],
            "type": "string"
          },
          {
            "description": "Portugal",
            "enum": [
              "PT"
            ],
            "type": "string"
          },
          {
            "description": "Puerto Rico",
            "enum": [
              "PR"
            ],
            "type": "string"
          },
          {
            "description": "Qatar",
            "enum": [
              "QA"
            ],
            "type": "string"
          },
          {
            "description": "Réunion",
            "enum": [
              "RE"
            ],
            "type": "string"
          },
          {
            "description": "Romania",
            "enum": [
              "RO"
            ],
            "type": "string"
          },
          {
            "description": "Russian Federation",
            "enum": [
              "RU"
            ],
            "type": "string"
          },
          {
            "description": "Rwanda",
            "enum": [
              "RW"
            ],
            "type": "string"
          },
          {
            "description": "Saint Barthélemy",
            "enum": [
              "BL"
            ],
            "type": "string"
          },
          {
            "description": "Saint Helena, Ascension and Tristan da Cunha",
            "enum": [
              "SH"
            ],
            "type": "string"
          },
          {
            "description": "Saint Kitts and Nevis",
            "enum": [
              "KN"
            ],
            "type": "string"
          },
          {
            "description": "Saint Lucia",
            "enum": [
              "LC"
            ],
            "type": "string"
          },
          {
            "description": "Saint Martin (French part)",
            "enum": [
              "MF"
            ],
            "type": "string"
          },
          {
            "description": "Saint Pierre and Miquelon",
            "enum": [
              "PM"
            ],
            "type": "string"
          },
          {
            "description": "Saint Vincent and the Grenadines",
            "enum": [
              "VC"
            ],
            "type": "string"
          },
          {
            "description": "Samoa",
            "enum": [
              "WS"
            ],
            "type": "string"
          },
          {
            "description": "San Marino",
            "enum": [
              "SM"
            ],
            "type": "string"
          },
          {
            "description": "Sao Tome and Principe",
            "enum": [
              "ST"
            ],
            "type": "string"
          },
          {
            "description": "Saudi Arabia",
            "enum": [
              "SA"
            ],
            "type": "string"
          },
          {
            "description": "Senegal",
            "enum": [
              "SN"
            ],
            "type": "string"
          },
          {
            "description": "Serbia",
            "enum": [
              "RS"
            ],
            "type": "string"
          },
          {
            "description": "Seychelles",
            "enum": [
              "SC"
            ],
            "type": "string"
          },
          {
            "description": "Sierra Leone",
            "enum": [
              "SL"
            ],
            "type": "string"
          },
          {
            "description": "Singapore",
            "enum": [
              "SG"
            ],
            "type": "string"
          },
          {
            "description": "Sint Maarten (Dutch part)",
            "enum": [
              "SX"
            ],
            "type": "string"
          },
          {
            "description": "Slovakia",
            "enum": [
              "SK"
            ],
            "type": "string"
          },
          {
            "description": "Slovenia",
            "enum": [
              "SI"
            ],
            "type": "string"
          },
          {
            "description": "Solomon Islands",
            "enum": [
              "SB"
            ],
            "type": "string"
          },
          {
            "description": "Somalia",
            "enum": [
              "SO"
            ],
            "type": "string"
          },
          {
            "description": "South Africa",
            "enum": [
              "ZA"
            ],
            "type": "string"
          },
          {
            "description": "South Georgia and the South Sandwich Islands",
            "enum": [
              "GS"
            ],
            "type": "string"
          },
          {
            "description": "South Sudan",
            "enum": [
              "SS"
            ],
            "type": "string"
          },
          {
            "description": "Spain",
            "enum": [
              "ES"
            ],
            "type": "string"
          },
          {
            "description": "Sri Lanka",
            "enum": [
              "LK"
            ],
            "type": "string"
          },
          {
            "description": "Sudan",
            "enum": [
              "SD"
            ],
            "type": "string"
          },
          {
            "description": "Suriname",
            "enum": [
              "SR"
            ],
            "type": "string"
          },
          {
            "description": "Svalbard and Jan Mayen",
            "enum": [
              "SJ"
            ],
            "type": "string"
          },
          {
            "description": "Swaziland",
            "enum": [
              "SZ"
            ],
            "type": "string"
          },
          {
            "description": "Sweden",
            "enum": [
              "SE"
            ],
            "type": "string"
          },
          {
            "description": "Switzerland",
            "enum": [
              "CH"
            ],
            "type": "string"
          },
          {
            "description": "Syrian Arab Republic",
            "enum": [
              "SY"
            ],
            "type": "string"
          },
          {
            "description": "Taiwan, Province of China",
            "enum": [
              "TW"
            ],
            "type": "string"
          },
          {
            "description": "Tajikistan",
            "enum": [
              "TJ"
            ],
            "type": "string"
          },
          {
            "description": "Tanzania, United Republic of",
            "enum": [
              "TZ"
            ],
            "type": "string"
          },
          {
            "description": "Thailand",
            "enum": [
              "TH"
            ],
            "type": "string"
          },
          {
            "description": "Timor-Leste",
            "enum": [
              "TL"
            ],
            "type": "string"
          },
          {
            "description": "Togo",
            "enum": [
              "TG"
            ],
            "type": "string"
          },
          {
            "description": "Tokelau",
            "enum": [
              "TK"
            ],
            "type": "string"
          },
          {
            "description": "Tonga",
            "enum": [
              "TO"
            ],
            "type": "string"
          },
          {
            "description": "Trinidad and Tobago",
            "enum": [
              "TT"
            ],
            "type": "string"
          },
          {
            "description": "Tunisia",
            "enum": [
              "TN"
            ],
            "type": "string"
          },
          {
            "description": "Turkey",
            "enum": [
              "TR"
            ],
            "type": "string"
          },
          {
            "description": "Turkmenistan",
            "enum": [
              "TM"
            ],
            "type": "string"
          },
          {
            "description": "Turks and Caicos Islands",
            "enum": [
              "TC"
            ],
            "type": "string"
          },
          {
            "description": "Tuvalu",
            "enum": [
              "TV"
            ],
            "type": "string"
          },
          {
            "description": "Uganda",
            "enum": [
              "UG"
            ],
            "type": "string"
          },
          {
            "description": "Ukraine",
            "enum": [
              "UA"
            ],
            "type": "string"
          },
          {
            "description": "United Arab Emirates",
            "enum": [
              "AE"
            ],
            "type": "string"
          },
          {
            "description": "United Kingdom of Great Britain and Northern Ireland",
            "enum": [
              "GB"
            ],
            "type": "string"
          },
          {
            "description": "United States of America",
            "enum": [
              "US"
            ],
            "type": "string"
          },
          {
            "description": "United States Minor Outlying Islands",
            "enum": [
              "UM"
            ],
            "type": "string"
          },
          {
            "description": "Uruguay",
            "enum": [
              "UY"
            ],
            "type": "string"
          },
          {
            "description": "Uzbekistan",
            "enum": [
              "UZ"
            ],
            "type": "string"
          },
          {
            "description": "Vanuatu",
            "enum": [
              "VU"
            ],
            "type": "string"
          },
          {
            "description": "Venezuela (Bolivarian Republic of)",
            "enum": [
              "VE"
            ],
            "type": "string"
          },
          {
            "description": "Viet Nam",
            "enum": [
              "VN"
            ],
            "type": "string"
          },
          {
            "description": "Virgin Islands (British)",
            "enum": [
              "VG"
            ],
            "type": "string"
          },
          {
            "description": "Virgin Islands (U.S.)",
            "enum": [
              "VI"
            ],
            "type": "string"
          },
          {
            "description": "Wallis and Futuna",
            "enum": [
              "WF"
            ],
            "type": "string"
          },
          {
            "description": "Western Sahara",
            "enum": [
              "EH"
            ],
            "type": "string"
          },
          {
            "description": "Yemen",
            "enum": [
              "YE"
            ],
            "type": "string"
          },
          {
            "description": "Zambia",
            "enum": [
              "ZM"
            ],
            "type": "string"
          },
          {
            "description": "Zimbabwe",
            "enum": [
              "ZW"
            ],
            "type": "string"
          }
        ]
      },
      "Coupon": {
        "description": "The resource representing a Coupon.",
        "properties": {
          "amount_off": {
            "description": "Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.",
            "format": "money-usd",
            "nullable": true,
            "title": "Number",
            "type": "number"
          },
          "deleted": {
            "default": false,
            "description": "Always true for a deleted object.",
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "percent_off": {
            "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon.\n\nFor example, a coupon with percent_off of 50 will make a %s100 invoice %s50 instead.",
            "format": "double",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "CreatedAtSortMode": {
        "description": "Supported set of sort modes for scanning by created_at only.\n\nCurrently, we only support scanning in ascending order.",
        "oneOf": [
          {
            "description": "sort in increasing order of \"created_at\"",
            "enum": [
              "created-at-ascending"
            ],
            "type": "string"
          },
          {
            "description": "sort in decreasing order of \"created_at\"",
            "enum": [
              "created-at-descending"
            ],
            "type": "string"
          }
        ]
      },
      "Currency": {
        "description": "Currency is the list of supported currencies.\n\nThis comes from the Stripe API docs: For more details see <https://support.stripe.com/questions/which-currencies-does-stripe-support>.",
        "oneOf": [
          {
            "description": "United Arab Emirates Dirham",
            "enum": [
              "aed"
            ],
            "type": "string"
          },
          {
            "description": "Afghan Afghani",
            "enum": [
              "afn"
            ],
            "type": "string"
          },
          {
            "description": "Albanian Lek",
            "enum": [
              "all"
            ],
            "type": "string"
          },
          {
            "description": "Armenian Dram",
            "enum": [
              "amd"
            ],
            "type": "string"
          },
          {
            "description": "Netherlands Antillean Gulden",
            "enum": [
              "ang"
            ],
            "type": "string"
          },
          {
            "description": "Angolan Kwanza",
            "enum": [
              "aoa"
            ],
            "type": "string"
          },
          {
            "description": "Argentine Peso",
            "enum": [
              "ars"
            ],
            "type": "string"
          },
          {
            "description": "Australian Dollar",
            "enum": [
              "aud"
            ],
            "type": "string"
          },
          {
            "description": "Aruban Florin",
            "enum": [
              "awg"
            ],
            "type": "string"
          },
          {
            "description": "Azerbaijani Manat",
            "enum": [
              "azn"
            ],
            "type": "string"
          },
          {
            "description": "Bosnia & Herzegovina Convertible Mark",
            "enum": [
              "bam"
            ],
            "type": "string"
          },
          {
            "description": "Barbadian Dollar",
            "enum": [
              "bbd"
            ],
            "type": "string"
          },
          {
            "description": "Bangladeshi Taka",
            "enum": [
              "bdt"
            ],
            "type": "string"
          },
          {
            "description": "Bulgarian Lev",
            "enum": [
              "bgn"
            ],
            "type": "string"
          },
          {
            "description": "Burundian Franc",
            "enum": [
              "bif"
            ],
            "type": "string"
          },
          {
            "description": "Bermudian Dollar",
            "enum": [
              "bmd"
            ],
            "type": "string"
          },
          {
            "description": "Brunei Dollar",
            "enum": [
              "bnd"
            ],
            "type": "string"
          },
          {
            "description": "Bolivian Boliviano",
            "enum": [
              "bob"
            ],
            "type": "string"
          },
          {
            "description": "Brazilian Real",
            "enum": [
              "brl"
            ],
            "type": "string"
          },
          {
            "description": "Bahamian Dollar",
            "enum": [
              "bsd"
            ],
            "type": "string"
          },
          {
            "description": "Botswana Pula",
            "enum": [
              "bwp"
            ],
            "type": "string"
          },
          {
            "description": "Belize Dollar",
            "enum": [
              "bzd"
            ],
            "type": "string"
          },
          {
            "description": "Canadian Dollar",
            "enum": [
              "cad"
            ],
            "type": "string"
          },
          {
            "description": "Congolese Franc",
            "enum": [
              "cdf"
            ],
            "type": "string"
          },
          {
            "description": "Swiss Franc",
            "enum": [
              "chf"
            ],
            "type": "string"
          },
          {
            "description": "Chilean Peso",
            "enum": [
              "clp"
            ],
            "type": "string"
          },
          {
            "description": "Chinese Renminbi Yuan",
            "enum": [
              "cny"
            ],
            "type": "string"
          },
          {
            "description": "Colombian Peso",
            "enum": [
              "cop"
            ],
            "type": "string"
          },
          {
            "description": "Costa Rican Colón",
            "enum": [
              "crc"
            ],
            "type": "string"
          },
          {
            "description": "Cape Verdean Escudo",
            "enum": [
              "cve"
            ],
            "type": "string"
          },
          {
            "description": "Czech Koruna",
            "enum": [
              "czk"
            ],
            "type": "string"
          },
          {
            "description": "Djiboutian Franc",
            "enum": [
              "djf"
            ],
            "type": "string"
          },
          {
            "description": "Danish Krone",
            "enum": [
              "dkk"
            ],
            "type": "string"
          },
          {
            "description": "Dominican Peso",
            "enum": [
              "dop"
            ],
            "type": "string"
          },
          {
            "description": "Algerian Dinar",
            "enum": [
              "dzd"
            ],
            "type": "string"
          },
          {
            "description": "Estonian Kroon",
            "enum": [
              "eek"
            ],
            "type": "string"
          },
          {
            "description": "Egyptian Pound",
            "enum": [
              "egp"
            ],
            "type": "string"
          },
          {
            "description": "Ethiopian Birr",
            "enum": [
              "etb"
            ],
            "type": "string"
          },
          {
            "description": "Euro",
            "enum": [
              "eur"
            ],
            "type": "string"
          },
          {
            "description": "Fijian Dollar",
            "enum": [
              "fjd"
            ],
            "type": "string"
          },
          {
            "description": "Falkland Islands Pound",
            "enum": [
              "fkp"
            ],
            "type": "string"
          },
          {
            "description": "British Pound",
            "enum": [
              "gbp"
            ],
            "type": "string"
          },
          {
            "description": "Georgian Lari",
            "enum": [
              "gel"
            ],
            "type": "string"
          },
          {
            "description": "Gibraltar Pound",
            "enum": [
              "gip"
            ],
            "type": "string"
          },
          {
            "description": "Gambian Dalasi",
            "enum": [
              "gmd"
            ],
            "type": "string"
          },
          {
            "description": "Guinean Franc",
            "enum": [
              "gnf"
            ],
            "type": "string"
          },
          {
            "description": "Guatemalan Quetzal",
            "enum": [
              "gtq"
            ],
            "type": "string"
          },
          {
            "description": "Guyanese Dollar",
            "enum": [
              "gyd"
            ],
            "type": "string"
          },
          {
            "description": "Hong Kong Dollar",
            "enum": [
              "hkd"
            ],
            "type": "string"
          },
          {
            "description": "Honduran Lempira",
            "enum": [
              "hnl"
            ],
            "type": "string"
          },
          {
            "description": "Croatian Kuna",
            "enum": [
              "hrk"
            ],
            "type": "string"
          },
          {
            "description": "Haitian Gourde",
            "enum": [
              "htg"
            ],
            "type": "string"
          },
          {
            "description": "Hungarian Forint",
            "enum": [
              "huf"
            ],
            "type": "string"
          },
          {
            "description": "Indonesian Rupiah",
            "enum": [
              "idr"
            ],
            "type": "string"
          },
          {
            "description": "Israeli New Sheqel",
            "enum": [
              "ils"
            ],
            "type": "string"
          },
          {
            "description": "Indian Rupee",
            "enum": [
              "inr"
            ],
            "type": "string"
          },
          {
            "description": "Icelandic Króna",
            "enum": [
              "isk"
            ],
            "type": "string"
          },
          {
            "description": "Jamaican Dollar",
            "enum": [
              "jmd"
            ],
            "type": "string"
          },
          {
            "description": "Japanese Yen",
            "enum": [
              "jpy"
            ],
            "type": "string"
          },
          {
            "description": "Kenyan Shilling",
            "enum": [
              "kes"
            ],
            "type": "string"
          },
          {
            "description": "Kyrgyzstani Som",
            "enum": [
              "kgs"
            ],
            "type": "string"
          },
          {
            "description": "Cambodian Riel",
            "enum": [
              "khr"
            ],
            "type": "string"
          },
          {
            "description": "Comorian Franc",
            "enum": [
              "kmf"
            ],
            "type": "string"
          },
          {
            "description": "South Korean Won",
            "enum": [
              "krw"
            ],
            "type": "string"
          },
          {
            "description": "Cayman Islands Dollar",
            "enum": [
              "kyd"
            ],
            "type": "string"
          },
          {
            "description": "Kazakhstani Tenge",
            "enum": [
              "kzt"
            ],
            "type": "string"
          },
          {
            "description": "Lao Kip",
            "enum": [
              "lak"
            ],
            "type": "string"
          },
          {
            "description": "Lebanese Pound",
            "enum": [
              "lbp"
            ],
            "type": "string"
          },
          {
            "description": "Sri Lankan Rupee",
            "enum": [
              "lkr"
            ],
            "type": "string"
          },
          {
            "description": "Liberian Dollar",
            "enum": [
              "lrd"
            ],
            "type": "string"
          },
          {
            "description": "Lesotho Loti",
            "enum": [
              "lsl"
            ],
            "type": "string"
          },
          {
            "description": "Lithuanian Litas",
            "enum": [
              "ltl"
            ],
            "type": "string"
          },
          {
            "description": "Latvian Lats",
            "enum": [
              "lvl"
            ],
            "type": "string"
          },
          {
            "description": "Moroccan Dirham",
            "enum": [
              "mad"
            ],
            "type": "string"
          },
          {
            "description": "Moldovan Leu",
            "enum": [
              "mdl"
            ],
            "type": "string"
          },
          {
            "description": "Malagasy Ariary",
            "enum": [
              "mga"
            ],
            "type": "string"
          },
          {
            "description": "Macedonian Denar",
            "enum": [
              "mkd"
            ],
            "type": "string"
          },
          {
            "description": "Mongolian Tögrög",
            "enum": [
              "mnt"
            ],
            "type": "string"
          },
          {
            "description": "Macanese Pataca",
            "enum": [
              "mop"
            ],
            "type": "string"
          },
          {
            "description": "Mauritanian Ouguiya",
            "enum": [
              "mro"
            ],
            "type": "string"
          },
          {
            "description": "Mauritian Rupee",
            "enum": [
              "mur"
            ],
            "type": "string"
          },
          {
            "description": "Maldivian Rufiyaa",
            "enum": [
              "mvr"
            ],
            "type": "string"
          },
          {
            "description": "Malawian Kwacha",
            "enum": [
              "mwk"
            ],
            "type": "string"
          },
          {
            "description": "Mexican Peso",
            "enum": [
              "mxn"
            ],
            "type": "string"
          },
          {
            "description": "Malaysian Ringgit",
            "enum": [
              "myr"
            ],
            "type": "string"
          },
          {
            "description": "Mozambican Metical",
            "enum": [
              "mzn"
            ],
            "type": "string"
          },
          {
            "description": "Namibian Dollar",
            "enum": [
              "nad"
            ],
            "type": "string"
          },
          {
            "description": "Nigerian Naira",
            "enum": [
              "ngn"
            ],
            "type": "string"
          },
          {
            "description": "Nicaraguan Córdoba",
            "enum": [
              "nio"
            ],
            "type": "string"
          },
          {
            "description": "Norwegian Krone",
            "enum": [
              "nok"
            ],
            "type": "string"
          },
          {
            "description": "Nepalese Rupee",
            "enum": [
              "npr"
            ],
            "type": "string"
          },
          {
            "description": "New Zealand Dollar",
            "enum": [
              "nzd"
            ],
            "type": "string"
          },
          {
            "description": "Panamanian Balboa",
            "enum": [
              "pab"
            ],
            "type": "string"
          },
          {
            "description": "Peruvian Nuevo Sol",
            "enum": [
              "pen"
            ],
            "type": "string"
          },
          {
            "description": "Papua New Guinean Kina",
            "enum": [
              "pgk"
            ],
            "type": "string"
          },
          {
            "description": "Philippine Peso",
            "enum": [
              "php"
            ],
            "type": "string"
          },
          {
            "description": "Pakistani Rupee",
            "enum": [
              "pkr"
            ],
            "type": "string"
          },
          {
            "description": "Polish Złoty",
            "enum": [
              "pln"
            ],
            "type": "string"
          },
          {
            "description": "Paraguayan Guaraní",
            "enum": [
              "pyg"
            ],
            "type": "string"
          },
          {
            "description": "Qatari Riyal",
            "enum": [
              "qar"
            ],
            "type": "string"
          },
          {
            "description": "Romanian Leu",
            "enum": [
              "ron"
            ],
            "type": "string"
          },
          {
            "description": "Serbian Dinar",
            "enum": [
              "rsd"
            ],
            "type": "string"
          },
          {
            "description": "Russian Ruble",
            "enum": [
              "rub"
            ],
            "type": "string"
          },
          {
            "description": "Rwandan Franc",
            "enum": [
              "rwf"
            ],
            "type": "string"
          },
          {
            "description": "Saudi Riyal",
            "enum": [
              "sar"
            ],
            "type": "string"
          },
          {
            "description": "Solomon Islands Dollar",
            "enum": [
              "sbd"
            ],
            "type": "string"
          },
          {
            "description": "Seychellois Rupee",
            "enum": [
              "scr"
            ],
            "type": "string"
          },
          {
            "description": "Swedish Krona",
            "enum": [
              "sek"
            ],
            "type": "string"
          },
          {
            "description": "Singapore Dollar",
            "enum": [
              "sgd"
            ],
            "type": "string"
          },
          {
            "description": "Saint Helenian Pound",
            "enum": [
              "shp"
            ],
            "type": "string"
          },
          {
            "description": "Sierra Leonean Leone",
            "enum": [
              "sll"
            ],
            "type": "string"
          },
          {
            "description": "Somali Shilling",
            "enum": [
              "sos"
            ],
            "type": "string"
          },
          {
            "description": "Surinamese Dollar",
            "enum": [
              "srd"
            ],
            "type": "string"
          },
          {
            "description": "São Tomé and Príncipe Dobra",
            "enum": [
              "std"
            ],
            "type": "string"
          },
          {
            "description": "Salvadoran Colón",
            "enum": [
              "svc"
            ],
            "type": "string"
          },
          {
            "description": "Swazi Lilangeni",
            "enum": [
              "szl"
            ],
            "type": "string"
          },
          {
            "description": "Thai Baht",
            "enum": [
              "thb"
            ],
            "type": "string"
          },
          {
            "description": "Tajikistani Somoni",
            "enum": [
              "tjs"
            ],
            "type": "string"
          },
          {
            "description": "Tongan Paʻanga",
            "enum": [
              "top"
            ],
            "type": "string"
          },
          {
            "description": "Turkish Lira",
            "enum": [
              "try"
            ],
            "type": "string"
          },
          {
            "description": "Trinidad and Tobago Dollar",
            "enum": [
              "ttd"
            ],
            "type": "string"
          },
          {
            "description": "New Taiwan Dollar",
            "enum": [
              "twd"
            ],
            "type": "string"
          },
          {
            "description": "Tanzanian Shilling",
            "enum": [
              "tzs"
            ],
            "type": "string"
          },
          {
            "description": "Ukrainian Hryvnia",
            "enum": [
              "uah"
            ],
            "type": "string"
          },
          {
            "description": "Ugandan Shilling",
            "enum": [
              "ugx"
            ],
            "type": "string"
          },
          {
            "description": "United States Dollar",
            "enum": [
              "usd"
            ],
            "type": "string"
          },
          {
            "description": "Uruguayan Peso",
            "enum": [
              "uyu"
            ],
            "type": "string"
          },
          {
            "description": "Uzbekistani Som",
            "enum": [
              "uzs"
            ],
            "type": "string"
          },
          {
            "description": "Venezuelan Bolívar",
            "enum": [
              "vef"
            ],
            "type": "string"
          },
          {
            "description": "Vietnamese Đồng",
            "enum": [
              "vnd"
            ],
            "type": "string"
          },
          {
            "description": "Vanuatu Vatu",
            "enum": [
              "vuv"
            ],
            "type": "string"
          },
          {
            "description": "Samoan Tala",
            "enum": [
              "wst"
            ],
            "type": "string"
          },
          {
            "description": "Central African Cfa Franc",
            "enum": [
              "xaf"
            ],
            "type": "string"
          },
          {
            "description": "East Caribbean Dollar",
            "enum": [
              "xcd"
            ],
            "type": "string"
          },
          {
            "description": "West African Cfa Franc",
            "enum": [
              "xof"
            ],
            "type": "string"
          },
          {
            "description": "Cfp Franc",
            "enum": [
              "xpf"
            ],
            "type": "string"
          },
          {
            "description": "Yemeni Rial",
            "enum": [
              "yer"
            ],
            "type": "string"
          },
          {
            "description": "South African Rand",
            "enum": [
              "zar"
            ],
            "type": "string"
          },
          {
            "description": "Zambian Kwacha",
            "enum": [
              "zmw"
            ],
            "type": "string"
          }
        ]
      },
      "Customer": {
        "description": "The resource representing a payment \"Customer\".",
        "properties": {
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NewAddress"
              }
            ],
            "description": "The customer's address.",
            "nullable": true
          },
          "balance": {
            "default": 0.0,
            "description": "Current balance, if any, being stored on the customer in the payments service.\n\nIf negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.",
            "format": "money-usd",
            "title": "Number",
            "type": "number"
          },
          "created_at": {
            "description": "Time at which the object was created.",
            "format": "date-time",
            "type": "string"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Currency"
              }
            ],
            "default": "usd",
            "description": "Three-letter ISO code for the currency the customer can be charged in for recurring billing purposes."
          },
          "delinquent": {
            "default": false,
            "description": "When the customer's latest invoice is billed by charging automatically, `delinquent` is `true` if the invoice's latest charge failed.\n\nWhen the customer's latest invoice is billed by sending an invoice, `delinquent` is `true` if the invoice isn't paid by its due date.  If an invoice is marked uncollectible by dunning, `delinquent` doesn't get reset to `false`.",
            "type": "boolean"
          },
          "email": {
            "description": "The customer's email address.",
            "format": "email",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "default": {},
            "description": "Set of key-value pairs.",
            "type": "object"
          },
          "name": {
            "description": "The customer's full name or business name.",
            "type": "string"
          },
          "phone": {
            "default": "",
            "description": "The customer's phone number.",
            "format": "phone",
            "title": "String",
            "type": "string"
          }
        },
        "required": [
          "created_at"
        ],
        "type": "object"
      },
      "CustomerBalance": {
        "description": "A balance for a user.\n\nThis holds information about the financial balance for the user.",
        "properties": {
          "created_at": {
            "description": "The date and time the balance was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier for the balance."
          },
          "monthly_credits_remaining": {
            "description": "The monthy credits remaining in the balance. This gets re-upped every month, but if the credits are not used for a month they do not carry over to the next month. It is a stable amount granted to the user per month.",
            "format": "money-usd",
            "title": "Number",
            "type": "number"
          },
          "pre_pay_cash_remaining": {
            "description": "The amount of pre-pay cash remaining in the balance. This number goes down as the user uses their pre-paid credits. The reason we track this amount is if a user ever wants to withdraw their pre-pay cash, we can use this amount to determine how much to give them. Say a user has $100 in pre-paid cash, their bill is worth, $50 after subtracting any other credits (like monthly etc.) Their bill is $50, their pre-pay cash remaining will be subtracted by 50 to pay the bill and their `pre_pay_credits_remaining` will be subtracted by 50 to pay the bill. This way if they want to withdraw money after, they can only withdraw $50 since that is the amount of cash they have remaining.",
            "format": "money-usd",
            "title": "Number",
            "type": "number"
          },
          "pre_pay_credits_remaining": {
            "description": "The amount of credits remaining in the balance. This is typically the amount of cash * some multiplier they get for pre-paying their account. This number lowers every time a bill is paid with the balance. This number increases every time a user adds funds to their balance. This may be through a subscription or a one off payment.",
            "format": "money-usd",
            "title": "Number",
            "type": "number"
          },
          "total_due": {
            "description": "This includes any outstanding, draft, or open invoices and any pending invoice items. This does not include any credits the user has on their account.",
            "format": "money-usd",
            "title": "Number",
            "type": "number"
          },
          "updated_at": {
            "description": "The date and time the balance was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID the balance belongs to.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "monthly_credits_remaining",
          "pre_pay_cash_remaining",
          "pre_pay_credits_remaining",
          "total_due",
          "updated_at"
        ],
        "type": "object"
      },
      "DeviceAccessTokenRequestForm": {
        "description": "The form for a device access token request.",
        "properties": {
          "client_id": {
            "description": "The client ID.",
            "format": "uuid",
            "type": "string"
          },
          "device_code": {
            "description": "The device code.",
            "format": "uuid",
            "type": "string"
          },
          "grant_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OAuth2GrantType"
              }
            ],
            "description": "The grant type."
          }
        },
        "required": [
          "client_id",
          "device_code",
          "grant_type"
        ],
        "type": "object"
      },
      "DeviceAuthRequestForm": {
        "description": "The request parameters for the OAuth 2.0 Device Authorization Grant flow.",
        "properties": {
          "client_id": {
            "description": "The client ID.",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "client_id"
        ],
        "type": "object"
      },
      "DeviceAuthVerifyParams": {
        "description": "The request parameters to verify the `user_code` for the OAuth 2.0 Device Authorization Grant.",
        "properties": {
          "user_code": {
            "description": "The user code.",
            "type": "string"
          }
        },
        "required": [
          "user_code"
        ],
        "type": "object"
      },
      "Direction": {
        "description": "Specifies the sign of a co-ordinate axis.",
        "oneOf": [
          {
            "description": "Increasing numbers.",
            "enum": [
              "positive"
            ],
            "type": "string"
          },
          {
            "description": "Decreasing numbers.",
            "enum": [
              "negative"
            ],
            "type": "string"
          }
        ]
      },
      "Discount": {
        "description": "The resource representing a Discount.",
        "properties": {
          "coupon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Coupon"
              }
            ],
            "description": "The coupon that applied to create this discount."
          }
        },
        "required": [
          "coupon"
        ],
        "type": "object"
      },
      "DockerSystemInfo": {
        "description": "Docker system info.",
        "properties": {
          "architecture": {
            "description": "Hardware architecture of the host, as returned by the Go runtime (`GOARCH`).  A full list of possible values can be found in the [Go documentation](https://golang.org/doc/install/source#environment).",
            "nullable": true,
            "type": "string"
          },
          "bridge_nf_ip6tables": {
            "description": "Indicates if `bridge-nf-call-ip6tables` is available on the host.",
            "nullable": true,
            "type": "boolean"
          },
          "bridge_nf_iptables": {
            "description": "Indicates if `bridge-nf-call-iptables` is available on the host.",
            "nullable": true,
            "type": "boolean"
          },
          "cgroup_driver": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemInfoCgroupDriverEnum"
              }
            ],
            "description": "The driver to use for managing cgroups.",
            "nullable": true
          },
          "cgroup_version": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemInfoCgroupVersionEnum"
              }
            ],
            "description": "The version of the cgroup.",
            "nullable": true
          },
          "cluster_advertise": {
            "description": "The network endpoint that the Engine advertises for the purpose of node discovery. ClusterAdvertise is a `host:port` combination on which the daemon is reachable by other hosts.\n\n**Deprecated**: This field is only propagated when using standalone Swarm mode, and overlay networking using an external k/v store. Overlay networks with Swarm mode enabled use the built-in raft store, and this field will be empty.",
            "nullable": true,
            "type": "string"
          },
          "cluster_store": {
            "description": "URL of the distributed storage backend.   The storage backend is used for multihost networking (to store network and endpoint information) and by the node discovery mechanism.\n\n**Deprecated**: This field is only propagated when using standalone Swarm mode, and overlay networking using an external k/v store. Overlay networks with Swarm mode enabled use the built-in raft store, and this field will be empty.",
            "nullable": true,
            "type": "string"
          },
          "containerd_commit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Commit"
              }
            ],
            "nullable": true
          },
          "containers": {
            "description": "Total number of containers on the host.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "containers_paused": {
            "description": "Number of containers with status `\\\"paused\\\"`.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "containers_running": {
            "description": "Number of containers with status `\\\"running\\\"`.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "containers_stopped": {
            "description": "Number of containers with status `\\\"stopped\\\"`.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "cpu_cfs_period": {
            "description": "Indicates if CPU CFS(Completely Fair Scheduler) period is supported by the host.",
            "nullable": true,
            "type": "boolean"
          },
          "cpu_cfs_quota": {
            "description": "Indicates if CPU CFS(Completely Fair Scheduler) quota is supported by the host.",
            "nullable": true,
            "type": "boolean"
          },
          "cpu_set": {
            "description": "Indicates if CPUsets (cpuset.cpus, cpuset.mems) are supported by the host.  See [cpuset(7)](https://www.kernel.org/doc/Documentation/cgroup-v1/cpusets.txt)",
            "nullable": true,
            "type": "boolean"
          },
          "cpu_shares": {
            "description": "Indicates if CPU Shares limiting is supported by the host.",
            "nullable": true,
            "type": "boolean"
          },
          "debug": {
            "description": "Indicates if the daemon is running in debug-mode / with debug-level logging enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "default_address_pools": {
            "description": "List of custom default address pools for local networks, which can be specified in the daemon.json file or dockerd option.  Example: a Base \\\"10.10.0.0/16\\\" with Size 24 will define the set of 256 10.10.[0-255].0/24 address pools.",
            "items": {
              "$ref": "#/components/schemas/SystemInfoDefaultAddressPools"
            },
            "type": "array"
          },
          "default_runtime": {
            "description": "Name of the default OCI runtime that is used when starting containers.  The default can be overridden per-container at create time.",
            "nullable": true,
            "type": "string"
          },
          "docker_root_dir": {
            "description": "Root directory of persistent Docker state.  Defaults to `/var/lib/docker` on Linux, and `C:\\\\ProgramData\\\\docker` on Windows.",
            "nullable": true,
            "type": "string"
          },
          "driver": {
            "description": "Name of the storage driver in use.",
            "nullable": true,
            "type": "string"
          },
          "driver_status": {
            "description": "Information specific to the storage driver, provided as \\\"label\\\" / \\\"value\\\" pairs.  This information is provided by the storage driver, and formatted in a way consistent with the output of `docker info` on the command line.\n\n**Note**: The information returned in this field, including the formatting of values and labels, should not be considered stable, and may change without notice.",
            "items": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "array"
          },
          "experimental_build": {
            "description": "Indicates if experimental features are enabled on the daemon.",
            "nullable": true,
            "type": "boolean"
          },
          "http_proxy": {
            "description": "HTTP-proxy configured for the daemon. This value is obtained from the [`HTTP_PROXY`](https://www.gnu.org/software/wget/manual/html_node/Proxies.html) environment variable. Credentials ([user info component](https://tools.ietf.org/html/rfc3986#section-3.2.1)) in the proxy URL are masked in the API response.  Containers do not automatically inherit this configuration.",
            "nullable": true,
            "type": "string"
          },
          "https_proxy": {
            "description": "HTTPS-proxy configured for the daemon. This value is obtained from the [`HTTPS_PROXY`](https://www.gnu.org/software/wget/manual/html_node/Proxies.html) environment variable. Credentials ([user info component](https://tools.ietf.org/html/rfc3986#section-3.2.1)) in the proxy URL are masked in the API response.  Containers do not automatically inherit this configuration.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the daemon.\n\n**Note**: The format of the ID itself is not part of the API, and should not be considered stable.",
            "nullable": true,
            "type": "string"
          },
          "images": {
            "description": "Total number of images on the host. Both _tagged_ and _untagged_ (dangling) images are counted.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "index_server_address": {
            "description": "Address / URL of the index server that is used for image search, and as a default for user authentication for Docker Hub and Docker Cloud.",
            "nullable": true,
            "type": "string"
          },
          "init_binary": {
            "description": "Name and, optional, path of the `docker-init` binary.  If the path is omitted, the daemon searches the host's `$PATH` for the binary and uses the first result.",
            "nullable": true,
            "type": "string"
          },
          "init_commit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Commit"
              }
            ],
            "nullable": true
          },
          "ipv4_forwarding": {
            "description": "Indicates IPv4 forwarding is enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "isolation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemInfoIsolationEnum"
              }
            ],
            "description": "Represents the isolation technology to use as a default for containers. The supported values are platform-specific.  If no isolation value is specified on daemon start, on Windows client, the default is `hyperv`, and on Windows server, the default is `process`.  This option is currently not used on other platforms.",
            "nullable": true
          },
          "kernel_memory": {
            "description": "Indicates if the host has kernel memory limit support enabled.\n\n**Deprecated**: This field is deprecated as the kernel 5.4 deprecated `kmem.limit_in_bytes`.",
            "nullable": true,
            "type": "boolean"
          },
          "kernel_memory_tcp": {
            "description": "Indicates if the host has kernel memory TCP limit support enabled.  Kernel memory TCP limits are not supported when using cgroups v2, which does not support the corresponding `memory.kmem.tcp.limit_in_bytes` cgroup.",
            "nullable": true,
            "type": "boolean"
          },
          "kernel_version": {
            "description": "Kernel version of the host.  On Linux, this information obtained from `uname`. On Windows this information is queried from the <kbd>HKEY_LOCAL_MACHINE\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\</kbd> registry value, for example _\\\"10.0 14393 (14393.1198.amd64fre.rs1_release_sec.170427-1353)\\\"_.",
            "nullable": true,
            "type": "string"
          },
          "labels": {
            "description": "User-defined labels (key/value metadata) as set on the daemon.\n\n**Note**: When part of a Swarm, nodes can both have _daemon_ labels, set through the daemon configuration, and _node_ labels, set from a manager node in the Swarm. Node labels are not included in this field. Node labels can be retrieved using the `/nodes/(id)` endpoint on a manager node in the Swarm.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "live_restore_enabled": {
            "description": "Indicates if live restore is enabled.  If enabled, containers are kept running when the daemon is shutdown or upon daemon start if running containers are detected.",
            "nullable": true,
            "type": "boolean"
          },
          "logging_driver": {
            "description": "The logging driver to use as a default for new containers.",
            "nullable": true,
            "type": "string"
          },
          "mem_total": {
            "description": "Total amount of physical memory available on the host, in bytes.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "memory_limit": {
            "description": "Indicates if the host has memory limit support enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "n_events_listener": {
            "description": "Number of event listeners subscribed.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "n_fd": {
            "description": "The total number of file Descriptors in use by the daemon process.  This information is only returned if debug-mode is enabled.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Hostname of the host.",
            "nullable": true,
            "type": "string"
          },
          "ncpu": {
            "description": "The number of logical CPUs usable by the daemon.  The number of available CPUs is checked by querying the operating system when the daemon starts. Changes to operating system CPU allocation after the daemon is started are not reflected.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "no_proxy": {
            "description": "Comma-separated list of domain extensions for which no proxy should be used. This value is obtained from the [`NO_PROXY`](https://www.gnu.org/software/wget/manual/html_node/Proxies.html) environment variable.  Containers do not automatically inherit this configuration.",
            "nullable": true,
            "type": "string"
          },
          "oom_kill_disable": {
            "description": "Indicates if OOM killer disable is supported on the host.",
            "nullable": true,
            "type": "boolean"
          },
          "operating_system": {
            "description": "Name of the host's operating system, for example: \\\"Ubuntu 16.04.2 LTS\\\" or \\\"Windows Server 2016 Datacenter\\\"",
            "nullable": true,
            "type": "string"
          },
          "os_type": {
            "description": "Generic type of the operating system of the host, as returned by the Go runtime (`GOOS`).  Currently returned values are \\\"linux\\\" and \\\"windows\\\". A full list of possible values can be found in the [Go documentation](https://golang.org/doc/install/source#environment).",
            "nullable": true,
            "type": "string"
          },
          "os_version": {
            "description": "Version of the host's operating system\n\n**Note**: The information returned in this field, including its very existence, and the formatting of values, should not be considered stable, and may change without notice.",
            "nullable": true,
            "type": "string"
          },
          "pids_limit": {
            "description": "Indicates if the host kernel has PID limit support enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "plugins": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PluginsInfo"
              }
            ],
            "nullable": true
          },
          "product_license": {
            "description": "Reports a summary of the product license on the daemon.  If a commercial license has been applied to the daemon, information such as number of nodes, and expiration are included.",
            "nullable": true,
            "type": "string"
          },
          "registry_config": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RegistryServiceConfig"
              }
            ],
            "nullable": true
          },
          "runc_commit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Commit"
              }
            ],
            "nullable": true
          },
          "runtimes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Runtime"
            },
            "type": "object"
          },
          "security_options": {
            "description": "List of security features that are enabled on the daemon, such as apparmor, seccomp, SELinux, user-namespaces (userns), and rootless.  Additional configuration options for each security feature may be present, and are included as a comma-separated list of key/value pairs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "server_version": {
            "description": "Version string of the daemon. **Note**: the [standalone Swarm API](https://docs.docker.com/swarm/swarm-api/) returns the Swarm version instead of the daemon  version, for example `swarm/1.2.8`.",
            "nullable": true,
            "type": "string"
          },
          "swap_limit": {
            "description": "Indicates if the host has memory swap limit support enabled.",
            "nullable": true,
            "type": "boolean"
          },
          "system_time": {
            "description": "The  number of goroutines that currently exist.  This information is only returned if debug-mode is enabled.",
            "nullable": true,
            "type": "string"
          },
          "warnings": {
            "description": "List of warnings / informational messages about missing features, or issues related to the daemon configuration.  These messages can be printed by the client as information to the user.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EmailAuthenticationForm": {
        "description": "The body of the form for email authentication.",
        "properties": {
          "callback_url": {
            "description": "The URL to redirect back to after we have authenticated.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "email": {
            "description": "The user's email.",
            "format": "email",
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "type": "object"
      },
      "EngineMetadata": {
        "description": "Metadata about our currently running server.\n\nThis is mostly used for internal purposes and debugging.",
        "properties": {
          "async_jobs_running": {
            "description": "If any async job is currently running.",
            "type": "boolean"
          },
          "cache": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CacheMetadata"
              }
            ],
            "description": "Metadata about our cache."
          },
          "environment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Environment"
              }
            ],
            "description": "The environment we are running in."
          },
          "fs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileSystemMetadata"
              }
            ],
            "description": "Metadata about our file system."
          },
          "git_hash": {
            "description": "The git hash of the server.",
            "type": "string"
          },
          "pubsub": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Connection"
              }
            ],
            "description": "Metadata about our pub-sub connection."
          }
        },
        "required": [
          "async_jobs_running",
          "cache",
          "environment",
          "fs",
          "git_hash",
          "pubsub"
        ],
        "type": "object"
      },
      "Environment": {
        "description": "The environment the server is running in.",
        "oneOf": [
          {
            "description": "The development environment. This is for running locally.",
            "enum": [
              "DEVELOPMENT"
            ],
            "type": "string"
          },
          {
            "description": "The preview environment. This is when PRs are created and a service is deployed for testing.",
            "enum": [
              "PREVIEW"
            ],
            "type": "string"
          },
          {
            "description": "The production environment.",
            "enum": [
              "PRODUCTION"
            ],
            "type": "string"
          }
        ]
      },
      "Error": {
        "description": "Error information from a response.",
        "properties": {
          "error_code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "request_id": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "request_id"
        ],
        "type": "object"
      },
      "ExecutorMetadata": {
        "description": "Metadata about our currently running server.\n\nThis is mostly used for internal purposes and debugging.",
        "properties": {
          "docker_info": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DockerSystemInfo"
              }
            ],
            "description": "Information about the docker daemon."
          },
          "environment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Environment"
              }
            ],
            "description": "The environment we are running in."
          },
          "git_hash": {
            "description": "The git hash of the server.",
            "type": "string"
          }
        },
        "required": [
          "docker_info",
          "environment",
          "git_hash"
        ],
        "type": "object"
      },
      "ExtendedUser": {
        "description": "Extended user information.\n\nThis is mostly used for internal purposes. It returns a mapping of the user's information, including that of our third party services we use for users: MailChimp, Stripe, and Front",
        "properties": {
          "company": {
            "description": "The user's company.",
            "type": "string"
          },
          "created_at": {
            "description": "The date and time the user was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "discord": {
            "description": "The user's Discord handle.",
            "type": "string"
          },
          "email": {
            "description": "The email address of the user.",
            "format": "email",
            "type": "string"
          },
          "email_verified": {
            "description": "The date and time the email address was verified.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "first_name": {
            "description": "The user's first name.",
            "type": "string"
          },
          "front_id": {
            "description": "The user's Front ID. This is mostly used for internal mapping.",
            "nullable": true,
            "type": "string"
          },
          "github": {
            "description": "The user's GitHub handle.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the user.",
            "type": "string"
          },
          "image": {
            "description": "The image avatar for the user. This is a URL.",
            "format": "uri",
            "title": "String",
            "type": "string"
          },
          "last_name": {
            "description": "The user's last name.",
            "type": "string"
          },
          "mailchimp_id": {
            "description": "The user's MailChimp ID. This is mostly used for internal mapping.",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the user. This is auto populated at first from the authentication provider (if there was a name). It can be updated by the user by updating their `first_name` and `last_name` fields.",
            "type": "string"
          },
          "phone": {
            "default": "",
            "description": "The user's phone number.",
            "format": "phone",
            "title": "String",
            "type": "string"
          },
          "stripe_id": {
            "description": "The user's Stripe ID. This is mostly used for internal mapping.",
            "nullable": true,
            "type": "string"
          },
          "updated_at": {
            "description": "The date and time the user was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "image",
          "updated_at"
        ],
        "type": "object"
      },
      "ExtendedUserResultsPage": {
        "description": "A single page of results",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "items": {
              "$ref": "#/components/schemas/ExtendedUser"
            },
            "type": "array"
          },
          "next_page": {
            "description": "token used to fetch the next page of results (if any)",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "items"
        ],
        "type": "object"
      },
      "Extrude": {
        "description": "Command for extruding a solid.",
        "properties": {
          "cap": {
            "description": "Whether to cap the extrusion with a face, or not. If true, the resulting solid will be closed on all sides, like a dice. If false, it will be open on one side, like a drinking glass.",
            "type": "boolean"
          },
          "distance": {
            "description": "How far off the plane to extrude",
            "format": "double",
            "type": "number"
          },
          "target": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ModelingCmdId"
              }
            ],
            "description": "Which sketch to extrude. Must be a closed 2D solid."
          }
        },
        "required": [
          "cap",
          "distance",
          "target"
        ],
        "type": "object"
      },
      "FileCenterOfMass": {
        "description": "A file center of mass result.",
        "properties": {
          "center_of_mass": {
            "description": "The resulting center of mass.",
            "items": {
              "format": "double",
              "type": "number"
            },
            "nullable": true,
            "type": "array"
          },
          "completed_at": {
            "description": "The time and date the API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The time and date the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
          },
          "src_format": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileImportFormat"
              }
            ],
            "description": "The source format of the file."
          },
          "started_at": {
            "description": "The time and date the API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the API call."
          },
          "updated_at": {
            "description": "The time and date the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "src_format",
          "status",
          "updated_at"
        ],
        "type": "object"
      },
      "FileConversion": {
        "description": "A file conversion.",
        "properties": {
          "completed_at": {
            "description": "The time and date the API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The time and date the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
          },
          "output": {
            "description": "The converted file (if single file conversion), if completed, base64 encoded. This field is deprecated, and will be removed in a future release. Use `outputs` instead.",
            "format": "byte",
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "output_format": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileExportFormat"
              }
            ],
            "description": "The output format of the file conversion."
          },
          "output_format_options": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OutputFormat"
              }
            ],
            "description": "The output format options of the file conversion.",
            "nullable": true
          },
          "outputs": {
            "additionalProperties": {
              "format": "byte",
              "title": "String",
              "type": "string"
            },
            "description": "The converted files (if multiple file conversion), if completed, base64 encoded. The key of the map is the path of the output file.",
            "type": "object"
          },
          "src_format": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileImportFormat"
              }
            ],
            "description": "The source format of the file conversion."
          },
          "src_format_options": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InputFormat"
              }
            ],
            "description": "The source format options of the file conversion.",
            "nullable": true
          },
          "started_at": {
            "description": "The time and date the API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the API call."
          },
          "updated_at": {
            "description": "The time and date the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "output_format",
          "src_format",
          "status",
          "updated_at"
        ],
        "type": "object"
      },
      "FileDensity": {
        "description": "A file density result.",
        "properties": {
          "completed_at": {
            "description": "The time and date the API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The time and date the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "density": {
            "description": "The resulting density.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
          },
          "material_mass": {
            "default": 0.0,
            "description": "The material mass as denoted by the user.",
            "format": "float",
            "type": "number"
          },
          "src_format": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileImportFormat"
              }
            ],
            "description": "The source format of the file."
          },
          "started_at": {
            "description": "The time and date the API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the API call."
          },
          "updated_at": {
            "description": "The time and date the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "src_format",
          "status",
          "updated_at"
        ],
        "type": "object"
      },
      "FileExportFormat": {
        "description": "The valid types of output file formats.",
        "oneOf": [
          {
            "description": "The COLLADA/DAE file format. <https://en.wikipedia.org/wiki/COLLADA>",
            "enum": [
              "dae"
            ],
            "type": "string"
          },
          {
            "description": "The DXF file format. <https://en.wikipedia.org/wiki/AutoCAD_DXF>",
            "enum": [
              "dxf"
            ],
            "type": "string"
          },
          {
            "description": "The FBX file format. <https://en.wikipedia.org/wiki/FBX>",
            "enum": [
              "fbx"
            ],
            "type": "string"
          },
          {
            "description": "The FBX file format (in binary). <https://en.wikipedia.org/wiki/FBX>",
            "enum": [
              "fbxb"
            ],
            "type": "string"
          },
          {
            "description": "glTF 2.0. We refer to this as glTF since that is how our customers refer to it, although by default it will be in binary format and thus technically (glb).",
            "enum": [
              "gltf"
            ],
            "type": "string"
          },
          {
            "description": "The OBJ file format. <https://en.wikipedia.org/wiki/Wavefront_.obj_file> It may or may not have an an attached material (mtl // mtllib) within the file, but we interact with it as if it does not.",
            "enum": [
              "obj"
            ],
            "type": "string"
          },
          {
            "description": "The PLY file format. <https://en.wikipedia.org/wiki/PLY_(file_format)>",
            "enum": [
              "ply"
            ],
            "type": "string"
          },
          {
            "description": "The STEP file format. <https://en.wikipedia.org/wiki/ISO_10303-21>",
            "enum": [
              "step"
            ],
            "type": "string"
          },
          {
            "description": "The STL file format. <https://en.wikipedia.org/wiki/STL_(file_format)>",
            "enum": [
              "stl"
            ],
            "type": "string"
          }
        ]
      },
      "FileImportFormat": {
        "description": "The valid types of source file formats.",
        "oneOf": [
          {
            "description": "The COLLADA/DAE file format. <https://en.wikipedia.org/wiki/COLLADA>",
            "enum": [
              "dae"
            ],
            "type": "string"
          },
          {
            "description": "The DXF file format. <https://en.wikipedia.org/wiki/AutoCAD_DXF>",
            "enum": [
              "dxf"
            ],
            "type": "string"
          },
          {
            "description": "The FBX file format. <https://en.wikipedia.org/wiki/FBX>",
            "enum": [
              "fbx"
            ],
            "type": "string"
          },
          {
            "description": "glTF 2.0.",
            "enum": [
              "gltf"
            ],
            "type": "string"
          },
          {
            "description": "The OBJ file format. <https://en.wikipedia.org/wiki/Wavefront_.obj_file> It may or may not have an an attached material (mtl // mtllib) within the file, but we interact with it as if it does not.",
            "enum": [
              "obj"
            ],
            "type": "string"
          },
          {
            "description": "The PLY file format. <https://en.wikipedia.org/wiki/PLY_(file_format)>",
            "enum": [
              "ply"
            ],
            "type": "string"
          },
          {
            "description": "The STEP file format. <https://en.wikipedia.org/wiki/ISO_10303-21>",
            "enum": [
              "step"
            ],
            "type": "string"
          },
          {
            "description": "The STL file format. <https://en.wikipedia.org/wiki/STL_(file_format)>",
            "enum": [
              "stl"
            ],
            "type": "string"
          }
        ]
      },
      "FileMass": {
        "description": "A file mass result.",
        "properties": {
          "completed_at": {
            "description": "The time and date the API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The time and date the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
          },
          "mass": {
            "description": "The resulting mass.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "material_density": {
            "default": 0.0,
            "description": "The material density as denoted by the user.",
            "format": "float",
            "type": "number"
          },
          "src_format": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileImportFormat"
              }
            ],
            "description": "The source format of the file."
          },
          "started_at": {
            "description": "The time and date the API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the API call."
          },
          "updated_at": {
            "description": "The time and date the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "src_format",
          "status",
          "updated_at"
        ],
        "type": "object"
      },
      "FileSurfaceArea": {
        "description": "A file surface area result.",
        "properties": {
          "completed_at": {
            "description": "The time and date the API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The time and date the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
          },
          "src_format": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileImportFormat"
              }
            ],
            "description": "The source format of the file."
          },
          "started_at": {
            "description": "The time and date the API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the API call."
          },
          "surface_area": {
            "description": "The resulting surface area.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "updated_at": {
            "description": "The time and date the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "src_format",
          "status",
          "updated_at"
        ],
        "type": "object"
      },
      "FileSystemMetadata": {
        "description": "Metadata about our file system.\n\nThis is mostly used for internal purposes and debugging.",
        "properties": {
          "ok": {
            "description": "If the file system passed a sanity check.",
            "type": "boolean"
          }
        },
        "required": [
          "ok"
        ],
        "type": "object"
      },
      "FileVolume": {
        "description": "A file volume result.",
        "properties": {
          "completed_at": {
            "description": "The time and date the API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The time and date the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
          },
          "src_format": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileImportFormat"
              }
            ],
            "description": "The source format of the file."
          },
          "started_at": {
            "description": "The time and date the API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the API call."
          },
          "updated_at": {
            "description": "The time and date the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "type": "string"
          },
          "volume": {
            "description": "The resulting volume.",
            "format": "double",
            "nullable": true,
            "type": "number"
          }
        },
        "required": [
          "created_at",
          "id",
          "src_format",
          "status",
          "updated_at"
        ],
        "type": "object"
      },
      "Gateway": {
        "description": "Gateway information.",
        "properties": {
          "auth_timeout": {
            "default": 0,
            "description": "The auth timeout of the gateway.",
            "format": "int64",
            "type": "integer"
          },
          "host": {
            "default": "",
            "description": "The host of the gateway.",
            "type": "string"
          },
          "name": {
            "default": "",
            "description": "The name of the gateway.",
            "type": "string"
          },
          "port": {
            "default": 0,
            "description": "The port of the gateway.",
            "format": "int64",
            "type": "integer"
          },
          "tls_timeout": {
            "default": 0,
            "description": "The TLS timeout for the gateway.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ImageType": {
        "description": "An enumeration.",
        "enum": [
          "png",
          "jpg"
        ],
        "type": "string"
      },
      "IndexInfo": {
        "description": "IndexInfo contains information about a registry.",
        "properties": {
          "mirrors": {
            "description": "List of mirrors, expressed as URIs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the registry, such as \\\"docker.io\\\".",
            "nullable": true,
            "type": "string"
          },
          "official": {
            "description": "Indicates whether this is an official registry (i.e., Docker Hub / docker.io)",
            "nullable": true,
            "type": "boolean"
          },
          "secure": {
            "description": "Indicates if the registry is part of the list of insecure registries.  If `false`, the registry is insecure. Insecure registries accept un-encrypted (HTTP) and/or untrusted (HTTPS with certificates from unknown CAs) communication.\n\n**Warning**: Insecure registries can be useful when running a local registry. However, because its use creates security vulnerabilities it should ONLY be enabled for testing purposes. For increased security, users should add their CA to their system's list of trusted CAs instead of enabling this option.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "InputFormat": {
        "description": "Input format specifier.",
        "oneOf": [
          {
            "description": "Binary glTF 2.0. We refer to this as glTF since that is how our customers refer to it, but this can also import binary glTF (glb).",
            "properties": {
              "type": {
                "enum": [
                  "Gltf"
                ],
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "type": "object"
          },
          {
            "description": "ISO 10303-21 (STEP) format.",
            "properties": {
              "coords": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/System"
                  }
                ],
                "description": "Co-ordinate system of input data.\n\nDefaults to the [KittyCAD co-ordinate system].\n\n[KittyCAD co-ordinate system]: ../coord/constant.KITTYCAD.html"
              },
              "type": {
                "enum": [
                  "Step"
                ],
                "type": "string"
              }
            },
            "required": [
              "coords",
              "type"
            ],
            "type": "object"
          },
          {
            "description": "Wavefront OBJ format.",
            "properties": {
              "coords": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/System"
                  }
                ],
                "description": "Co-ordinate system of input data.\n\nDefaults to the [KittyCAD co-ordinate system].\n\n[KittyCAD co-ordinate system]: ../coord/constant.KITTYCAD.html"
              },
              "type": {
                "enum": [
                  "Obj"
                ],
                "type": "string"
              }
            },
            "required": [
              "coords",
              "type"
            ],
            "type": "object"
          },
          {
            "description": "*ST**ereo**L**ithography format.",
            "properties": {
              "coords": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/System"
                  }
                ],
                "description": "Co-ordinate system of input data.\n\nDefaults to the [KittyCAD co-ordinate system].\n\n[KittyCAD co-ordinate system]: ../coord/constant.KITTYCAD.html"
              },
              "type": {
                "enum": [
                  "Stl"
                ],
                "type": "string"
              }
            },
            "required": [
              "coords",
              "type"
            ],
            "type": "object"
          }
        ]
      },
      "Invoice": {
        "description": "An invoice.",
        "properties": {
          "amount_due": {
            "default": 0.0,
            "description": "Final amount due at this time for this invoice.\n\nIf the invoice's total is smaller than the minimum charge amount, for example, or if there is account credit that can be applied to the invoice, the `amount_due` may be 0. If there is a positive `starting_balance` for the invoice (the customer owes money), the `amount_due` will also take that into account. The charge that gets generated for the invoice will be for the amount specified in `amount_due`.",
            "format": "money-usd",
            "title": "Number",
            "type": "number"
          },
          "amount_paid": {
            "default": 0.0,
            "description": "The amount, in USD, that was paid.",
            "format": "money-usd",
            "title": "Number",
            "type": "number"
          },
          "amount_remaining": {
            "default": 0.0,
            "description": "The amount remaining, in USD, that is due.",
            "format": "money-usd",
            "title": "Number",
            "type": "number"
          },
          "attempt_count": {
            "default": 0,
            "description": "Number of payment attempts made for this invoice, from the perspective of the payment retry schedule.\n\nAny payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count. In other words, manual payment attempts after the first attempt do not affect the retry schedule.",
            "format": "uint64",
            "minimum": 0,
            "type": "integer"
          },
          "attempted": {
            "default": false,
            "description": "Whether an attempt has been made to pay the invoice.\n\nAn invoice is not attempted until 1 hour after the `invoice.created` webhook, for example, so you might not want to display that invoice as unpaid to your users.",
            "type": "boolean"
          },
          "created_at": {
            "description": "Time at which the object was created.",
            "format": "date-time",
            "type": "string"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Currency"
              }
            ],
            "default": "usd",
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase."
          },
          "customer_email": {
            "description": "The email address for the customer. Until the invoice is finalized, this field will equal customer.email. Once the invoice is finalized, this field will no longer be updated.",
            "format": "email",
            "type": "string"
          },
          "customer_id": {
            "description": "Customer ID. The unique identifier for the customer this invoice belongs to. This is the customer ID in the payments service, not our database customer ID.",
            "type": "string"
          },
          "default_payment_method": {
            "description": "Default payment method.",
            "type": "string"
          },
          "description": {
            "description": "Description of the invoice.",
            "type": "string"
          },
          "discounts": {
            "description": "The discounts applied to the invoice. This is an array of discount objects.",
            "items": {
              "$ref": "#/components/schemas/Discount"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "lines": {
            "description": "The individual line items that make up the invoice.\n\n`lines` is sorted as follows: invoice items in reverse chronological order, followed by the subscription, if any.",
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItem"
            },
            "type": "array"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "default": {},
            "description": "Set of key-value pairs.",
            "type": "object"
          },
          "number": {
            "description": "A unique, identifying string that appears on emails sent to the customer for this invoice.",
            "type": "string"
          },
          "paid": {
            "default": false,
            "description": "Whether payment was successfully collected for this invoice.\n\nAn invoice can be paid (most commonly) with a charge or with credit from the customer's account balance.",
            "type": "boolean"
          },
          "pdf": {
            "description": "The link to download the PDF for the invoice.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          },
          "receipt_number": {
            "description": "This is the transaction number that appears on email receipts sent for this invoice.",
            "type": "string"
          },
          "statement_descriptor": {
            "description": "Extra information about an invoice for the customer's credit card statement.",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceStatus"
              }
            ],
            "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`.\n\n[Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview).",
            "nullable": true
          },
          "subtotal": {
            "default": 0.0,
            "description": "Total of all subscriptions, invoice items, and prorations on the invoice before any invoice level discount or tax is applied.\n\nItem discounts are already incorporated.",
            "format": "money-usd",
            "title": "Number",
            "type": "number"
          },
          "tax": {
            "default": 0.0,
            "description": "The amount of tax on this invoice.\n\nThis is the sum of all the tax amounts on this invoice.",
            "format": "money-usd",
            "title": "Number",
            "type": "number"
          },
          "total": {
            "default": 0.0,
            "description": "Total after discounts and taxes.",
            "format": "money-usd",
            "title": "Number",
            "type": "number"
          },
          "url": {
            "description": "The URL for the hosted invoice page, which allows customers to view and pay an invoice.",
            "format": "uri",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "created_at"
        ],
        "type": "object"
      },
      "InvoiceLineItem": {
        "description": "An invoice line item.",
        "properties": {
          "amount": {
            "default": 0.0,
            "description": "The amount, in USD.",
            "format": "money-usd",
            "title": "Number",
            "type": "number"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Currency"
              }
            ],
            "default": "usd",
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase."
          },
          "description": {
            "description": "The description.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "invoice_item": {
            "description": "The ID of the invoice item associated with this line item if any.",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "default": {},
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object.\n\nSet of key-value pairs.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "InvoiceStatus": {
        "description": "An enum representing the possible values of an `Invoice`'s `status` field.",
        "oneOf": [
          {
            "description": "Deleted.",
            "enum": [
              "deleted"
            ],
            "type": "string"
          },
          {
            "description": "Draft.",
            "enum": [
              "draft"
            ],
            "type": "string"
          },
          {
            "description": "Open.",
            "enum": [
              "open"
            ],
            "type": "string"
          },
          {
            "description": "Paid.",
            "enum": [
              "paid"
            ],
            "type": "string"
          },
          {
            "description": "Uncollectible.",
            "enum": [
              "uncollectible"
            ],
            "type": "string"
          },
          {
            "description": "Void.",
            "enum": [
              "void"
            ],
            "type": "string"
          }
        ]
      },
      "Jetstream": {
        "description": "Jetstream information.",
        "properties": {
          "config": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JetstreamConfig"
              }
            ],
            "default": {
              "domain": "",
              "max_memory": 0,
              "max_storage": 0,
              "store_dir": ""
            },
            "description": "The Jetstream config."
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetaClusterInfo"
              }
            ],
            "default": {
              "cluster_size": 0,
              "leader": "",
              "name": ""
            },
            "description": "Meta information about the cluster."
          },
          "stats": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JetstreamStats"
              }
            ],
            "default": {
              "accounts": 0,
              "api": {
                "errors": 0,
                "inflight": 0,
                "total": 0
              },
              "ha_assets": 0,
              "memory": 0,
              "reserved_memory": 0,
              "reserved_store": 0,
              "store": 0
            },
            "description": "Jetstream statistics."
          }
        },
        "type": "object"
      },
      "JetstreamApiStats": {
        "description": "Jetstream API statistics.",
        "properties": {
          "errors": {
            "default": 0,
            "description": "The number of errors.",
            "format": "int64",
            "type": "integer"
          },
          "inflight": {
            "default": 0,
            "description": "The number of inflight requests.",
            "format": "int64",
            "type": "integer"
          },
          "total": {
            "default": 0,
            "description": "The number of requests.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "JetstreamConfig": {
        "description": "Jetstream configuration.",
        "properties": {
          "domain": {
            "default": "",
            "description": "The domain.",
            "type": "string"
          },
          "max_memory": {
            "default": 0,
            "description": "The max memory.",
            "format": "int64",
            "type": "integer"
          },
          "max_storage": {
            "default": 0,
            "description": "The max storage.",
            "format": "int64",
            "type": "integer"
          },
          "store_dir": {
            "default": "",
            "description": "The store directory.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "JetstreamStats": {
        "description": "Jetstream statistics.",
        "properties": {
          "accounts": {
            "default": 0,
            "description": "The number of accounts.",
            "format": "int64",
            "type": "integer"
          },
          "api": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JetstreamApiStats"
              }
            ],
            "default": {
              "errors": 0,
              "inflight": 0,
              "total": 0
            },
            "description": "API stats."
          },
          "ha_assets": {
            "default": 0,
            "description": "The number of HA assets.",
            "format": "int64",
            "type": "integer"
          },
          "memory": {
            "default": 0,
            "description": "The memory used by the Jetstream server.",
            "format": "int64",
            "type": "integer"
          },
          "reserved_memory": {
            "default": 0,
            "description": "The reserved memory for the Jetstream server.",
            "format": "int64",
            "type": "integer"
          },
          "reserved_store": {
            "default": 0,
            "description": "The reserved storage for the Jetstream server.",
            "format": "int64",
            "type": "integer"
          },
          "store": {
            "default": 0,
            "description": "The storage used by the Jetstream server.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "LeafNode": {
        "description": "Leaf node information.",
        "properties": {
          "auth_timeout": {
            "default": 0,
            "description": "The auth timeout of the leaf node.",
            "format": "int64",
            "type": "integer"
          },
          "host": {
            "default": "",
            "description": "The host of the leaf node.",
            "type": "string"
          },
          "port": {
            "default": 0,
            "description": "The port of the leaf node.",
            "format": "int64",
            "type": "integer"
          },
          "tls_timeout": {
            "default": 0,
            "description": "The TLS timeout for the leaf node.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Mesh": {
        "properties": {
          "mesh": {
            "type": "string"
          }
        },
        "required": [
          "mesh"
        ],
        "type": "object"
      },
      "MetaClusterInfo": {
        "description": "Jetstream statistics.",
        "properties": {
          "cluster_size": {
            "default": 0,
            "description": "The size of the cluster.",
            "format": "int64",
            "type": "integer"
          },
          "leader": {
            "default": "",
            "description": "The leader of the cluster.",
            "type": "string"
          },
          "name": {
            "default": "",
            "description": "The name of the cluster.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Metadata": {
        "description": "Metadata about our currently running server.\n\nThis is mostly used for internal purposes and debugging.",
        "properties": {
          "cache": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CacheMetadata"
              }
            ],
            "description": "Metadata about our cache."
          },
          "engine": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EngineMetadata"
              }
            ],
            "description": "Metadata about our engine API connection."
          },
          "environment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Environment"
              }
            ],
            "description": "The environment we are running in."
          },
          "executor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExecutorMetadata"
              }
            ],
            "description": "Metadata about our executor API connection."
          },
          "fs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileSystemMetadata"
              }
            ],
            "description": "Metadata about our file system."
          },
          "git_hash": {
            "description": "The git hash of the server.",
            "type": "string"
          },
          "point_e": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PointEMetadata"
              }
            ],
            "description": "Metadata about our point-e instance."
          },
          "pubsub": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Connection"
              }
            ],
            "description": "Metadata about our pub-sub connection."
          }
        },
        "required": [
          "cache",
          "engine",
          "environment",
          "executor",
          "fs",
          "git_hash",
          "point_e",
          "pubsub"
        ],
        "type": "object"
      },
      "Method": {
        "description": "The Request Method (VERB)\n\nThis type also contains constants for a number of common HTTP methods such as GET, POST, etc.\n\nCurrently includes 8 variants representing the 8 methods defined in [RFC 7230](https://tools.ietf.org/html/rfc7231#section-4.1), plus PATCH, and an Extension variant for all extensions.",
        "oneOf": [
          {
            "description": "The `OPTIONS` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.2.1).",
            "enum": [
              "OPTIONS"
            ],
            "type": "string"
          },
          {
            "description": "The `GET` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3.1).",
            "enum": [
              "GET"
            ],
            "type": "string"
          },
          {
            "description": "The `POST` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3.1).",
            "enum": [
              "POST"
            ],
            "type": "string"
          },
          {
            "description": "The `PUT` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3.1).",
            "enum": [
              "PUT"
            ],
            "type": "string"
          },
          {
            "description": "The `DELETE` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3.5).",
            "enum": [
              "DELETE"
            ],
            "type": "string"
          },
          {
            "description": "The `HEAD` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3.2).",
            "enum": [
              "HEAD"
            ],
            "type": "string"
          },
          {
            "description": "The `TRACE` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3).",
            "enum": [
              "TRACE"
            ],
            "type": "string"
          },
          {
            "description": "The `CONNECT` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3.6).",
            "enum": [
              "CONNECT"
            ],
            "type": "string"
          },
          {
            "description": "The `PATCH` method as defined in [RFC 5789](https://tools.ietf.org/html/rfc5789).",
            "enum": [
              "PATCH"
            ],
            "type": "string"
          },
          {
            "description": "A catch all.",
            "enum": [
              "EXTENSION"
            ],
            "type": "string"
          }
        ]
      },
      "ModelingCmd": {
        "description": "Commands that the KittyCAD engine can execute.",
        "oneOf": [
          {
            "description": "Start a path.",
            "enum": [
              "StartPath"
            ],
            "type": "string"
          },
          {
            "additionalProperties": false,
            "description": "Move the path's \"pen\".",
            "properties": {
              "MovePathPen": {
                "properties": {
                  "path": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ModelingCmdId"
                      }
                    ],
                    "description": "The ID of the command which created the path."
                  },
                  "to": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Point3d"
                      }
                    ],
                    "description": "Where the path's pen should be."
                  }
                },
                "required": [
                  "path",
                  "to"
                ],
                "type": "object"
              }
            },
            "required": [
              "MovePathPen"
            ],
            "type": "object"
          },
          {
            "additionalProperties": false,
            "description": "Extend a path by adding a new segment which starts at the path's \"pen\". If no \"pen\" location has been set before (via `MovePen`), then the pen is at the origin.",
            "properties": {
              "ExtendPath": {
                "properties": {
                  "path": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ModelingCmdId"
                      }
                    ],
                    "description": "The ID of the command which created the path."
                  },
                  "segment": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/PathSegment"
                      }
                    ],
                    "description": "Segment to append to the path. This segment will implicitly begin at the current \"pen\" location."
                  }
                },
                "required": [
                  "path",
                  "segment"
                ],
                "type": "object"
              }
            },
            "required": [
              "ExtendPath"
            ],
            "type": "object"
          },
          {
            "additionalProperties": false,
            "description": "Extrude a 2D solid.",
            "properties": {
              "Extrude": {
                "$ref": "#/components/schemas/Extrude"
              }
            },
            "required": [
              "Extrude"
            ],
            "type": "object"
          },
          {
            "additionalProperties": false,
            "description": "Closes a path, converting it to a 2D solid.",
            "properties": {
              "ClosePath": {
                "properties": {
                  "path_id": {
                    "description": "Which path to close.",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "required": [
                  "path_id"
                ],
                "type": "object"
              }
            },
            "required": [
              "ClosePath"
            ],
            "type": "object"
          },
          {
            "additionalProperties": false,
            "description": "Camera drag started.",
            "properties": {
              "CameraDragStart": {
                "properties": {
                  "interaction": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/CameraDragInteractionType"
                      }
                    ],
                    "description": "The type of camera drag interaction."
                  },
                  "window": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Point2d"
                      }
                    ],
                    "description": "The initial mouse position."
                  }
                },
                "required": [
                  "interaction",
                  "window"
                ],
                "type": "object"
              }
            },
            "required": [
              "CameraDragStart"
            ],
            "type": "object"
          },
          {
            "additionalProperties": false,
            "description": "Camera drag continued.",
            "properties": {
              "CameraDragMove": {
                "properties": {
                  "interaction": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/CameraDragInteractionType"
                      }
                    ],
                    "description": "The type of camera drag interaction."
                  },
                  "sequence": {
                    "description": "Logical timestamp. The client should increment this with every event in the current mouse drag. That way, if the events are being sent over an unordered channel, the API can ignore the older events.",
                    "format": "uint32",
                    "minimum": 0,
                    "nullable": true,
                    "type": "integer"
                  },
                  "window": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Point2d"
                      }
                    ],
                    "description": "The current mouse position."
                  }
                },
                "required": [
                  "interaction",
                  "window"
                ],
                "type": "object"
              }
            },
            "required": [
              "CameraDragMove"
            ],
            "type": "object"
          },
          {
            "additionalProperties": false,
            "description": "Camera drag ended.",
            "properties": {
              "CameraDragEnd": {
                "properties": {
                  "interaction": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/CameraDragInteractionType"
                      }
                    ],
                    "description": "The type of camera drag interaction."
                  },
                  "window": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Point2d"
                      }
                    ],
                    "description": "The final mouse position."
                  }
                },
                "required": [
                  "interaction",
                  "window"
                ],
                "type": "object"
              }
            },
            "required": [
              "CameraDragEnd"
            ],
            "type": "object"
          }
        ]
      },
      "ModelingCmdId": {
        "description": "All commands have unique IDs. These should be randomly generated.",
        "format": "uuid",
        "type": "string"
      },
      "ModelingCmdReq": {
        "description": "A graphics command submitted to the KittyCAD engine via the Modeling API.",
        "properties": {
          "cmd": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ModelingCmd"
              }
            ],
            "description": "Which command to submit to the Kittycad engine."
          },
          "cmd_id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ModelingCmdId"
              }
            ],
            "description": "ID of command being submitted."
          },
          "file_id": {
            "description": "ID of the model's file.",
            "type": "string"
          }
        },
        "required": [
          "cmd",
          "cmd_id",
          "file_id"
        ],
        "type": "object"
      },
      "ModelingCmdReqBatch": {
        "description": "A batch set of graphics commands submitted to the KittyCAD engine via the Modeling API.",
        "properties": {
          "cmds": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ModelingCmdReq"
            },
            "description": "A set of commands to submit to the KittyCAD engine in a batch.",
            "type": "object"
          },
          "file_id": {
            "description": "Which file is being drawn in.",
            "type": "string"
          }
        },
        "required": [
          "cmds",
          "file_id"
        ],
        "type": "object"
      },
      "ModelingError": {
        "description": "Why a command submitted to the Modeling API failed.",
        "properties": {
          "error_code": {
            "description": "A string error code which refers to a family of errors. E.g. \"InvalidInput\".",
            "type": "string"
          },
          "external_message": {
            "description": "Describe the specific error which occurred. Will be shown to users, not logged.",
            "type": "string"
          },
          "internal_message": {
            "description": "Describe the specific error which occurred. Will be logged, not shown to users.",
            "type": "string"
          },
          "status_code": {
            "description": "A HTTP status code.",
            "format": "uint16",
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "error_code",
          "external_message",
          "internal_message",
          "status_code"
        ],
        "type": "object"
      },
      "ModelingOutcome": {
        "description": "The result from one modeling command in a batch.",
        "oneOf": [
          {
            "additionalProperties": false,
            "description": "Each successful command has some result. Unfortunately this isn't strongly typed, because the result depends on the command. This means the OpenAPI schema for this won't be very useful.",
            "properties": {
              "Success": {}
            },
            "required": [
              "Success"
            ],
            "type": "object"
          },
          {
            "additionalProperties": false,
            "description": "It failed. Why? See 'struct Error' above.",
            "properties": {
              "Error": {
                "$ref": "#/components/schemas/ModelingError"
              }
            },
            "required": [
              "Error"
            ],
            "type": "object"
          },
          {
            "additionalProperties": false,
            "description": "Cancelled because it required the output of a previous command, which failed.",
            "properties": {
              "Cancelled": {
                "properties": {
                  "what_failed": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ModelingCmdId"
                      }
                    ],
                    "description": "The ID of the command that failed, cancelling this command."
                  }
                },
                "required": [
                  "what_failed"
                ],
                "type": "object"
              }
            },
            "required": [
              "Cancelled"
            ],
            "type": "object"
          }
        ]
      },
      "ModelingOutcomes": {
        "description": "The result from a batch of modeling commands.",
        "properties": {
          "outcomes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ModelingOutcome"
            },
            "description": "The results from each command in the batch.",
            "type": "object"
          }
        },
        "required": [
          "outcomes"
        ],
        "type": "object"
      },
      "NewAddress": {
        "description": "The struct that is used to create a new record. This is automatically generated and has all the same fields as the main struct only it is missing the `id`.",
        "properties": {
          "city": {
            "description": "The city component.",
            "type": "string"
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CountryCode"
              }
            ],
            "description": "The country component. This is a two-letter ISO country code."
          },
          "state": {
            "description": "The state component.",
            "type": "string"
          },
          "street1": {
            "description": "The first street component.",
            "type": "string"
          },
          "street2": {
            "description": "The second street component.",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID that this address belongs to.",
            "type": "string"
          },
          "zip": {
            "description": "The zip component.",
            "type": "string"
          }
        },
        "required": [
          "country"
        ],
        "type": "object"
      },
      "OAuth2ClientInfo": {
        "description": "Information about an OAuth 2.0 client.",
        "properties": {
          "csrf_token": {
            "description": "Value used for [CSRF](https://tools.ietf.org/html/rfc6749#section-10.12) protection via the `state` parameter.",
            "type": "string"
          },
          "pkce_code_verifier": {
            "description": "Code Verifier used for [PKCE]((https://tools.ietf.org/html/rfc7636)) protection via the `code_verifier` parameter. The value must have a minimum length of 43 characters and a maximum length of 128 characters.  Each character must be ASCII alphanumeric or one of the characters \"-\" / \".\" / \"_\" / \"~\".",
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The URL for consent.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OAuth2GrantType": {
        "description": "An OAuth 2.0 Grant Type. These are documented here: <https://oauth.net/2/grant-types/>.",
        "oneOf": [
          {
            "description": "An OAuth 2.0 Device Authorization Grant.",
            "enum": [
              "urn:ietf:params:oauth:grant-type:device_code"
            ],
            "type": "string"
          }
        ]
      },
      "Onboarding": {
        "description": "Onboarding details",
        "properties": {
          "first_call_from_their_machine_date": {
            "description": "When the user first called an endpoint from their machine (i.e. not a litterbox execution)",
            "type": "string"
          },
          "first_litterbox_execute_date": {
            "description": "When the user first used the litterbox",
            "type": "string"
          },
          "first_token_date": {
            "description": "When the user created their first token",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OutputFile": {
        "description": "Output file contents.",
        "properties": {
          "contents": {
            "description": "The contents of the file. This is base64 encoded so we can ensure it is UTF-8 for JSON.",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "default": "",
            "description": "The name of the file.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OutputFormat": {
        "description": "Output format specifier.",
        "oneOf": [
          {
            "description": "glTF 2.0. We refer to this as glTF since that is how our customers refer to it, although by default it will be in binary format and thus technically (glb). If you prefer ascii output, you can set that option for the export.",
            "properties": {
              "storage": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Storage"
                  }
                ],
                "description": "Specifies which kind of glTF 2.0 will be exported."
              },
              "type": {
                "enum": [
                  "Gltf"
                ],
                "type": "string"
              }
            },
            "required": [
              "storage",
              "type"
            ],
            "type": "object"
          },
          {
            "description": "Wavefront OBJ format.",
            "properties": {
              "coords": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/System"
                  }
                ],
                "description": "Co-ordinate system of output data.\n\nDefaults to the [KittyCAD co-ordinate system].\n\n[KittyCAD co-ordinate system]: ../coord/constant.KITTYCAD.html"
              },
              "type": {
                "enum": [
                  "Obj"
                ],
                "type": "string"
              }
            },
            "required": [
              "coords",
              "type"
            ],
            "type": "object"
          },
          {
            "description": "ISO 10303-21 (STEP) format.",
            "properties": {
              "coords": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/System"
                  }
                ],
                "description": "Co-ordinate system of output data.\n\nDefaults to the [KittyCAD co-ordinate system].\n\n[KittyCAD co-ordinate system]: ../coord/constant.KITTYCAD.html"
              },
              "type": {
                "enum": [
                  "Step"
                ],
                "type": "string"
              }
            },
            "required": [
              "coords",
              "type"
            ],
            "type": "object"
          },
          {
            "description": "*ST**ereo**L**ithography format.",
            "properties": {
              "coords": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/System"
                  }
                ],
                "description": "Co-ordinate system of output data.\n\nDefaults to the [KittyCAD co-ordinate system].\n\n[KittyCAD co-ordinate system]: ../coord/constant.KITTYCAD.html"
              },
              "storage": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Storage"
                  }
                ],
                "description": "Export storage."
              },
              "type": {
                "enum": [
                  "Stl"
                ],
                "type": "string"
              }
            },
            "required": [
              "coords",
              "storage",
              "type"
            ],
            "type": "object"
          }
        ]
      },
      "PathSegment": {
        "description": "A segment of a path. Paths are composed of many segments.",
        "oneOf": [
          {
            "additionalProperties": false,
            "description": "A straight line segment. Goes from the current path \"pen\" to the given endpoint.",
            "properties": {
              "Line": {
                "properties": {
                  "end": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Point3d"
                      }
                    ],
                    "description": "End point of the line."
                  }
                },
                "required": [
                  "end"
                ],
                "type": "object"
              }
            },
            "required": [
              "Line"
            ],
            "type": "object"
          },
          {
            "additionalProperties": false,
            "description": "A circular arc segment.",
            "properties": {
              "Arc": {
                "properties": {
                  "angle_end": {
                    "description": "Start of the arc along circle's perimeter.",
                    "format": "float",
                    "type": "number"
                  },
                  "angle_start": {
                    "description": "Start of the arc along circle's perimeter.",
                    "format": "float",
                    "type": "number"
                  },
                  "center": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Point2d"
                      }
                    ],
                    "description": "Center of the circle"
                  },
                  "radius": {
                    "description": "Radius of the circle",
                    "format": "float",
                    "type": "number"
                  }
                },
                "required": [
                  "angle_end",
                  "angle_start",
                  "center",
                  "radius"
                ],
                "type": "object"
              }
            },
            "required": [
              "Arc"
            ],
            "type": "object"
          },
          {
            "additionalProperties": false,
            "description": "A cubic bezier curve segment. Start at the end of the current line, go through control point 1 and 2, then end at a given point.",
            "properties": {
              "Bezier": {
                "properties": {
                  "control1": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Point3d"
                      }
                    ],
                    "description": "First control point."
                  },
                  "control2": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Point3d"
                      }
                    ],
                    "description": "Second control point."
                  },
                  "end": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Point3d"
                      }
                    ],
                    "description": "Final control point."
                  }
                },
                "required": [
                  "control1",
                  "control2",
                  "end"
                ],
                "type": "object"
              }
            },
            "required": [
              "Bezier"
            ],
            "type": "object"
          }
        ]
      },
      "PaymentIntent": {
        "description": "A payment intent response.",
        "properties": {
          "client_secret": {
            "description": "The client secret is used for client-side retrieval using a publishable key. The client secret can be used to complete payment setup from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.",
            "type": "string"
          }
        },
        "required": [
          "client_secret"
        ],
        "type": "object"
      },
      "PaymentMethod": {
        "description": "A payment method.",
        "properties": {
          "billing_info": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingInfo"
              }
            ],
            "description": "The billing info for the payment method."
          },
          "card": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CardDetails"
              }
            ],
            "description": "The card, if it is one. For our purposes, this is the only type of payment method that we support.",
            "nullable": true
          },
          "created_at": {
            "description": "Time at which the object was created.",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "default": {},
            "description": "Set of key-value pairs.",
            "type": "object"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodType"
              }
            ],
            "description": "The type of payment method."
          }
        },
        "required": [
          "billing_info",
          "created_at",
          "type"
        ],
        "type": "object"
      },
      "PaymentMethodCardChecks": {
        "description": "Card checks.",
        "properties": {
          "address_line1_check": {
            "description": "If a address line1 was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "type": "string"
          },
          "address_postal_code_check": {
            "description": "If a address postal code was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "type": "string"
          },
          "cvc_check": {
            "description": "If a CVC was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaymentMethodType": {
        "description": "An enum representing the possible values of an `PaymentMethod`'s `type` field.",
        "oneOf": [
          {
            "description": "A card payment method.",
            "enum": [
              "card"
            ],
            "type": "string"
          }
        ]
      },
      "PhysicsConstant": {
        "description": "A physics constant.",
        "properties": {
          "completed_at": {
            "description": "The time and date the API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "constant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhysicsConstantName"
              }
            ],
            "description": "The constant we are returning."
          },
          "created_at": {
            "description": "The time and date the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
          },
          "started_at": {
            "description": "The time and date the API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the API call."
          },
          "updated_at": {
            "description": "The time and date the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "type": "string"
          },
          "value": {
            "description": "The resulting value of the constant.",
            "format": "double",
            "nullable": true,
            "type": "number"
          }
        },
        "required": [
          "constant",
          "created_at",
          "id",
          "status",
          "updated_at"
        ],
        "type": "object"
      },
      "PhysicsConstantName": {
        "description": "The valid types of phys constant names.",
        "oneOf": [
          {
            "description": "pi - Ratio of a circle's circumference to its diameter. <https://en.wikipedia.org/wiki/Pi>",
            "enum": [
              "pi"
            ],
            "type": "string"
          },
          {
            "description": "c - Speed of light in vacuum. <https://en.wikipedia.org/wiki//Speed_of_light>",
            "enum": [
              "c"
            ],
            "type": "string"
          },
          {
            "description": "Speed of light in a vacuum. <https://en.wikipedia.org/wiki//Speed_of_light>",
            "enum": [
              "speed_of_light"
            ],
            "type": "string"
          },
          {
            "description": "G - Newtonian constant of gravitation. <https://en.wikipedia.org/wiki/Gravitational_constant>",
            "enum": [
              "G"
            ],
            "type": "string"
          },
          {
            "description": "Newtonian constant of gravitation. <https://en.wikipedia.org/wiki/Gravitational_constant>",
            "enum": [
              "newtonian_gravitation"
            ],
            "type": "string"
          },
          {
            "description": "h - Planck constant. <https://en.wikipedia.org/wiki/Planck_constant>",
            "enum": [
              "h"
            ],
            "type": "string"
          },
          {
            "description": "Planck constant. <https://en.wikipedia.org/wiki/Planck_constant>",
            "enum": [
              "planck_const"
            ],
            "type": "string"
          },
          {
            "description": "mu_0 - vacuum permeability. <https://en.wikipedia.org/wiki/Vacuum_permeability>",
            "enum": [
              "mu_0"
            ],
            "type": "string"
          },
          {
            "description": "vacuum permeability. <https://en.wikipedia.org/wiki/Vacuum_permeability>",
            "enum": [
              "vacuum_permeability"
            ],
            "type": "string"
          },
          {
            "description": "ε_0 - vacuum permitivity. <https://en.wikipedia.org/wiki/Vacuum_permittivity>",
            "enum": [
              "E_0"
            ],
            "type": "string"
          },
          {
            "description": "vacuum permitivity. <https://en.wikipedia.org/wiki/Vacuum_permittivity>]",
            "enum": [
              "vacuum_permitivity"
            ],
            "type": "string"
          },
          {
            "description": "Z_0 - characteristic impedance of vacuum. <https://en.wikipedia.org/wiki/Impedance_of_free_space>",
            "enum": [
              "Z_0"
            ],
            "type": "string"
          },
          {
            "description": "characteristic impedance of vacuum. <https://en.wikipedia.org/wiki/Impedance_of_free_space>",
            "enum": [
              "vacuum_impedance"
            ],
            "type": "string"
          },
          {
            "description": "k_e - Coulomb's constant. <https://en.wikipedia.org/wiki/Coulomb_constant>",
            "enum": [
              "k_e"
            ],
            "type": "string"
          },
          {
            "description": "Coulomb's constant. <https://en.wikipedia.org/wiki/Coulomb_constant>",
            "enum": [
              "coulomb_const"
            ],
            "type": "string"
          },
          {
            "description": "e - elementary charge. <https://en.wikipedia.org/wiki/Elementary_charge>",
            "enum": [
              "e"
            ],
            "type": "string"
          },
          {
            "description": "elementary charge. <https://en.wikipedia.org/wiki/Elementary_charge>",
            "enum": [
              "elementary_charge"
            ],
            "type": "string"
          },
          {
            "description": "m_e - electron mass. <https://en.wikipedia.org/wiki/Electron_mass>",
            "enum": [
              "m_e"
            ],
            "type": "string"
          },
          {
            "description": "electron mass. <https://en.wikipedia.org/wiki/Electron_mass>",
            "enum": [
              "electron_mass"
            ],
            "type": "string"
          },
          {
            "description": "m_p - proton mass. <https://en.wikipedia.org/wiki/Proton>",
            "enum": [
              "m_p"
            ],
            "type": "string"
          },
          {
            "description": "proton mass. <https://en.wikipedia.org/wiki/Proton>",
            "enum": [
              "proton_mass"
            ],
            "type": "string"
          },
          {
            "description": "mu_B - Bohr magneton. <https://en.wikipedia.org/wiki/Bohr_magneton>",
            "enum": [
              "mu_B"
            ],
            "type": "string"
          },
          {
            "description": "Bohr magneton. <https://en.wikipedia.org/wiki/Bohr_magneton>",
            "enum": [
              "bohr_magneton"
            ],
            "type": "string"
          },
          {
            "description": "NA - Avogadro's Number. <https://en.wikipedia.org/wiki/Avogadro_constant>",
            "enum": [
              "NA"
            ],
            "type": "string"
          },
          {
            "description": "Avogadro's Number. <https://en.wikipedia.org/wiki/Avogadro_constant>",
            "enum": [
              "avogadro_num"
            ],
            "type": "string"
          },
          {
            "description": "R - Molar Gas constant. <https://en.wikipedia.org/wiki/Gas_constant>",
            "enum": [
              "R"
            ],
            "type": "string"
          },
          {
            "description": "Molar Gas constant. <https://en.wikipedia.org/wiki/Gas_constant>",
            "enum": [
              "molar_gas_const"
            ],
            "type": "string"
          },
          {
            "description": "K_B - Boltzmann constant. <https://en.wikipedia.org/wiki/Boltzmann_constant>",
            "enum": [
              "K_B"
            ],
            "type": "string"
          },
          {
            "description": "Boltzmann constant. <https://en.wikipedia.org/wiki/Boltzmann_constant>",
            "enum": [
              "boltzmann_const"
            ],
            "type": "string"
          },
          {
            "description": "F - Faraday constant. <https://en.wikipedia.org/wiki/Faraday_constant>",
            "enum": [
              "F"
            ],
            "type": "string"
          },
          {
            "description": "Faraday constant. <https://en.wikipedia.org/wiki/Faraday_constant>",
            "enum": [
              "faraday_const"
            ],
            "type": "string"
          },
          {
            "description": "Sigma - Stefan-Boltzmann constant. <https://en.wikipedia.org/wiki/Stefan%E2%80%93Boltzmann_constant>",
            "enum": [
              "sigma"
            ],
            "type": "string"
          },
          {
            "description": "Stefan-Boltzmann constant. <https://en.wikipedia.org/wiki/Stefan%E2%80%93Boltzmann_constant>",
            "enum": [
              "stefan_boltzmann_const"
            ],
            "type": "string"
          }
        ]
      },
      "PluginsInfo": {
        "description": "Available plugins per type.\n\n**Note**: Only unmanaged (V1) plugins are included in this list. V1 plugins are \\\"lazily\\\" loaded, and are not returned in this list if there is no resource using the plugin.",
        "properties": {
          "authorization": {
            "description": "Names of available authorization plugins.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "log": {
            "description": "Names of available logging-drivers, and logging-driver plugins.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "network": {
            "description": "Names of available network-drivers, and network-driver plugins.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "volume": {
            "description": "Names of available volume-drivers, and network-driver plugins.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Point2d": {
        "description": "A point in 2D space",
        "properties": {
          "x": {
            "format": "float",
            "type": "number"
          },
          "y": {
            "format": "float",
            "type": "number"
          }
        },
        "required": [
          "x",
          "y"
        ],
        "type": "object"
      },
      "Point3d": {
        "description": "A point in 3D space",
        "properties": {
          "x": {
            "format": "float",
            "type": "number"
          },
          "y": {
            "format": "float",
            "type": "number"
          },
          "z": {
            "format": "float",
            "type": "number"
          }
        },
        "required": [
          "x",
          "y",
          "z"
        ],
        "type": "object"
      },
      "PointEMetadata": {
        "description": "Metadata about our point-e instance.\n\nThis is mostly used for internal purposes and debugging.",
        "properties": {
          "ok": {
            "description": "If the point-e service returned an ok response from ping.",
            "type": "boolean"
          }
        },
        "required": [
          "ok"
        ],
        "type": "object"
      },
      "Pong": {
        "description": "The response from the `/ping` endpoint.",
        "properties": {
          "message": {
            "description": "The pong response.",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "RegistryServiceConfig": {
        "description": "RegistryServiceConfig stores daemon registry services configuration.",
        "properties": {
          "allow_nondistributable_artifacts_cid_rs": {
            "description": "List of IP ranges to which nondistributable artifacts can be pushed, using the CIDR syntax [RFC 4632](https://tools.ietf.org/html/4632).  Some images (for example, Windows base images) contain artifacts whose distribution is restricted by license. When these images are pushed to a registry, restricted artifacts are not included.  This configuration override this behavior, and enables the daemon to push nondistributable artifacts to all registries whose resolved IP address is within the subnet described by the CIDR syntax.  This option is useful when pushing images containing nondistributable artifacts to a registry on an air-gapped network so hosts on that network can pull the images without connecting to another server.\n\n**Warning**: Nondistributable artifacts typically have restrictions on how and where they can be distributed and shared. Only use this feature to push artifacts to private registries and ensure that you are in compliance with any terms that cover redistributing nondistributable artifacts.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "allow_nondistributable_artifacts_hostnames": {
            "description": "List of registry hostnames to which nondistributable artifacts can be pushed, using the format `<hostname>[:<port>]` or `<IP address>[:<port>]`.  Some images (for example, Windows base images) contain artifacts whose distribution is restricted by license. When these images are pushed to a registry, restricted artifacts are not included.  This configuration override this behavior for the specified registries.  This option is useful when pushing images containing nondistributable artifacts to a registry on an air-gapped network so hosts on that network can pull the images without connecting to another server.\n\n**Warning**: Nondistributable artifacts typically have restrictions on how and where they can be distributed and shared. Only use this feature to push artifacts to private registries and ensure that you are in compliance with any terms that cover redistributing nondistributable artifacts.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "index_configs": {
            "additionalProperties": {
              "$ref": "#/components/schemas/IndexInfo"
            },
            "type": "object"
          },
          "insecure_registry_cid_rs": {
            "description": "List of IP ranges of insecure registries, using the CIDR syntax ([RFC 4632](https://tools.ietf.org/html/4632)). Insecure registries accept un-encrypted (HTTP) and/or untrusted (HTTPS with certificates from unknown CAs) communication.  By default, local registries (`127.0.0.0/8`) are configured as insecure. All other registries are secure. Communicating with an insecure registry is not possible if the daemon assumes that registry is secure.  This configuration override this behavior, insecure communication with registries whose resolved IP address is within the subnet described by the CIDR syntax.  Registries can also be marked insecure by hostname. Those registries are listed under `IndexConfigs` and have their `Secure` field set to `false`.\n\n**Warning**: Using this option can be useful when running a local  registry, but introduces security vulnerabilities. This option should therefore ONLY be used for testing purposes. For increased security, users should add their CA to their system's list of trusted CAs instead of enabling this option.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "mirrors": {
            "description": "List of registry URLs that act as a mirror for the official (`docker.io`) registry.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Runtime": {
        "description": "Runtime describes an [OCI compliant](https://github.com/opencontainers/runtime-spec) runtime.  The runtime is invoked by the daemon via the `containerd` daemon. OCI runtimes act as an interface to the Linux kernel namespaces, cgroups, and SELinux.",
        "properties": {
          "path": {
            "description": "Name and, optional, path, of the OCI executable binary.  If the path is omitted, the daemon searches the host's `$PATH` for the binary and uses the first result.",
            "nullable": true,
            "type": "string"
          },
          "runtime_args": {
            "description": "List of command-line arguments to pass to the runtime when invoked.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Session": {
        "description": "An authentication session.\n\nFor our UIs, these are automatically created by Next.js.",
        "properties": {
          "created_at": {
            "description": "The date and time the session was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "expires": {
            "description": "The date and time the session expires.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the session.",
            "type": "string"
          },
          "session_token": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The session token."
          },
          "updated_at": {
            "description": "The date and time the session was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user that the session belongs to.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "expires",
          "session_token",
          "updated_at"
        ],
        "type": "object"
      },
      "Storage": {
        "description": "Describes the storage format of a glTF 2.0 scene.",
        "oneOf": [
          {
            "description": "Binary glTF 2.0.\n\nThis is a single binary with .glb extension.\n\nThis is the default setting.",
            "enum": [
              "binary"
            ],
            "type": "string"
          },
          {
            "description": "Standard glTF 2.0.\n\nThis is a JSON file with .gltf extension paired with a separate binary blob file with .bin extension.",
            "enum": [
              "standard"
            ],
            "type": "string"
          },
          {
            "description": "Embedded glTF 2.0.\n\nSingle JSON file with .gltf extension binary data encoded as base64 data URIs.",
            "enum": [
              "embedded"
            ],
            "type": "string"
          }
        ]
      },
      "System": {
        "description": "Co-ordinate system definition.\n\nThe `up` axis must be orthogonal to the `forward` axis.\n\nSee [cglearn.eu] for background reading.\n\n[cglearn.eu](https://cglearn.eu/pub/computer-graphics/introduction-to-geometry#material-coordinate-systems-1)",
        "properties": {
          "forward": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AxisDirectionPair"
              }
            ],
            "description": "Axis the front face of a model looks along."
          },
          "up": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AxisDirectionPair"
              }
            ],
            "description": "Axis pointing up and away from a model."
          }
        },
        "required": [
          "forward",
          "up"
        ],
        "type": "object"
      },
      "SystemInfoCgroupDriverEnum": {
        "enum": [
          "",
          "cgroupfs",
          "systemd",
          "none"
        ],
        "type": "string"
      },
      "SystemInfoCgroupVersionEnum": {
        "enum": [
          "",
          "1",
          "2"
        ],
        "type": "string"
      },
      "SystemInfoDefaultAddressPools": {
        "properties": {
          "base": {
            "description": "The network address in CIDR format",
            "nullable": true,
            "type": "string"
          },
          "size": {
            "description": "The network pool size",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SystemInfoIsolationEnum": {
        "enum": [
          "",
          "default",
          "hyperv",
          "process"
        ],
        "type": "string"
      },
      "UnitAngle": {
        "description": "The valid types of angle formats.",
        "oneOf": [
          {
            "description": "Degrees <https://en.wikipedia.org/wiki/Degree_(angle)>",
            "enum": [
              "degrees"
            ],
            "type": "string"
          },
          {
            "description": "Radians <https://en.wikipedia.org/wiki/Radian>",
            "enum": [
              "radians"
            ],
            "type": "string"
          }
        ]
      },
      "UnitAngleConversion": {
        "description": "Result of converting between units.",
        "properties": {
          "completed_at": {
            "description": "The time and date the API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The time and date the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
          },
          "input": {
            "default": 0.0,
            "description": "The input value.",
            "format": "double",
            "type": "number"
          },
          "input_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitAngle"
              }
            ],
            "description": "The source format of the unit conversion."
          },
          "output": {
            "description": "The resulting value.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "output_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitAngle"
              }
            ],
            "description": "The output format of the unit conversion."
          },
          "started_at": {
            "description": "The time and date the API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the API call."
          },
          "updated_at": {
            "description": "The time and date the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at"
        ],
        "type": "object"
      },
      "UnitArea": {
        "description": "The valid types of area units.",
        "oneOf": [
          {
            "description": "Acres <https://en.wikipedia.org/wiki/Acre>",
            "enum": [
              "acres"
            ],
            "type": "string"
          },
          {
            "description": "Hectares <https://en.wikipedia.org/wiki/Hectare>",
            "enum": [
              "hectares"
            ],
            "type": "string"
          },
          {
            "description": "Square centimetres <https://en.wikipedia.org/wiki/Square_centimetre>",
            "enum": [
              "square_centimetres"
            ],
            "type": "string"
          },
          {
            "description": "Square decimetres <https://en.wikipedia.org/wiki/Square_decimetre>",
            "enum": [
              "square_decimetres"
            ],
            "type": "string"
          },
          {
            "description": "Square feet <https://en.wikipedia.org/wiki/Square_foot>",
            "enum": [
              "square_feet"
            ],
            "type": "string"
          },
          {
            "description": "Square hectometres <https://en.wikipedia.org/wiki/Square_hectometre>",
            "enum": [
              "square_hectometres"
            ],
            "type": "string"
          },
          {
            "description": "Square inches <https://en.wikipedia.org/wiki/Square_inch>",
            "enum": [
              "square_inches"
            ],
            "type": "string"
          },
          {
            "description": "Square kilometres <https://en.wikipedia.org/wiki/Square_kilometre>",
            "enum": [
              "square_kilometres"
            ],
            "type": "string"
          },
          {
            "description": "Square metres <https://en.wikipedia.org/wiki/Square_metre>",
            "enum": [
              "square_metres"
            ],
            "type": "string"
          },
          {
            "description": "Square micrometres <https://en.wikipedia.org/wiki/Square_micrometre>",
            "enum": [
              "square_micrometres"
            ],
            "type": "string"
          },
          {
            "description": "Square miles <https://en.wikipedia.org/wiki/Square_mile>",
            "enum": [
              "square_miles"
            ],
            "type": "string"
          },
          {
            "description": "Square millimetres <https://en.wikipedia.org/wiki/Square_millimetre>",
            "enum": [
              "square_millimetres"
            ],
            "type": "string"
          },
          {
            "description": "Square nanometres <https://en.wikipedia.org/wiki/Square_nanometre>",
            "enum": [
              "square_nanometres"
            ],
            "type": "string"
          },
          {
            "description": "Square yards <https://en.wikipedia.org/wiki/Square_mile>",
            "enum": [
              "square_yards"
            ],
            "type": "string"
          }
        ]
      },
      "UnitAreaConversion": {
        "description": "Result of converting between units.",
        "properties": {
          "completed_at": {
            "description": "The time and date the API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The time and date the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
          },
          "input": {
            "default": 0.0,
            "description": "The input value.",
            "format": "double",
            "type": "number"
          },
          "input_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitArea"
              }
            ],
            "description": "The source format of the unit conversion."
          },
          "output": {
            "description": "The resulting value.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "output_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitArea"
              }
            ],
            "description": "The output format of the unit conversion."
          },
          "started_at": {
            "description": "The time and date the API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the API call."
          },
          "updated_at": {
            "description": "The time and date the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at"
        ],
        "type": "object"
      },
      "UnitCurrent": {
        "description": "The valid types of current units.",
        "oneOf": [
          {
            "description": "Amperes <https://en.wikipedia.org/wiki/Ampere>",
            "enum": [
              "amperes"
            ],
            "type": "string"
          },
          {
            "description": "Microamperes <https://en.wikipedia.org/wiki/Microampere>",
            "enum": [
              "microamperes"
            ],
            "type": "string"
          },
          {
            "description": "Milliamperes <https://en.wikipedia.org/wiki/Milliampere>",
            "enum": [
              "milliamperes"
            ],
            "type": "string"
          },
          {
            "description": "Nanoamperes <https://en.wikipedia.org/wiki/Nanoampere>",
            "enum": [
              "nanoamperes"
            ],
            "type": "string"
          }
        ]
      },
      "UnitCurrentConversion": {
        "description": "Result of converting between units.",
        "properties": {
          "completed_at": {
            "description": "The time and date the API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The time and date the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
          },
          "input": {
            "default": 0.0,
            "description": "The input value.",
            "format": "double",
            "type": "number"
          },
          "input_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitCurrent"
              }
            ],
            "description": "The source format of the unit conversion."
          },
          "output": {
            "description": "The resulting value.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "output_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitCurrent"
              }
            ],
            "description": "The output format of the unit conversion."
          },
          "started_at": {
            "description": "The time and date the API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the API call."
          },
          "updated_at": {
            "description": "The time and date the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at"
        ],
        "type": "object"
      },
      "UnitEnergy": {
        "description": "The valid types of energy units.",
        "oneOf": [
          {
            "description": "British Thermal Unit (BTU) <https://en.wikipedia.org/wiki/British_thermal_unit>",
            "enum": [
              "btu"
            ],
            "type": "string"
          },
          {
            "description": "Electron Volts (eV) <https://en.wikipedia.org/wiki/Electronvolt>",
            "enum": [
              "electronvolts"
            ],
            "type": "string"
          },
          {
            "description": "Joules (or watt-seconds) <https://en.wikipedia.org/wiki/Joule>",
            "enum": [
              "joules"
            ],
            "type": "string"
          },
          {
            "description": "Kilocalories (often just called calories) <https://en.wikipedia.org/wiki/Kilocalorie>",
            "enum": [
              "kilocalories"
            ],
            "type": "string"
          },
          {
            "description": "Kilowatt hours (kWh) <https://en.wikipedia.org/wiki/Kilowatt-hour>",
            "enum": [
              "kilowatt_hours"
            ],
            "type": "string"
          },
          {
            "description": "Watt hours (Wh) <https://en.wikipedia.org/wiki/Kilowatt-hour>",
            "enum": [
              "watt_hours"
            ],
            "type": "string"
          }
        ]
      },
      "UnitEnergyConversion": {
        "description": "Result of converting between units.",
        "properties": {
          "completed_at": {
            "description": "The time and date the API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The time and date the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
          },
          "input": {
            "default": 0.0,
            "description": "The input value.",
            "format": "double",
            "type": "number"
          },
          "input_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitEnergy"
              }
            ],
            "description": "The source format of the unit conversion."
          },
          "output": {
            "description": "The resulting value.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "output_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitEnergy"
              }
            ],
            "description": "The output format of the unit conversion."
          },
          "started_at": {
            "description": "The time and date the API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the API call."
          },
          "updated_at": {
            "description": "The time and date the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at"
        ],
        "type": "object"
      },
      "UnitForce": {
        "description": "The valid types of force units.",
        "oneOf": [
          {
            "description": "Dynes <https://en.wikipedia.org/wiki/Dyne>",
            "enum": [
              "dynes"
            ],
            "type": "string"
          },
          {
            "description": "Kiloponds <https://en.wikipedia.org/wiki/Kilopond>",
            "enum": [
              "kiloponds"
            ],
            "type": "string"
          },
          {
            "description": "Micronewtons <https://en.wikipedia.org/wiki/Newton_(unit)>",
            "enum": [
              "micronewtons"
            ],
            "type": "string"
          },
          {
            "description": "Millinewtons <https://en.wikipedia.org/wiki/Newton_(unit)>",
            "enum": [
              "millinewtons"
            ],
            "type": "string"
          },
          {
            "description": "Newtons <https://en.wikipedia.org/wiki/Newton_(unit)>",
            "enum": [
              "newtons"
            ],
            "type": "string"
          },
          {
            "description": "Poundals <https://en.wikipedia.org/wiki/Poundal>",
            "enum": [
              "poundals"
            ],
            "type": "string"
          },
          {
            "description": "Pounds <https://en.wikipedia.org/wiki/Pound_(force)>",
            "enum": [
              "pounds"
            ],
            "type": "string"
          }
        ]
      },
      "UnitForceConversion": {
        "description": "Result of converting between units.",
        "properties": {
          "completed_at": {
            "description": "The time and date the API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The time and date the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
          },
          "input": {
            "default": 0.0,
            "description": "The input value.",
            "format": "double",
            "type": "number"
          },
          "input_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitForce"
              }
            ],
            "description": "The source format of the unit conversion."
          },
          "output": {
            "description": "The resulting value.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "output_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitForce"
              }
            ],
            "description": "The output format of the unit conversion."
          },
          "started_at": {
            "description": "The time and date the API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the API call."
          },
          "updated_at": {
            "description": "The time and date the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at"
        ],
        "type": "object"
      },
      "UnitFrequency": {
        "description": "The valid types of frequency units.",
        "oneOf": [
          {
            "description": "Gigahertz <https://en.wikipedia.org/wiki/Hertz>",
            "enum": [
              "gigahertz"
            ],
            "type": "string"
          },
          {
            "description": "Hertz <https://en.wikipedia.org/wiki/Hertz>",
            "enum": [
              "hertz"
            ],
            "type": "string"
          },
          {
            "description": "Kilohertz <https://en.wikipedia.org/wiki/Hertz>",
            "enum": [
              "kilohertz"
            ],
            "type": "string"
          },
          {
            "description": "Megahertz <https://en.wikipedia.org/wiki/Hertz>",
            "enum": [
              "megahertz"
            ],
            "type": "string"
          },
          {
            "description": "Microhertz <https://en.wikipedia.org/wiki/Hertz>",
            "enum": [
              "microhertz"
            ],
            "type": "string"
          },
          {
            "description": "Millihertz <https://en.wikipedia.org/wiki/Hertz>",
            "enum": [
              "millihertz"
            ],
            "type": "string"
          },
          {
            "description": "Nanohertz <https://en.wikipedia.org/wiki/Hertz>",
            "enum": [
              "nanohertz"
            ],
            "type": "string"
          },
          {
            "description": "Terahertz <https://en.wikipedia.org/wiki/Hertz>",
            "enum": [
              "terahertz"
            ],
            "type": "string"
          }
        ]
      },
      "UnitFrequencyConversion": {
        "description": "Result of converting between units.",
        "properties": {
          "completed_at": {
            "description": "The time and date the API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The time and date the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
          },
          "input": {
            "default": 0.0,
            "description": "The input value.",
            "format": "double",
            "type": "number"
          },
          "input_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitFrequency"
              }
            ],
            "description": "The source format of the unit conversion."
          },
          "output": {
            "description": "The resulting value.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "output_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitFrequency"
              }
            ],
            "description": "The output format of the unit conversion."
          },
          "started_at": {
            "description": "The time and date the API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the API call."
          },
          "updated_at": {
            "description": "The time and date the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at"
        ],
        "type": "object"
      },
      "UnitLength": {
        "description": "The valid types of length units.",
        "oneOf": [
          {
            "description": "Centimetres <https://en.wikipedia.org/wiki/Centimetre>",
            "enum": [
              "centimetres"
            ],
            "type": "string"
          },
          {
            "description": "Decimetres <https://en.wikipedia.org/wiki/Decimetre>",
            "enum": [
              "decimetres"
            ],
            "type": "string"
          },
          {
            "description": "Feet <https://en.wikipedia.org/wiki/Foot_(unit)>",
            "enum": [
              "feet"
            ],
            "type": "string"
          },
          {
            "description": "Furlongs <https://en.wikipedia.org/wiki/Furlong>",
            "enum": [
              "furlongs"
            ],
            "type": "string"
          },
          {
            "description": "Hectometres <https://en.wikipedia.org/wiki/Hectometre>",
            "enum": [
              "hectometres"
            ],
            "type": "string"
          },
          {
            "description": "Inches <https://en.wikipedia.org/wiki/Inch>",
            "enum": [
              "inches"
            ],
            "type": "string"
          },
          {
            "description": "Kilometres <https://en.wikipedia.org/wiki/Kilometre>",
            "enum": [
              "kilometres"
            ],
            "type": "string"
          },
          {
            "description": "Metres <https://en.wikipedia.org/wiki/Metre>",
            "enum": [
              "metres"
            ],
            "type": "string"
          },
          {
            "description": "Micrometres <https://en.wikipedia.org/wiki/Micrometre>",
            "enum": [
              "micrometres"
            ],
            "type": "string"
          },
          {
            "description": "Miles <https://en.wikipedia.org/wiki/Mile>",
            "enum": [
              "miles"
            ],
            "type": "string"
          },
          {
            "description": "Millimetres <https://en.wikipedia.org/wiki/Millimetre>",
            "enum": [
              "millimetres"
            ],
            "type": "string"
          },
          {
            "description": "Nanometres <https://en.wikipedia.org/wiki/Nanometre>",
            "enum": [
              "nanometres"
            ],
            "type": "string"
          },
          {
            "description": "Yards <https://en.wikipedia.org/wiki/Yard>",
            "enum": [
              "yards"
            ],
            "type": "string"
          }
        ]
      },
      "UnitLengthConversion": {
        "description": "Result of converting between units.",
        "properties": {
          "completed_at": {
            "description": "The time and date the API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The time and date the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
          },
          "input": {
            "default": 0.0,
            "description": "The input value.",
            "format": "double",
            "type": "number"
          },
          "input_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitLength"
              }
            ],
            "description": "The source format of the unit conversion."
          },
          "output": {
            "description": "The resulting value.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "output_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitLength"
              }
            ],
            "description": "The output format of the unit conversion."
          },
          "started_at": {
            "description": "The time and date the API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the API call."
          },
          "updated_at": {
            "description": "The time and date the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at"
        ],
        "type": "object"
      },
      "UnitMass": {
        "description": "The valid types of mass units.",
        "oneOf": [
          {
            "description": "Carats <https://en.wikipedia.org/wiki/Carat_(mass)>",
            "enum": [
              "carats"
            ],
            "type": "string"
          },
          {
            "description": "Grains <https://en.wikipedia.org/wiki/Grain_(unit)>",
            "enum": [
              "grains"
            ],
            "type": "string"
          },
          {
            "description": "Grams <https://en.wikipedia.org/wiki/Gram>",
            "enum": [
              "grams"
            ],
            "type": "string"
          },
          {
            "description": "Kilograms <https://en.wikipedia.org/wiki/Kilogram>",
            "enum": [
              "kilograms"
            ],
            "type": "string"
          },
          {
            "description": "Long tons <https://en.wikipedia.org/wiki/Long_ton>",
            "enum": [
              "long_tons"
            ],
            "type": "string"
          },
          {
            "description": "Metric tons <https://en.wikipedia.org/wiki/Tonne>",
            "enum": [
              "metric_tons"
            ],
            "type": "string"
          },
          {
            "description": "Micrograms <https://en.wikipedia.org/wiki/Microgram>",
            "enum": [
              "micrograms"
            ],
            "type": "string"
          },
          {
            "description": "Milligrams <https://en.wikipedia.org/wiki/Milligram>",
            "enum": [
              "milligrams"
            ],
            "type": "string"
          },
          {
            "description": "Ounces <https://en.wikipedia.org/wiki/Ounce>",
            "enum": [
              "ounces"
            ],
            "type": "string"
          },
          {
            "description": "Pennyweights <https://en.wikipedia.org/wiki/Pennyweight>",
            "enum": [
              "pennyweights"
            ],
            "type": "string"
          },
          {
            "description": "Pounds <https://en.wikipedia.org/wiki/Pound_(mass)>",
            "enum": [
              "pounds"
            ],
            "type": "string"
          },
          {
            "description": "Short tons <https://en.wikipedia.org/wiki/Short_ton>",
            "enum": [
              "short_tons"
            ],
            "type": "string"
          },
          {
            "description": "Stones <https://en.wikipedia.org/wiki/Stone_(unit)>",
            "enum": [
              "stones"
            ],
            "type": "string"
          },
          {
            "description": "Troy ounces <https://en.wikipedia.org/wiki/Troy_ounce>",
            "enum": [
              "troy_ounces"
            ],
            "type": "string"
          },
          {
            "description": "Troy pounds <https://en.wikipedia.org/wiki/Troy_pound>",
            "enum": [
              "troy_pounds"
            ],
            "type": "string"
          }
        ]
      },
      "UnitMassConversion": {
        "description": "Result of converting between units.",
        "properties": {
          "completed_at": {
            "description": "The time and date the API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The time and date the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
          },
          "input": {
            "default": 0.0,
            "description": "The input value.",
            "format": "double",
            "type": "number"
          },
          "input_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitMass"
              }
            ],
            "description": "The source format of the unit conversion."
          },
          "output": {
            "description": "The resulting value.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "output_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitMass"
              }
            ],
            "description": "The output format of the unit conversion."
          },
          "started_at": {
            "description": "The time and date the API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the API call."
          },
          "updated_at": {
            "description": "The time and date the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at"
        ],
        "type": "object"
      },
      "UnitPower": {
        "description": "The valid types of power units.",
        "oneOf": [
          {
            "description": "British thermal units (BTU) per minute <https://en.wikipedia.org/wiki/British_thermal_unit>",
            "enum": [
              "btu_per_minute"
            ],
            "type": "string"
          },
          {
            "description": "Horsepower (hp) <https://en.wikipedia.org/wiki/Horsepower>",
            "enum": [
              "horsepower"
            ],
            "type": "string"
          },
          {
            "description": "Kilowatts <https://en.wikipedia.org/wiki/Kilowatt>",
            "enum": [
              "kilowatts"
            ],
            "type": "string"
          },
          {
            "description": "Metric horsepower (PS) <https://en.wikipedia.org/wiki/Horsepower#Metric_horsepower>",
            "enum": [
              "metric_horsepower"
            ],
            "type": "string"
          },
          {
            "description": "Microwatts <https://en.wikipedia.org/wiki/Microwatt>",
            "enum": [
              "microwatts"
            ],
            "type": "string"
          },
          {
            "description": "Millwatts <https://en.wikipedia.org/wiki/Milliwatt>",
            "enum": [
              "milliwatts"
            ],
            "type": "string"
          },
          {
            "description": "Watts <https://en.wikipedia.org/wiki/Watt>",
            "enum": [
              "watts"
            ],
            "type": "string"
          }
        ]
      },
      "UnitPowerConversion": {
        "description": "Result of converting between units.",
        "properties": {
          "completed_at": {
            "description": "The time and date the API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The time and date the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
          },
          "input": {
            "default": 0.0,
            "description": "The input value.",
            "format": "double",
            "type": "number"
          },
          "input_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitPower"
              }
            ],
            "description": "The source format of the unit conversion."
          },
          "output": {
            "description": "The resulting value.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "output_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitPower"
              }
            ],
            "description": "The output format of the unit conversion."
          },
          "started_at": {
            "description": "The time and date the API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the API call."
          },
          "updated_at": {
            "description": "The time and date the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at"
        ],
        "type": "object"
      },
      "UnitPressure": {
        "description": "The valid types of pressure units.",
        "oneOf": [
          {
            "description": "Atmospheres <https://en.wikipedia.org/wiki/Standard_atmosphere_(unit)>",
            "enum": [
              "atmospheres"
            ],
            "type": "string"
          },
          {
            "description": "Bars <https://en.wikipedia.org/wiki/Bar_(unit)>",
            "enum": [
              "bars"
            ],
            "type": "string"
          },
          {
            "description": "Hectopascals <https://en.wikipedia.org/wiki/Hectopascal>",
            "enum": [
              "hectopascals"
            ],
            "type": "string"
          },
          {
            "description": "Kilopascals <https://en.wikipedia.org/wiki/Kilopascal>",
            "enum": [
              "kilopascals"
            ],
            "type": "string"
          },
          {
            "description": "Millibars <https://en.wikipedia.org/wiki/Bar_(unit)>",
            "enum": [
              "millibars"
            ],
            "type": "string"
          },
          {
            "description": "Pascals <https://en.wikipedia.org/wiki/Pascal_(unit)>",
            "enum": [
              "pascals"
            ],
            "type": "string"
          },
          {
            "description": "Pounds per square inch (PSI) - <https://en.wikipedia.org/wiki/Pound_per_square_inch>",
            "enum": [
              "psi"
            ],
            "type": "string"
          }
        ]
      },
      "UnitPressureConversion": {
        "description": "Result of converting between units.",
        "properties": {
          "completed_at": {
            "description": "The time and date the API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The time and date the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
          },
          "input": {
            "default": 0.0,
            "description": "The input value.",
            "format": "double",
            "type": "number"
          },
          "input_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitPressure"
              }
            ],
            "description": "The source format of the unit conversion."
          },
          "output": {
            "description": "The resulting value.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "output_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitPressure"
              }
            ],
            "description": "The output format of the unit conversion."
          },
          "started_at": {
            "description": "The time and date the API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the API call."
          },
          "updated_at": {
            "description": "The time and date the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at"
        ],
        "type": "object"
      },
      "UnitTemperature": {
        "description": "The valid types of temperature units.",
        "oneOf": [
          {
            "description": "Celsius <https://en.wikipedia.org/wiki/Celsius>",
            "enum": [
              "celsius"
            ],
            "type": "string"
          },
          {
            "description": "Fahrenheit <https://en.wikipedia.org/wiki/Fahrenheit>",
            "enum": [
              "fahrenheit"
            ],
            "type": "string"
          },
          {
            "description": "Kelvin <https://en.wikipedia.org/wiki/Kelvin>",
            "enum": [
              "kelvin"
            ],
            "type": "string"
          },
          {
            "description": "Rankine <https://en.wikipedia.org/wiki/Rankine_scale>",
            "enum": [
              "rankine"
            ],
            "type": "string"
          }
        ]
      },
      "UnitTemperatureConversion": {
        "description": "Result of converting between units.",
        "properties": {
          "completed_at": {
            "description": "The time and date the API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The time and date the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
          },
          "input": {
            "default": 0.0,
            "description": "The input value.",
            "format": "double",
            "type": "number"
          },
          "input_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitTemperature"
              }
            ],
            "description": "The source format of the unit conversion."
          },
          "output": {
            "description": "The resulting value.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "output_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitTemperature"
              }
            ],
            "description": "The output format of the unit conversion."
          },
          "started_at": {
            "description": "The time and date the API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the API call."
          },
          "updated_at": {
            "description": "The time and date the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at"
        ],
        "type": "object"
      },
      "UnitTorque": {
        "description": "The valid types of torque units.",
        "oneOf": [
          {
            "description": "Newton metres <https://en.wikipedia.org/wiki/Newton_metre>",
            "enum": [
              "newton_metres"
            ],
            "type": "string"
          },
          {
            "description": "Pound foot <https://en.wikipedia.org/wiki/Pound-foot_(torque)>",
            "enum": [
              "pound_foot"
            ],
            "type": "string"
          }
        ]
      },
      "UnitTorqueConversion": {
        "description": "Result of converting between units.",
        "properties": {
          "completed_at": {
            "description": "The time and date the API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The time and date the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
          },
          "input": {
            "default": 0.0,
            "description": "The input value.",
            "format": "double",
            "type": "number"
          },
          "input_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitTorque"
              }
            ],
            "description": "The source format of the unit conversion."
          },
          "output": {
            "description": "The resulting value.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "output_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitTorque"
              }
            ],
            "description": "The output format of the unit conversion."
          },
          "started_at": {
            "description": "The time and date the API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the API call."
          },
          "updated_at": {
            "description": "The time and date the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at"
        ],
        "type": "object"
      },
      "UnitVolume": {
        "description": "The valid types of volume units.",
        "oneOf": [
          {
            "description": "Cubic centimeters (cc or cm³) <https://en.wikipedia.org/wiki/Cubic_centimetre>",
            "enum": [
              "cubic_centimetres"
            ],
            "type": "string"
          },
          {
            "description": "Cubic feet (ft³) <https://en.wikipedia.org/wiki/Cubic_foot>",
            "enum": [
              "cubic_feet"
            ],
            "type": "string"
          },
          {
            "description": "Cubic inches (cu in or in³) <https://en.wikipedia.org/wiki/Cubic_inch>",
            "enum": [
              "cubic_inches"
            ],
            "type": "string"
          },
          {
            "description": "Cubic metres (m³) <https://en.wikipedia.org/wiki/Cubic_metre>",
            "enum": [
              "cubic_metres"
            ],
            "type": "string"
          },
          {
            "description": "Cubic yards (yd³) <https://en.wikipedia.org/wiki/Cubic_yard>",
            "enum": [
              "cubic_yards"
            ],
            "type": "string"
          },
          {
            "description": "Cups <https://en.wikipedia.org/wiki/Cup_(unit)>",
            "enum": [
              "cups"
            ],
            "type": "string"
          },
          {
            "description": "Drams <https://en.wikipedia.org/wiki/Fluid_dram>",
            "enum": [
              "drams"
            ],
            "type": "string"
          },
          {
            "description": "Drops <https://en.wikipedia.org/wiki/Minim_(unit)>",
            "enum": [
              "drops"
            ],
            "type": "string"
          },
          {
            "description": "US Fluid Ounces (fl oz) <https://en.wikipedia.org/wiki/Fluid_ounce>",
            "enum": [
              "fluid_ounces"
            ],
            "type": "string"
          },
          {
            "description": "UK Fluid Ounces (fl oz) <https://en.wikipedia.org/wiki/Fluid_ounce>",
            "enum": [
              "fluid_ounces_uk"
            ],
            "type": "string"
          },
          {
            "description": "US Gallons (gal US) <https://en.wikipedia.org/wiki/Gallon>",
            "enum": [
              "gallons"
            ],
            "type": "string"
          },
          {
            "description": "UK/Imperial Gallons (gal) <https://en.wikipedia.org/wiki/Gallon>",
            "enum": [
              "gallons_uk"
            ],
            "type": "string"
          },
          {
            "description": "Liters (l) <https://en.wikipedia.org/wiki/Litre>",
            "enum": [
              "litres"
            ],
            "type": "string"
          },
          {
            "description": "Milliliters (ml) <https://en.wikipedia.org/wiki/Litre>",
            "enum": [
              "millilitres"
            ],
            "type": "string"
          },
          {
            "description": "Pints <https://en.wikipedia.org/wiki/Pint>",
            "enum": [
              "pints"
            ],
            "type": "string"
          },
          {
            "description": "Pints in the United Kingdom (UK) <https://en.wikipedia.org/wiki/Pint>",
            "enum": [
              "pints_uk"
            ],
            "type": "string"
          },
          {
            "description": "Quarts <https://en.wikipedia.org/wiki/Quart>",
            "enum": [
              "quarts"
            ],
            "type": "string"
          },
          {
            "description": "Tablespoons (tbsp) <https://en.wikipedia.org/wiki/Tablespoon>",
            "enum": [
              "tablespoons"
            ],
            "type": "string"
          },
          {
            "description": "Teaspoons (tsp) <https://en.wikipedia.org/wiki/Teaspoon>",
            "enum": [
              "teaspoons"
            ],
            "type": "string"
          }
        ]
      },
      "UnitVolumeConversion": {
        "description": "Result of converting between units.",
        "properties": {
          "completed_at": {
            "description": "The time and date the API call was completed.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "created_at": {
            "description": "The time and date the API call was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "error": {
            "description": "The error the function returned, if any.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ],
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID."
          },
          "input": {
            "default": 0.0,
            "description": "The input value.",
            "format": "double",
            "type": "number"
          },
          "input_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitVolume"
              }
            ],
            "description": "The source format of the unit conversion."
          },
          "output": {
            "description": "The resulting value.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "output_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitVolume"
              }
            ],
            "description": "The output format of the unit conversion."
          },
          "started_at": {
            "description": "The time and date the API call was started.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ],
            "description": "The status of the API call."
          },
          "updated_at": {
            "description": "The time and date the API call was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at"
        ],
        "type": "object"
      },
      "UpdateUser": {
        "description": "The user-modifiable parts of a User.",
        "properties": {
          "company": {
            "description": "The user's company.",
            "type": "string"
          },
          "discord": {
            "description": "The user's Discord handle.",
            "type": "string"
          },
          "first_name": {
            "description": "The user's first name.",
            "type": "string"
          },
          "github": {
            "description": "The user's GitHub handle.",
            "type": "string"
          },
          "last_name": {
            "description": "The user's last name.",
            "type": "string"
          },
          "phone": {
            "default": "",
            "description": "The user's phone number.",
            "format": "phone",
            "title": "String",
            "type": "string"
          }
        },
        "type": "object"
      },
      "User": {
        "description": "A user.",
        "properties": {
          "company": {
            "description": "The user's company.",
            "type": "string"
          },
          "created_at": {
            "description": "The date and time the user was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "discord": {
            "description": "The user's Discord handle.",
            "type": "string"
          },
          "email": {
            "description": "The email address of the user.",
            "format": "email",
            "type": "string"
          },
          "email_verified": {
            "description": "The date and time the email address was verified.",
            "format": "date-time",
            "nullable": true,
            "title": "DateTime",
            "type": "string"
          },
          "first_name": {
            "description": "The user's first name.",
            "type": "string"
          },
          "github": {
            "description": "The user's GitHub handle.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the user.",
            "type": "string"
          },
          "image": {
            "description": "The image avatar for the user. This is a URL.",
            "format": "uri",
            "title": "String",
            "type": "string"
          },
          "last_name": {
            "description": "The user's last name.",
            "type": "string"
          },
          "name": {
            "description": "The name of the user. This is auto populated at first from the authentication provider (if there was a name). It can be updated by the user by updating their `first_name` and `last_name` fields.",
            "type": "string"
          },
          "phone": {
            "default": "",
            "description": "The user's phone number.",
            "format": "phone",
            "title": "String",
            "type": "string"
          },
          "updated_at": {
            "description": "The date and time the user was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "image",
          "updated_at"
        ],
        "type": "object"
      },
      "UserResultsPage": {
        "description": "A single page of results",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "type": "array"
          },
          "next_page": {
            "description": "token used to fetch the next page of results (if any)",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "items"
        ],
        "type": "object"
      },
      "Uuid": {
        "description": "A uuid.\n\nA Version 4 UUID is a universally unique identifier that is generated using random numbers.",
        "format": "uuid",
        "type": "string"
      },
      "VerificationToken": {
        "description": "A verification token for a user.\n\nThis is typically used to verify a user's email address.",
        "properties": {
          "created_at": {
            "description": "The date and time the verification token was created.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "expires": {
            "description": "The date and time the verification token expires.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          },
          "id": {
            "description": "The token used for verification. This is used as the id for the table since it is unique per record.",
            "type": "string"
          },
          "identifier": {
            "description": "The identifier for the user. This is typically the user's email address since that is what we are verifying.",
            "type": "string"
          },
          "updated_at": {
            "description": "The date and time the verification token was last updated.",
            "format": "date-time",
            "title": "DateTime",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "expires",
          "updated_at"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "email": "api@kittycad.io",
      "url": "https://kittycad.io"
    },
    "description": "API server for KittyCAD",
    "title": "KittyCAD API",
    "version": "0.1.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "get": {
        "operationId": "get_schema",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get OpenAPI schema.",
        "tags": [
          "meta"
        ]
      }
    },
    "/.well-known/ai-plugin.json": {
      "get": {
        "operationId": "get_ai_plugin_manifest",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AiPluginManifest"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get AI plugin manifest.",
        "tags": [
          "meta",
          "hidden"
        ]
      }
    },
    "/_meta/info": {
      "get": {
        "description": "This includes information on any of our other distributed systems it is connected to.\nYou must be a KittyCAD employee to perform this request.",
        "operationId": "get_metadata",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get the metadata about our currently running server.",
        "tags": [
          "meta",
          "hidden"
        ]
      }
    },
    "/ai/image-to-3d/{input_format}/{output_format}": {
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_image_to_3d",
        "parameters": [
          {
            "description": "The format of the image being converted.",
            "in": "path",
            "name": "input_format",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ImageType"
            }
          },
          {
            "description": "The format the output file should be converted to.",
            "in": "path",
            "name": "output_format",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileExportFormat"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "post": {
        "description": "This is an alpha endpoint. It will change in the future. The current output is honestly pretty bad. So if you find this endpoint, you get what you pay for, which currently is nothing. But in the future will be made a lot better.",
        "operationId": "create_image_to_3d",
        "parameters": [
          {
            "description": "The format of the image being converted.",
            "in": "path",
            "name": "input_format",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ImageType"
            }
          },
          {
            "description": "The format the output file should be converted to.",
            "in": "path",
            "name": "output_format",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileExportFormat"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Mesh"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Generate a 3D model from an image.",
        "tags": [
          "ai",
          "beta",
          "hidden"
        ]
      }
    },
    "/ai/text-to-3d/{output_format}": {
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_text_to_3d",
        "parameters": [
          {
            "description": "The format the output file should be converted to.",
            "in": "path",
            "name": "output_format",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileExportFormat"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "post": {
        "description": "This is an alpha endpoint. It will change in the future. The current output is honestly pretty bad. So if you find this endpoint, you get what you pay for, which currently is nothing. But in the future will be made a lot better.",
        "operationId": "create_text_to_3d",
        "parameters": [
          {
            "description": "The format the output file should be converted to.",
            "in": "path",
            "name": "output_format",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileExportFormat"
            }
          },
          {
            "description": "The prompt for the model.",
            "in": "query",
            "name": "prompt",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Mesh"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Generate a 3D model from text.",
        "tags": [
          "ai",
          "beta",
          "hidden"
        ]
      }
    },
    "/api-call-metrics": {
      "get": {
        "description": "This endpoint requires authentication by a KittyCAD employee. The API calls are grouped by the parameter passed.",
        "operationId": "get_api_call_metrics",
        "parameters": [
          {
            "description": "What field to group the metrics by.",
            "in": "query",
            "name": "group_by",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ApiCallQueryGroupBy"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApiCallQueryGroup"
                  },
                  "title": "Array_of_ApiCallQueryGroup",
                  "type": "array"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get API call metrics.",
        "tags": [
          "api-calls",
          "hidden"
        ]
      }
    },
    "/api-calls": {
      "get": {
        "description": "This endpoint requires authentication by a KittyCAD employee. The API calls are returned in order of creation, with the most recently created API calls first.",
        "operationId": "list_api_calls",
        "parameters": [
          {
            "description": "Maximum number of items returned by a single call",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint32",
              "minimum": 1,
              "nullable": true,
              "type": "integer"
            }
          },
          {
            "description": "Token returned by previous call to retrieve the subsequent page",
            "in": "query",
            "name": "page_token",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCallWithPriceResultsPage"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "List API calls.",
        "tags": [
          "api-calls",
          "hidden"
        ],
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/api-calls/{id}": {
      "get": {
        "description": "This endpoint requires authentication by any KittyCAD user. It returns details of the requested API call for the user.\nIf the user is not authenticated to view the specified API call, then it is not returned.\nOnly KittyCAD employees can view API calls for other users.",
        "operationId": "get_api_call",
        "parameters": [
          {
            "description": "The ID of the API call.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCallWithPrice"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get details of an API call.",
        "tags": [
          "api-calls",
          "hidden"
        ]
      }
    },
    "/apps/github/callback": {
      "get": {
        "description": "This is different than OAuth 2.0 authentication for users. This endpoint grants access for KittyCAD to access user's repos.\nThe user doesn't need KittyCAD OAuth authorization for this endpoint, this is purely for the GitHub permissions to access repos.",
        "operationId": "apps_github_callback",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Listen for callbacks to GitHub app authentication.",
        "tags": [
          "apps",
          "hidden"
        ]
      }
    },
    "/apps/github/consent": {
      "get": {
        "description": "This is different than OAuth 2.0 authentication for users. This endpoint grants access for KittyCAD to access user's repos.\nThe user doesn't need KittyCAD OAuth authorization for this endpoint, this is purely for the GitHub permissions to access repos.",
        "operationId": "apps_github_consent",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClientInfo"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get the consent URL for GitHub app authentication.",
        "tags": [
          "apps",
          "hidden"
        ]
      }
    },
    "/apps/github/webhook": {
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_apps_github_webhook",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "post": {
        "description": "These come from the GitHub app.",
        "operationId": "apps_github_webhook",
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Listen for GitHub webhooks.",
        "tags": [
          "apps",
          "hidden"
        ]
      }
    },
    "/async/operations": {
      "get": {
        "description": "For async file conversion operations, this endpoint does not return the contents of converted files (`output`). To get the contents use the `/async/operations/{id}` endpoint.\nThis endpoint requires authentication by a KittyCAD employee.",
        "operationId": "list_async_operations",
        "parameters": [
          {
            "description": "Maximum number of items returned by a single call",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint32",
              "minimum": 1,
              "nullable": true,
              "type": "integer"
            }
          },
          {
            "description": "Token returned by previous call to retrieve the subsequent page",
            "in": "query",
            "name": "page_token",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          },
          {
            "description": "The status to filter by.",
            "in": "query",
            "name": "status",
            "schema": {
              "$ref": "#/components/schemas/ApiCallStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncApiCallResultsPage"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "List async operations.",
        "tags": [
          "api-calls",
          "hidden"
        ],
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/async/operations/{id}": {
      "get": {
        "description": "Get the status and output of an async operation.\nThis endpoint requires authentication by any KittyCAD user. It returns details of the requested async operation for the user.\nIf the user is not authenticated to view the specified async operation, then it is not returned.\nOnly KittyCAD employees with the proper access can view async operations for other users.",
        "operationId": "get_async_operation",
        "parameters": [
          {
            "description": "The ID of the async operation.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncApiCallOutput"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get an async operation.",
        "tags": [
          "api-calls"
        ]
      }
    },
    "/auth/email": {
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_auth_email",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "post": {
        "operationId": "auth_email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailAuthenticationForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationToken"
                }
              }
            },
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Create an email verification request for a user.",
        "tags": [
          "hidden"
        ]
      }
    },
    "/auth/email/callback": {
      "get": {
        "operationId": "auth_email_callback",
        "parameters": [
          {
            "description": "The URL to redirect back to after we have authenticated.",
            "in": "query",
            "name": "callback_url",
            "schema": {
              "format": "uri",
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "The user's email.",
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "format": "email",
              "type": "string"
            }
          },
          {
            "description": "The verification token.",
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Temporary Redirect",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Set-Cookie": {
                "description": "Set-Cookie header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Listen for callbacks for email verification for users.",
        "tags": [
          "hidden"
        ]
      }
    },
    "/constant/physics/{constant}": {
      "get": {
        "operationId": "get_physics_constant",
        "parameters": [
          {
            "description": "The constant to get.",
            "in": "path",
            "name": "constant",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PhysicsConstantName"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicsConstant"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get a physics constant.",
        "tags": [
          "constant",
          "hidden"
        ]
      }
    },
    "/file/center-of-mass": {
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_file_center_of_mass",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "post": {
        "description": "We assume any file given to us has one consistent unit throughout. We also assume the file is at the proper scale.\nCurrently, this endpoint returns the cartesian co-ordinate in world space measure units.\nIn the future, we will use the units inside the file if they are given and do any conversions if necessary for the calculation. But currently, that is not supported.\nGet the center of mass of an object in a CAD file. If the file is larger than 25MB, it will be performed asynchronously.\nIf the operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.",
        "operationId": "create_file_center_of_mass",
        "parameters": [
          {
            "description": "The format of the file.",
            "in": "query",
            "name": "src_format",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileCenterOfMass"
                }
              }
            },
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get CAD file center of mass.",
        "tags": [
          "file",
          "beta",
          "hidden"
        ]
      }
    },
    "/file/conversion/{src_format}/{output_format}": {
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_file_conversion",
        "parameters": [
          {
            "description": "The format the file should be converted to.",
            "in": "path",
            "name": "output_format",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileExportFormat"
            }
          },
          {
            "description": "The format of the file to convert.",
            "in": "path",
            "name": "src_format",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "post": {
        "description": "If you wish to specify the conversion options, use the `/file/conversion` endpoint instead.\nConvert a CAD file from one format to another. If the file being converted is larger than 25MB, it will be performed asynchronously.\nIf the conversion is performed synchronously, the contents of the converted file (`output`) will be returned as a base64 encoded string.\nIf the operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.",
        "operationId": "create_file_conversion",
        "parameters": [
          {
            "description": "The format the file should be converted to.",
            "in": "path",
            "name": "output_format",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileExportFormat"
            }
          },
          {
            "description": "The format of the file to convert.",
            "in": "path",
            "name": "src_format",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileConversion"
                }
              }
            },
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Convert CAD file with defaults.",
        "tags": [
          "file"
        ]
      }
    },
    "/file/density": {
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_file_density",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "post": {
        "description": "We assume any file given to us has one consistent unit throughout. We also assume the file is at the proper scale.\nCurrently, this endpoint assumes if you are giving a material mass in a specific mass units, we return a density in mass unit per cubic measure unit.\nIn the future, we will use the units inside the file if they are given and do any conversions if necessary for the calculation. But currently, that is not supported.\nGet the density of an object in a CAD file. If the file is larger than 25MB, it will be performed asynchronously.\nIf the operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.",
        "operationId": "create_file_density",
        "parameters": [
          {
            "description": "The material mass.",
            "in": "query",
            "name": "material_mass",
            "required": true,
            "schema": {
              "format": "float",
              "type": "number"
            }
          },
          {
            "description": "The format of the file.",
            "in": "query",
            "name": "src_format",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDensity"
                }
              }
            },
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get CAD file density.",
        "tags": [
          "file",
          "beta"
        ]
      }
    },
    "/file/execute/{lang}": {
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_file_execution",
        "parameters": [
          {
            "description": "The language of the code.",
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CodeLanguage"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "post": {
        "operationId": "create_file_execution",
        "parameters": [
          {
            "description": "The language of the code.",
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CodeLanguage"
            }
          },
          {
            "description": "The output file we want to get the contents for (the paths are relative to where in litterbox it is being run). You can denote more than one file with a comma separated list of string paths.",
            "in": "query",
            "name": "output",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeOutput"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Execute a KittyCAD program in a specific language.",
        "tags": [
          "executor",
          "hidden"
        ]
      }
    },
    "/file/mass": {
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_file_mass",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "post": {
        "description": "We assume any file given to us has one consistent unit throughout. We also assume the file is at the proper scale.\nCurrently, this endpoint assumes if you are giving a material density in a specific mass unit per cubic measure unit, we return a mass in mass units. The same mass units as passed in the material density.\nIn the future, we will use the units inside the file if they are given and do any conversions if necessary for the calculation. But currently, that is not supported.\nGet the mass of an object in a CAD file. If the file is larger than 25MB, it will be performed asynchronously.\nIf the operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.",
        "operationId": "create_file_mass",
        "parameters": [
          {
            "description": "The material density.",
            "in": "query",
            "name": "material_density",
            "required": true,
            "schema": {
              "format": "float",
              "type": "number"
            }
          },
          {
            "description": "The format of the file.",
            "in": "query",
            "name": "src_format",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileMass"
                }
              }
            },
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get CAD file mass.",
        "tags": [
          "file",
          "beta"
        ]
      }
    },
    "/file/surface-area": {
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_file_surface_area",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "post": {
        "description": "We assume any file given to us has one consistent unit throughout. We also assume the file is at the proper scale.\nCurrently, this endpoint returns the square measure units.\nIn the future, we will use the units inside the file if they are given and do any conversions if necessary for the calculation. But currently, that is not supported.\nGet the surface area of an object in a CAD file. If the file is larger than 25MB, it will be performed asynchronously.\nIf the operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.",
        "operationId": "create_file_surface_area",
        "parameters": [
          {
            "description": "The format of the file.",
            "in": "query",
            "name": "src_format",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileSurfaceArea"
                }
              }
            },
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get CAD file surface area.",
        "tags": [
          "file",
          "beta",
          "hidden"
        ]
      }
    },
    "/file/volume": {
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_file_volume",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "post": {
        "description": "We assume any file given to us has one consistent unit throughout. We also assume the file is at the proper scale.\nCurrently, this endpoint returns the cubic measure units.\nIn the future, we will use the units inside the file if they are given and do any conversions if necessary for the calculation. But currently, that is not supported.\nGet the volume of an object in a CAD file. If the file is larger than 25MB, it will be performed asynchronously.\nIf the operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.",
        "operationId": "create_file_volume",
        "parameters": [
          {
            "description": "The format of the file.",
            "in": "query",
            "name": "src_format",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileVolume"
                }
              }
            },
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get CAD file volume.",
        "tags": [
          "file",
          "beta",
          "hidden"
        ]
      }
    },
    "/logout": {
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_logout",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "post": {
        "description": "This is used in logout scenarios.",
        "operationId": "logout",
        "responses": {
          "204": {
            "description": "resource updated",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Set-Cookie": {
                "description": "Set-Cookie header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "This endpoint removes the session cookie for a user.",
        "tags": [
          "hidden"
        ]
      }
    },
    "/modeling/cmd": {
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_cmd",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "post": {
        "description": "Response depends on which command was submitted, so unfortunately the OpenAPI schema can't generate the right response type.",
        "operationId": "cmd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelingCmdReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Submit one modeling operation.",
        "tags": [
          "modeling",
          "hidden"
        ]
      }
    },
    "/modeling/cmd_batch": {
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_cmd_batch",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "post": {
        "operationId": "cmd_batch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelingCmdReqBatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelingOutcomes"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Submit many modeling operations.",
        "tags": [
          "modeling",
          "hidden"
        ]
      }
    },
    "/oauth2/device/auth": {
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_device_auth_request",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "post": {
        "description": "This endpoint is designed to be accessed from an *unauthenticated* API client. It generates and records a `device_code` and `user_code` which must be verified and confirmed prior to a token being granted.",
        "operationId": "device_auth_request",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceAuthRequestForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "*/*": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "summary": "Start an OAuth 2.0 Device Authorization Grant.",
        "tags": [
          "oauth2",
          "hidden"
        ]
      }
    },
    "/oauth2/device/confirm": {
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_device_auth_confirm",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "post": {
        "description": "This endpoint is designed to be accessed by the user agent (browser), not the client requesting the token. So we do not actually return the token here; it will be returned in response to the poll on `/oauth2/device/token`.",
        "operationId": "device_auth_confirm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceAuthVerifyParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Confirm an OAuth 2.0 Device Authorization Grant.",
        "tags": [
          "oauth2",
          "hidden"
        ]
      }
    },
    "/oauth2/device/token": {
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_device_access_token",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "post": {
        "description": "This endpoint should be polled by the client until the user code is verified and the grant is confirmed.",
        "operationId": "device_access_token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceAccessTokenRequestForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "*/*": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "summary": "Request a device access token.",
        "tags": [
          "oauth2",
          "hidden"
        ]
      }
    },
    "/oauth2/device/verify": {
      "get": {
        "description": "This endpoint should be accessed in a full user agent (e.g., a browser). If the user is not logged in, we redirect them to the login page and use the `callback_url` parameter to get them to the UI verification form upon logging in. If they are logged in, we redirect them to the UI verification form on the website.",
        "operationId": "device_auth_verify",
        "parameters": [
          {
            "description": "The user code.",
            "in": "query",
            "name": "user_code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Temporary Redirect",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Verify an OAuth 2.0 Device Authorization Grant.",
        "tags": [
          "oauth2",
          "hidden"
        ]
      }
    },
    "/oauth2/provider/{provider}/callback": {
      "get": {
        "operationId": "oauth2_provider_callback",
        "parameters": [
          {
            "description": "The provider.",
            "in": "path",
            "name": "provider",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AccountProvider"
            }
          },
          {
            "description": "The authorization code.",
            "in": "query",
            "name": "code",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The state that we had passed in through the user consent URL.",
            "in": "query",
            "name": "state",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Temporary Redirect",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Set-Cookie": {
                "description": "Set-Cookie header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Listen for callbacks for the OAuth 2.0 provider.",
        "tags": [
          "oauth2",
          "hidden"
        ]
      }
    },
    "/oauth2/provider/{provider}/consent": {
      "get": {
        "operationId": "oauth2_provider_consent",
        "parameters": [
          {
            "description": "The provider.",
            "in": "path",
            "name": "provider",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AccountProvider"
            }
          },
          {
            "description": "The URL to redirect back to after we have authenticated.",
            "in": "query",
            "name": "callback_url",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuth2ClientInfo"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get the consent URL and other information for the OAuth 2.0 provider.",
        "tags": [
          "oauth2",
          "hidden"
        ]
      }
    },
    "/openai/openapi.json": {
      "get": {
        "description": "This is the same as the OpenAPI schema, BUT it has some modifications to make it compatible with OpenAI. For example, descriptions must be < 300 chars.",
        "operationId": "get_openai_schema",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get AI plugin OpenAPI schema.",
        "tags": [
          "meta",
          "hidden"
        ]
      }
    },
    "/ping": {
      "get": {
        "operationId": "ping",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pong"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Return pong.",
        "tags": [
          "meta"
        ]
      }
    },
    "/unit/conversion/angle/{input_unit}/{output_unit}": {
      "get": {
        "description": "Convert an angle unit value to another angle unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_angle_unit_conversion",
        "parameters": [
          {
            "description": "The source format of the unit.",
            "in": "path",
            "name": "input_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitAngle"
            }
          },
          {
            "description": "The output format of the unit.",
            "in": "path",
            "name": "output_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitAngle"
            }
          },
          {
            "description": "The initial value.",
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitAngleConversion"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Convert angle units.",
        "tags": [
          "unit"
        ]
      }
    },
    "/unit/conversion/area/{input_unit}/{output_unit}": {
      "get": {
        "description": "Convert an area unit value to another area unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_area_unit_conversion",
        "parameters": [
          {
            "description": "The source format of the unit.",
            "in": "path",
            "name": "input_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitArea"
            }
          },
          {
            "description": "The output format of the unit.",
            "in": "path",
            "name": "output_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitArea"
            }
          },
          {
            "description": "The initial value.",
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitAreaConversion"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Convert area units.",
        "tags": [
          "unit"
        ]
      }
    },
    "/unit/conversion/current/{input_unit}/{output_unit}": {
      "get": {
        "description": "Convert a current unit value to another current unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_current_unit_conversion",
        "parameters": [
          {
            "description": "The source format of the unit.",
            "in": "path",
            "name": "input_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitCurrent"
            }
          },
          {
            "description": "The output format of the unit.",
            "in": "path",
            "name": "output_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitCurrent"
            }
          },
          {
            "description": "The initial value.",
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitCurrentConversion"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Convert current units.",
        "tags": [
          "unit"
        ]
      }
    },
    "/unit/conversion/energy/{input_unit}/{output_unit}": {
      "get": {
        "description": "Convert a energy unit value to another energy unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_energy_unit_conversion",
        "parameters": [
          {
            "description": "The source format of the unit.",
            "in": "path",
            "name": "input_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitEnergy"
            }
          },
          {
            "description": "The output format of the unit.",
            "in": "path",
            "name": "output_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitEnergy"
            }
          },
          {
            "description": "The initial value.",
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitEnergyConversion"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Convert energy units.",
        "tags": [
          "unit"
        ]
      }
    },
    "/unit/conversion/force/{input_unit}/{output_unit}": {
      "get": {
        "description": "Convert a force unit value to another force unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_force_unit_conversion",
        "parameters": [
          {
            "description": "The source format of the unit.",
            "in": "path",
            "name": "input_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitForce"
            }
          },
          {
            "description": "The output format of the unit.",
            "in": "path",
            "name": "output_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitForce"
            }
          },
          {
            "description": "The initial value.",
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitForceConversion"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Convert force units.",
        "tags": [
          "unit"
        ]
      }
    },
    "/unit/conversion/frequency/{input_unit}/{output_unit}": {
      "get": {
        "description": "Convert a frequency unit value to another frequency unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_frequency_unit_conversion",
        "parameters": [
          {
            "description": "The source format of the unit.",
            "in": "path",
            "name": "input_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitFrequency"
            }
          },
          {
            "description": "The output format of the unit.",
            "in": "path",
            "name": "output_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitFrequency"
            }
          },
          {
            "description": "The initial value.",
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitFrequencyConversion"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Convert frequency units.",
        "tags": [
          "unit"
        ]
      }
    },
    "/unit/conversion/length/{input_unit}/{output_unit}": {
      "get": {
        "description": "Convert a length unit value to another length unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_length_unit_conversion",
        "parameters": [
          {
            "description": "The source format of the unit.",
            "in": "path",
            "name": "input_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitLength"
            }
          },
          {
            "description": "The output format of the unit.",
            "in": "path",
            "name": "output_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitLength"
            }
          },
          {
            "description": "The initial value.",
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitLengthConversion"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Convert length units.",
        "tags": [
          "unit"
        ]
      }
    },
    "/unit/conversion/mass/{input_unit}/{output_unit}": {
      "get": {
        "description": "Convert a mass unit value to another mass unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_mass_unit_conversion",
        "parameters": [
          {
            "description": "The source format of the unit.",
            "in": "path",
            "name": "input_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitMass"
            }
          },
          {
            "description": "The output format of the unit.",
            "in": "path",
            "name": "output_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitMass"
            }
          },
          {
            "description": "The initial value.",
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMassConversion"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Convert mass units.",
        "tags": [
          "unit"
        ]
      }
    },
    "/unit/conversion/power/{input_unit}/{output_unit}": {
      "get": {
        "description": "Convert a power unit value to another power unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_power_unit_conversion",
        "parameters": [
          {
            "description": "The source format of the unit.",
            "in": "path",
            "name": "input_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitPower"
            }
          },
          {
            "description": "The output format of the unit.",
            "in": "path",
            "name": "output_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitPower"
            }
          },
          {
            "description": "The initial value.",
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitPowerConversion"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Convert power units.",
        "tags": [
          "unit"
        ]
      }
    },
    "/unit/conversion/pressure/{input_unit}/{output_unit}": {
      "get": {
        "description": "Convert a pressure unit value to another pressure unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_pressure_unit_conversion",
        "parameters": [
          {
            "description": "The source format of the unit.",
            "in": "path",
            "name": "input_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitPressure"
            }
          },
          {
            "description": "The output format of the unit.",
            "in": "path",
            "name": "output_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitPressure"
            }
          },
          {
            "description": "The initial value.",
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitPressureConversion"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Convert pressure units.",
        "tags": [
          "unit"
        ]
      }
    },
    "/unit/conversion/temperature/{input_unit}/{output_unit}": {
      "get": {
        "description": "Convert a temperature unit value to another temperature unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_temperature_unit_conversion",
        "parameters": [
          {
            "description": "The source format of the unit.",
            "in": "path",
            "name": "input_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitTemperature"
            }
          },
          {
            "description": "The output format of the unit.",
            "in": "path",
            "name": "output_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitTemperature"
            }
          },
          {
            "description": "The initial value.",
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitTemperatureConversion"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Convert temperature units.",
        "tags": [
          "unit"
        ]
      }
    },
    "/unit/conversion/torque/{input_unit}/{output_unit}": {
      "get": {
        "description": "Convert a torque unit value to another torque unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_torque_unit_conversion",
        "parameters": [
          {
            "description": "The source format of the unit.",
            "in": "path",
            "name": "input_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitTorque"
            }
          },
          {
            "description": "The output format of the unit.",
            "in": "path",
            "name": "output_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitTorque"
            }
          },
          {
            "description": "The initial value.",
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitTorqueConversion"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Convert torque units.",
        "tags": [
          "unit"
        ]
      }
    },
    "/unit/conversion/volume/{input_unit}/{output_unit}": {
      "get": {
        "description": "Convert a volume unit value to another volume unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_volume_unit_conversion",
        "parameters": [
          {
            "description": "The source format of the unit.",
            "in": "path",
            "name": "input_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitVolume"
            }
          },
          {
            "description": "The output format of the unit.",
            "in": "path",
            "name": "output_unit",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitVolume"
            }
          },
          {
            "description": "The initial value.",
            "in": "query",
            "name": "value",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitVolumeConversion"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Convert volume units.",
        "tags": [
          "unit"
        ]
      }
    },
    "/user": {
      "delete": {
        "description": "This endpoint requires authentication by any KittyCAD user. It deletes the authenticated user from KittyCAD's database.\nThis call will only succeed if all invoices associated with the user have been paid in full and there is no outstanding balance.",
        "operationId": "delete_user_self",
        "responses": {
          "204": {
            "description": "successful deletion",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Delete your user.",
        "tags": [
          "users"
        ]
      },
      "get": {
        "description": "Get the user information for the authenticated user.\nAlternatively, you can also use the `/users/me` endpoint.",
        "operationId": "get_user_self",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get your user.",
        "tags": [
          "users"
        ]
      },
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_user_self",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "put": {
        "description": "This endpoint requires authentication by any KittyCAD user. It updates information about the authenticated user.",
        "operationId": "update_user_self",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Update your user.",
        "tags": [
          "users"
        ]
      }
    },
    "/user/api-calls": {
      "get": {
        "description": "This endpoint requires authentication by any KittyCAD user. It returns the API calls for the authenticated user.\nThe API calls are returned in order of creation, with the most recently created API calls first.",
        "operationId": "user_list_api_calls",
        "parameters": [
          {
            "description": "Maximum number of items returned by a single call",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint32",
              "minimum": 1,
              "nullable": true,
              "type": "integer"
            }
          },
          {
            "description": "Token returned by previous call to retrieve the subsequent page",
            "in": "query",
            "name": "page_token",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCallWithPriceResultsPage"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "List API calls for your user.",
        "tags": [
          "api-calls"
        ],
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/user/api-calls/{id}": {
      "get": {
        "description": "This endpoint requires authentication by any KittyCAD user. It returns details of the requested API call for the user.",
        "operationId": "get_api_call_for_user",
        "parameters": [
          {
            "description": "The ID of the API call.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCallWithPrice"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get an API call for a user.",
        "tags": [
          "api-calls"
        ]
      }
    },
    "/user/api-tokens": {
      "get": {
        "description": "This endpoint requires authentication by any KittyCAD user. It returns the API tokens for the authenticated user.\nThe API tokens are returned in order of creation, with the most recently created API tokens first.",
        "operationId": "list_api_tokens_for_user",
        "parameters": [
          {
            "description": "Maximum number of items returned by a single call",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint32",
              "minimum": 1,
              "nullable": true,
              "type": "integer"
            }
          },
          {
            "description": "Token returned by previous call to retrieve the subsequent page",
            "in": "query",
            "name": "page_token",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiTokenResultsPage"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "List API tokens for your user.",
        "tags": [
          "api-tokens"
        ],
        "x-dropshot-pagination": {
          "required": []
        }
      },
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_api_token_for_user",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "post": {
        "description": "This endpoint requires authentication by any KittyCAD user. It creates a new API token for the authenticated user.",
        "operationId": "create_api_token_for_user",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiToken"
                }
              }
            },
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Create a new API token for your user.",
        "tags": [
          "api-tokens"
        ]
      }
    },
    "/user/api-tokens/{token}": {
      "delete": {
        "description": "This endpoint requires authentication by any KittyCAD user. It deletes the requested API token for the user.\nThis endpoint does not actually delete the API token from the database. It merely marks the token as invalid. We still want to keep the token in the database for historical purposes.",
        "operationId": "delete_api_token_for_user",
        "parameters": [
          {
            "description": "The API token.",
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful deletion",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Delete an API token for your user.",
        "tags": [
          "api-tokens"
        ]
      },
      "get": {
        "description": "This endpoint requires authentication by any KittyCAD user. It returns details of the requested API token for the user.",
        "operationId": "get_api_token_for_user",
        "parameters": [
          {
            "description": "The API token.",
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiToken"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get an API token for your user.",
        "tags": [
          "api-tokens"
        ]
      },
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_api_token_for_user",
        "parameters": [
          {
            "description": "The API token.",
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      }
    },
    "/user/extended": {
      "get": {
        "description": "Get the user information for the authenticated user.\nAlternatively, you can also use the `/users-extended/me` endpoint.",
        "operationId": "get_user_self_extended",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedUser"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get extended information about your user.",
        "tags": [
          "users"
        ]
      }
    },
    "/user/front-hash": {
      "get": {
        "description": "This info is sent to front when initialing the front chat, it prevents impersonations using js hacks in the browser",
        "operationId": "get_user_front_hash_self",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "title": "String",
                  "type": "string"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get your user's front verification hash.",
        "tags": [
          "users",
          "hidden"
        ]
      }
    },
    "/user/onboarding": {
      "get": {
        "description": "Checks key part of their api usage to determine their onboarding progress",
        "operationId": "get_user_onboarding_self",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Onboarding"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get your user's onboarding status.",
        "tags": [
          "users",
          "hidden"
        ]
      }
    },
    "/user/payment": {
      "delete": {
        "description": "This includes billing address, phone, and name.\nThis endpoint requires authentication by any KittyCAD user. It deletes the payment information for the authenticated user.",
        "operationId": "delete_payment_information_for_user",
        "responses": {
          "204": {
            "description": "successful deletion",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Delete payment info for your user.",
        "tags": [
          "payments"
        ]
      },
      "get": {
        "description": "This includes billing address, phone, and name.\nThis endpoint requires authentication by any KittyCAD user. It gets the payment information for the authenticated user.",
        "operationId": "get_payment_information_for_user",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get payment info about your user.",
        "tags": [
          "payments"
        ]
      },
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_payment_information_for_user",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "post": {
        "description": "This includes billing address, phone, and name.\nThis endpoint requires authentication by any KittyCAD user. It creates the payment information for the authenticated user.",
        "operationId": "create_payment_information_for_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            },
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Create payment info for your user.",
        "tags": [
          "payments"
        ]
      },
      "put": {
        "description": "This includes billing address, phone, and name.\nThis endpoint requires authentication by any KittyCAD user. It updates the payment information for the authenticated user.",
        "operationId": "update_payment_information_for_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Update payment info for your user.",
        "tags": [
          "payments"
        ]
      }
    },
    "/user/payment/balance": {
      "get": {
        "description": "This endpoint requires authentication by any KittyCAD user. It gets the balance information for the authenticated user.",
        "operationId": "get_payment_balance_for_user",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerBalance"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get balance for your user.",
        "tags": [
          "payments"
        ]
      }
    },
    "/user/payment/intent": {
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_payment_intent_for_user",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      },
      "post": {
        "description": "This endpoint requires authentication by any KittyCAD user. It creates a new payment intent for the authenticated user.",
        "operationId": "create_payment_intent_for_user",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntent"
                }
              }
            },
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Create a payment intent for your user.",
        "tags": [
          "payments",
          "hidden"
        ]
      }
    },
    "/user/payment/invoices": {
      "get": {
        "description": "This endpoint requires authentication by any KittyCAD user. It lists invoices for the authenticated user.",
        "operationId": "list_invoices_for_user",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  },
                  "title": "Array_of_Invoice",
                  "type": "array"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "List invoices for your user.",
        "tags": [
          "payments"
        ]
      }
    },
    "/user/payment/methods": {
      "get": {
        "description": "This endpoint requires authentication by any KittyCAD user. It lists payment methods for the authenticated user.",
        "operationId": "list_payment_methods_for_user",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  },
                  "title": "Array_of_PaymentMethod",
                  "type": "array"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "List payment methods for your user.",
        "tags": [
          "payments"
        ]
      }
    },
    "/user/payment/methods/{id}": {
      "delete": {
        "description": "This endpoint requires authentication by any KittyCAD user. It deletes the specified payment method for the authenticated user.",
        "operationId": "delete_payment_method_for_user",
        "parameters": [
          {
            "description": "The ID of the payment method.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful deletion",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Delete a payment method for your user.",
        "tags": [
          "payments",
          "hidden"
        ]
      },
      "options": {
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_payment_methods_for_user",
        "parameters": [
          {
            "description": "The ID of the payment method.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "OPTIONS endpoint.",
        "tags": [
          "hidden"
        ]
      }
    },
    "/user/payment/tax": {
      "get": {
        "description": "This endpoint requires authentication by any KittyCAD user. It will return an error if the customer's information is not valid for automatic tax. Otherwise, it will return an empty successful response.",
        "operationId": "validate_customer_tax_information_for_user",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Validate a customer's information is correct and valid for automatic tax.",
        "tags": [
          "payments",
          "hidden"
        ]
      }
    },
    "/user/session/{token}": {
      "get": {
        "description": "This endpoint requires authentication by any KittyCAD user. It returns details of the requested API token for the user.",
        "operationId": "get_session_for_user",
        "parameters": [
          {
            "description": "The API token.",
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get a session for your user.",
        "tags": [
          "users"
        ]
      }
    },
    "/users": {
      "get": {
        "description": "This endpoint required authentication by a KittyCAD employee. The users are returned in order of creation, with the most recently created users first.",
        "operationId": "list_users",
        "parameters": [
          {
            "description": "Maximum number of items returned by a single call",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint32",
              "minimum": 1,
              "nullable": true,
              "type": "integer"
            }
          },
          {
            "description": "Token returned by previous call to retrieve the subsequent page",
            "in": "query",
            "name": "page_token",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResultsPage"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "List users.",
        "tags": [
          "users",
          "hidden"
        ],
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/users-extended": {
      "get": {
        "description": "This endpoint required authentication by a KittyCAD employee. The users are returned in order of creation, with the most recently created users first.",
        "operationId": "list_users_extended",
        "parameters": [
          {
            "description": "Maximum number of items returned by a single call",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint32",
              "minimum": 1,
              "nullable": true,
              "type": "integer"
            }
          },
          {
            "description": "Token returned by previous call to retrieve the subsequent page",
            "in": "query",
            "name": "page_token",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedUserResultsPage"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "List users with extended information.",
        "tags": [
          "users",
          "hidden"
        ],
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/users-extended/{id}": {
      "get": {
        "description": "To get information about yourself, use `/users-extended/me` as the endpoint. By doing so you will get the user information for the authenticated user.\nAlternatively, to get information about the authenticated user, use `/user/extended` endpoint.\nTo get information about any KittyCAD user, you must be a KittyCAD employee.",
        "operationId": "get_user_extended",
        "parameters": [
          {
            "description": "The user ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedUser"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get extended information about a user.",
        "tags": [
          "users",
          "hidden"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "description": "To get information about yourself, use `/users/me` as the endpoint. By doing so you will get the user information for the authenticated user.\nAlternatively, to get information about the authenticated user, use `/user` endpoint.\nTo get information about any KittyCAD user, you must be a KittyCAD employee.",
        "operationId": "get_user",
        "parameters": [
          {
            "description": "The user ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get a user.",
        "tags": [
          "users",
          "hidden"
        ]
      }
    },
    "/users/{id}/api-calls": {
      "get": {
        "description": "This endpoint requires authentication by any KittyCAD user. It returns the API calls for the authenticated user if \"me\" is passed as the user id.\nAlternatively, you can use the `/user/api-calls` endpoint to get the API calls for your user.\nIf the authenticated user is a KittyCAD employee, then the API calls are returned for the user specified by the user id.\nThe API calls are returned in order of creation, with the most recently created API calls first.",
        "operationId": "list_api_calls_for_user",
        "parameters": [
          {
            "description": "The user ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Maximum number of items returned by a single call",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint32",
              "minimum": 1,
              "nullable": true,
              "type": "integer"
            }
          },
          {
            "description": "Token returned by previous call to retrieve the subsequent page",
            "in": "query",
            "name": "page_token",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCallWithPriceResultsPage"
                }
              }
            },
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "List API calls for a user.",
        "tags": [
          "api-calls",
          "hidden"
        ],
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/ws/executor/term": {
      "get": {
        "description": "Attach to a docker container to create an interactive terminal.",
        "operationId": "create_executor_term",
        "responses": {
          "default": {
            "content": {
              "*/*": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "summary": "Create a terminal.",
        "tags": [
          "executor",
          "hidden"
        ],
        "x-dropshot-websocket": {}
      }
    },
    "/ws/modeling/commands": {
      "get": {
        "description": "Pass those commands to the engine via websocket, and pass responses back to the client. Basically, this is a websocket proxy between the frontend/client and the engine.",
        "operationId": "modeling_commands_ws",
        "responses": {
          "default": {
            "content": {
              "*/*": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "summary": "Open a websocket which accepts modeling commands.",
        "tags": [
          "modeling",
          "hidden"
        ],
        "x-dropshot-websocket": {}
      }
    }
  },
  "tags": [
    {
      "description": "AI uses machine learning to generate 3D meshes.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/ai"
      },
      "name": "ai"
    },
    {
      "description": "API calls that have been performed by users can be queried by the API. This is helpful for debugging as well as billing.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/api-calls"
      },
      "name": "api-calls"
    },
    {
      "description": "API tokens allow users to call the API outside of their session token that is used as a cookie in the user interface. Users can create, delete, and list their API tokens. But, of course, you need an API token to do this, so first be sure to generate one in the account UI.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/api-tokens"
      },
      "name": "api-tokens"
    },
    {
      "description": "Endpoints for third party app grant flows.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/apps"
      },
      "name": "apps"
    },
    {
      "description": "Beta API endpoints. We will not charge for these endpoints while they are in beta.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/beta"
      },
      "name": "beta"
    },
    {
      "description": "Constants. These are helpful as helpers.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/constant"
      },
      "name": "constant"
    },
    {
      "description": "Endpoints that allow for code execution or creation of code execution environments.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/executor"
      },
      "name": "executor"
    },
    {
      "description": "CAD file operations. Create, get, and list CAD file conversions. More endpoints will be added here in the future as we build out transforms, etc on CAD models.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/file"
      },
      "name": "file"
    },
    {
      "description": "Hidden API endpoints that should not show up in the docs.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/hidden"
      },
      "name": "hidden"
    },
    {
      "description": "Meta information about the API.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/meta"
      },
      "name": "meta"
    },
    {
      "description": "Modeling API for updating your 3D files using the KittyCAD engine.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/modeling"
      },
      "name": "modeling"
    },
    {
      "description": "Endpoints that implement OAuth 2.0 grant flows.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/oauth2"
      },
      "name": "oauth2"
    },
    {
      "description": "Operations around payments and billing.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/payments"
      },
      "name": "payments"
    },
    {
      "description": "Unit conversion operations.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/file"
      },
      "name": "unit"
    },
    {
      "description": "A user is someone who uses the KittyCAD API. Here, we can create, delete, and list users. We can also get information about a user. Operations will only be authorized if the user is requesting information about themselves.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/users"
      },
      "name": "users"
    }
  ]
}