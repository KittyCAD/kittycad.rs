{
  "openapi": "3.0.3",
  "info": {
    "title": "Zoo API",
    "description": "API server for Zoo",
    "contact": {
      "url": "https://zoo.dev",
      "email": "api@zoo.dev"
    },
    "version": "0.1.0"
  },
  "paths": {
    "/": {
      "get": {
        "tags": [
          "meta"
        ],
        "summary": "Get OpenAPI schema.",
        "operationId": "get_schema",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/_meta/info": {
      "get": {
        "tags": [
          "meta",
          "hidden"
        ],
        "summary": "Get the metadata about our currently running server.",
        "description": "This includes information on any of our other distributed systems it is connected to.\nYou must be a Zoo employee to perform this request.",
        "operationId": "get_metadata",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/_meta/ipinfo": {
      "get": {
        "tags": [
          "meta",
          "hidden"
        ],
        "summary": "Get ip address information.",
        "operationId": "get_ipinfo",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IpAddrInfo"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ai/text-to-cad/{output_format}": {
      "post": {
        "tags": [
          "ml"
        ],
        "summary": "Generate a CAD model from text.",
        "description": "Because our source of truth for the resulting model is a STEP file, you will always have STEP file contents when you list your generated models. Any other formats you request here will also be returned when you list your generated models.\nThis operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.\nOne thing to note, if you hit the cache, this endpoint will return right away. So you only have to wait if the status is not `Completed` or `Failed`.",
        "operationId": "create_text_to_cad",
        "parameters": [
          {
            "in": "path",
            "name": "output_format",
            "description": "The format the output file should be converted to.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileExportFormat"
            }
          },
          {
            "in": "query",
            "name": "kcl",
            "description": "If we should output the kcl for the model.",
            "schema": {
              "nullable": true,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextToCadCreateBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextToCad"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_text_to_cad",
        "parameters": [
          {
            "in": "path",
            "name": "output_format",
            "description": "The format the output file should be converted to.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileExportFormat"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/api-call-metrics": {
      "get": {
        "tags": [
          "api-calls",
          "hidden"
        ],
        "summary": "Get API call metrics.",
        "description": "This endpoint requires authentication by a Zoo employee. The API calls are grouped by the parameter passed.",
        "operationId": "get_api_call_metrics",
        "parameters": [
          {
            "in": "query",
            "name": "group_by",
            "description": "What field to group the metrics by.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ApiCallQueryGroupBy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_ApiCallQueryGroup",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiCallQueryGroup"
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/api-calls": {
      "get": {
        "tags": [
          "api-calls",
          "hidden"
        ],
        "summary": "List API calls.",
        "description": "This endpoint requires authentication by a Zoo employee. The API calls are returned in order of creation, with the most recently created API calls first.",
        "operationId": "list_api_calls",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCallWithPriceResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/api-calls/{id}": {
      "get": {
        "tags": [
          "api-calls",
          "hidden"
        ],
        "summary": "Get details of an API call.",
        "description": "This endpoint requires authentication by any Zoo user. It returns details of the requested API call for the user.\nIf the user is not authenticated to view the specified API call, then it is not returned.\nOnly Zoo employees can view API calls for other users.",
        "operationId": "get_api_call",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the API call.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCallWithPrice"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/apps/github/callback": {
      "get": {
        "tags": [
          "apps",
          "hidden"
        ],
        "summary": "Listen for callbacks to GitHub app authentication.",
        "description": "This is different than OAuth 2.0 authentication for users. This endpoint grants access for Zoo to access user's repos.\nThe user doesn't need Zoo OAuth authorization for this endpoint, this is purely for the GitHub permissions to access repos.",
        "operationId": "apps_github_callback",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/apps/github/consent": {
      "get": {
        "tags": [
          "apps",
          "hidden"
        ],
        "summary": "Get the consent URL for GitHub app authentication.",
        "description": "This is different than OAuth 2.0 authentication for users. This endpoint grants access for Zoo to access user's repos.\nThe user doesn't need Zoo OAuth authorization for this endpoint, this is purely for the GitHub permissions to access repos.",
        "operationId": "apps_github_consent",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClientInfo"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/apps/github/webhook": {
      "post": {
        "tags": [
          "apps",
          "hidden"
        ],
        "summary": "Listen for GitHub webhooks.",
        "description": "These come from the GitHub app.",
        "operationId": "apps_github_webhook",
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_apps_github_webhook",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/async/operations": {
      "get": {
        "tags": [
          "api-calls",
          "hidden"
        ],
        "summary": "List async operations.",
        "description": "For async file conversion operations, this endpoint does not return the contents of converted files (`output`). To get the contents use the `/async/operations/{id}` endpoint.\nThis endpoint requires authentication by a Zoo employee.",
        "operationId": "list_async_operations",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status to filter by.",
            "schema": {
              "$ref": "#/components/schemas/ApiCallStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncApiCallResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/async/operations/{id}": {
      "get": {
        "tags": [
          "api-calls"
        ],
        "summary": "Get an async operation.",
        "description": "Get the status and output of an async operation.\nThis endpoint requires authentication by any Zoo user. It returns details of the requested async operation for the user.\nIf the user is not authenticated to view the specified async operation, then it is not returned.\nOnly Zoo employees with the proper access can view async operations for other users.",
        "operationId": "get_async_operation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the async operation.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncApiCallOutput"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/auth/email": {
      "post": {
        "tags": [
          "hidden"
        ],
        "summary": "Create an email verification request for a user.",
        "operationId": "auth_email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailAuthenticationForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationTokenResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_auth_email",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/auth/email/callback": {
      "get": {
        "tags": [
          "hidden"
        ],
        "summary": "Listen for callbacks for email verification for users.",
        "operationId": "auth_email_callback",
        "parameters": [
          {
            "in": "query",
            "name": "callback_url",
            "description": "The URL to redirect back to after we have authenticated.",
            "schema": {
              "nullable": true,
              "type": "string",
              "format": "uri"
            }
          },
          {
            "in": "query",
            "name": "email",
            "description": "The user's email.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "in": "query",
            "name": "token",
            "description": "The verification token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Temporary Redirect",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Set-Cookie": {
                "description": "Set-Cookie header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/auth/saml/provider/{provider_id}/login": {
      "get": {
        "tags": [
          "hidden"
        ],
        "summary": "Get a redirect straight to the SAML IdP.",
        "description": "The UI uses this to avoid having to ask the API anything about the IdP. It already knows the SAML IdP ID from the path, so it can just link to this path and rely on the API to redirect to the actual IdP.",
        "operationId": "get_auth_saml",
        "parameters": [
          {
            "in": "path",
            "name": "provider_id",
            "description": "The ID of the identity provider.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Uuid"
            }
          },
          {
            "in": "query",
            "name": "callback_url",
            "description": "The URL to redirect back to after we have authenticated.",
            "schema": {
              "nullable": true,
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Temporary Redirect",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "hidden"
        ],
        "summary": "Authenticate a user via SAML",
        "operationId": "post_auth_saml",
        "parameters": [
          {
            "in": "path",
            "name": "provider_id",
            "description": "The ID of the identity provider.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "302": {
            "description": "Temporary Redirect",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Set-Cookie": {
                "description": "Set-Cookie header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_auth_saml",
        "parameters": [
          {
            "in": "path",
            "name": "provider_id",
            "description": "The ID of the identity provider.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/debug/uploads": {
      "post": {
        "tags": [
          "meta",
          "hidden"
        ],
        "summary": "Uploads files to public blob storage for debugging purposes.",
        "description": "Do NOT send files here that you don't want to be public.",
        "operationId": "create_debug_uploads",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_Url",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_debug_uploads",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/events": {
      "post": {
        "tags": [
          "meta",
          "hidden"
        ],
        "summary": "Creates an internal telemetry event.",
        "description": "We collect anonymous telemetry data for improving our product.",
        "operationId": "create_event",
        "requestBody": {
          "description": "Telemetry requests",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "resource updated",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_event",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/file/center-of-mass": {
      "post": {
        "tags": [
          "file"
        ],
        "summary": "Get CAD file center of mass.",
        "description": "We assume any file given to us has one consistent unit throughout. We also assume the file is at the proper scale.\nThis endpoint returns the cartesian coordinate in world space measure units.\nIn the future, we will use the units inside the file if they are given and do any conversions if necessary for the calculation. But currently, that is not supported.\nGet the center of mass of an object in a CAD file. If the file is larger than 25MB, it will be performed asynchronously.\nIf the operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.",
        "operationId": "create_file_center_of_mass",
        "parameters": [
          {
            "in": "query",
            "name": "output_unit",
            "description": "The output unit for the center of mass.",
            "schema": {
              "$ref": "#/components/schemas/UnitLength"
            }
          },
          {
            "in": "query",
            "name": "src_format",
            "description": "The format of the file.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileCenterOfMass"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_file_center_of_mass",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/file/conversion/{src_format}/{output_format}": {
      "post": {
        "tags": [
          "file"
        ],
        "summary": "Convert CAD file with defaults.",
        "description": "If you wish to specify the conversion options, use the `/file/conversion` endpoint instead.\nConvert a CAD file from one format to another. If the file being converted is larger than 25MB, it will be performed asynchronously.\nIf the conversion is performed synchronously, the contents of the converted file (`output`) will be returned as a base64 encoded string.\nIf the operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.",
        "operationId": "create_file_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "output_format",
            "description": "The format the file should be converted to.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileExportFormat"
            }
          },
          {
            "in": "path",
            "name": "src_format",
            "description": "The format of the file to convert.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_file_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "output_format",
            "description": "The format the file should be converted to.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileExportFormat"
            }
          },
          {
            "in": "path",
            "name": "src_format",
            "description": "The format of the file to convert.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/file/density": {
      "post": {
        "tags": [
          "file"
        ],
        "summary": "Get CAD file density.",
        "description": "We assume any file given to us has one consistent unit throughout. We also assume the file is at the proper scale.\nThis endpoint assumes if you are giving a material mass in a specific mass units, we return a density in mass unit per cubic measure unit.\nIn the future, we will use the units inside the file if they are given and do any conversions if necessary for the calculation. But currently, that is not supported.\nGet the density of an object in a CAD file. If the file is larger than 25MB, it will be performed asynchronously.\nIf the operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.",
        "operationId": "create_file_density",
        "parameters": [
          {
            "in": "query",
            "name": "material_mass",
            "description": "The material mass.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "material_mass_unit",
            "description": "The unit of the material mass.",
            "schema": {
              "$ref": "#/components/schemas/UnitMass"
            }
          },
          {
            "in": "query",
            "name": "output_unit",
            "description": "The output unit for the density.",
            "schema": {
              "$ref": "#/components/schemas/UnitDensity"
            }
          },
          {
            "in": "query",
            "name": "src_format",
            "description": "The format of the file.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDensity"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_file_density",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/file/execute/{lang}": {
      "post": {
        "tags": [
          "executor",
          "hidden"
        ],
        "summary": "Execute a Zoo program in a specific language.",
        "operationId": "create_file_execution",
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "description": "The language of the code.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CodeLanguage"
            }
          },
          {
            "in": "query",
            "name": "output",
            "description": "The output file we want to get the contents for (the paths are relative to where in litterbox it is being run). You can denote more than one file with a comma separated list of string paths.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeOutput"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_file_execution",
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "description": "The language of the code.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CodeLanguage"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/file/mass": {
      "post": {
        "tags": [
          "file"
        ],
        "summary": "Get CAD file mass.",
        "description": "We assume any file given to us has one consistent unit throughout. We also assume the file is at the proper scale.\nThis endpoint assumes if you are giving a material density in a specific mass unit per cubic measure unit, we return a mass in mass units. The same mass units as passed in the material density.\nIn the future, we will use the units inside the file if they are given and do any conversions if necessary for the calculation. But currently, that is not supported.\nGet the mass of an object in a CAD file. If the file is larger than 25MB, it will be performed asynchronously.\nIf the operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.",
        "operationId": "create_file_mass",
        "parameters": [
          {
            "in": "query",
            "name": "material_density",
            "description": "The material density.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "material_density_unit",
            "description": "The unit of the material density.",
            "schema": {
              "$ref": "#/components/schemas/UnitDensity"
            }
          },
          {
            "in": "query",
            "name": "output_unit",
            "description": "The output unit for the mass.",
            "schema": {
              "$ref": "#/components/schemas/UnitMass"
            }
          },
          {
            "in": "query",
            "name": "src_format",
            "description": "The format of the file.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileMass"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_file_mass",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/file/surface-area": {
      "post": {
        "tags": [
          "file"
        ],
        "summary": "Get CAD file surface area.",
        "description": "We assume any file given to us has one consistent unit throughout. We also assume the file is at the proper scale.\nThis endpoint returns the square measure units.\nIn the future, we will use the units inside the file if they are given and do any conversions if necessary for the calculation. But currently, that is not supported.\nGet the surface area of an object in a CAD file. If the file is larger than 25MB, it will be performed asynchronously.\nIf the operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.",
        "operationId": "create_file_surface_area",
        "parameters": [
          {
            "in": "query",
            "name": "output_unit",
            "description": "The output unit for the surface area.",
            "schema": {
              "$ref": "#/components/schemas/UnitArea"
            }
          },
          {
            "in": "query",
            "name": "src_format",
            "description": "The format of the file.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileSurfaceArea"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_file_surface_area",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/file/volume": {
      "post": {
        "tags": [
          "file"
        ],
        "summary": "Get CAD file volume.",
        "description": "We assume any file given to us has one consistent unit throughout. We also assume the file is at the proper scale.\nThis endpoint returns the cubic measure units.\nIn the future, we will use the units inside the file if they are given and do any conversions if necessary for the calculation. But currently, that is not supported.\nGet the volume of an object in a CAD file. If the file is larger than 25MB, it will be performed asynchronously.\nIf the operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.",
        "operationId": "create_file_volume",
        "parameters": [
          {
            "in": "query",
            "name": "output_unit",
            "description": "The output unit for the volume.",
            "schema": {
              "$ref": "#/components/schemas/UnitVolume"
            }
          },
          {
            "in": "query",
            "name": "src_format",
            "description": "The format of the file.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileVolume"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_file_volume",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/internal/discord/api-token/{discord_id}": {
      "get": {
        "tags": [
          "meta",
          "hidden"
        ],
        "summary": "Get an API token for a user by their discord id.",
        "description": "This endpoint allows us to run API calls from our discord bot on behalf of a user. The user must have a discord account linked to their Zoo Account via oauth2 for this to work.\nYou must be a Zoo employee to use this endpoint.",
        "operationId": "internal_get_api_token_for_discord_user",
        "parameters": [
          {
            "in": "path",
            "name": "discord_id",
            "description": "The user's discord ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiToken"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "hidden"
        ],
        "summary": "This endpoint removes the session cookie for a user.",
        "description": "This is used in logout scenarios.",
        "operationId": "logout",
        "responses": {
          "204": {
            "description": "resource updated",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Set-Cookie": {
                "description": "Set-Cookie header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_logout",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ml-prompts": {
      "get": {
        "tags": [
          "ml",
          "hidden"
        ],
        "summary": "List all ML prompts.",
        "description": "For text-to-cad prompts, this will always return the STEP file contents as well as the format the user originally requested.\nThis endpoint requires authentication by a Zoo employee.\nThe ML prompts are returned in order of creation, with the most recently created ML prompts first.",
        "operationId": "list_ml_prompts",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MlPromptResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/ml-prompts/{id}": {
      "get": {
        "tags": [
          "ml",
          "hidden"
        ],
        "summary": "Get a ML prompt.",
        "description": "This endpoint requires authentication by a Zoo employee.",
        "operationId": "get_ml_prompt",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The id of the model to give feedback to.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MlPrompt"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ml/kcl/completions": {
      "post": {
        "tags": [
          "ml",
          "beta"
        ],
        "summary": "Generate code completions for KCL.",
        "operationId": "create_kcl_code_completions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KclCodeCompletionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KclCodeCompletionResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_kcl_code_completions",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ml/text-to-cad/iteration": {
      "post": {
        "tags": [
          "ml",
          "beta"
        ],
        "summary": "Iterate on a CAD model with a prompt.",
        "description": "This operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.",
        "operationId": "create_text_to_cad_iteration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextToCadIterationBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextToCadIteration"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_text_to_cad_iteration",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/oauth2/device/auth": {
      "post": {
        "tags": [
          "oauth2",
          "hidden"
        ],
        "summary": "Start an OAuth 2.0 Device Authorization Grant.",
        "description": "This endpoint is designed to be accessed from an *unauthenticated* API client. It generates and records a `device_code` and `user_code` which must be verified and confirmed prior to a token being granted.",
        "operationId": "device_auth_request",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceAuthRequestForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {}
              }
            }
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_device_auth_request",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/oauth2/device/confirm": {
      "post": {
        "tags": [
          "oauth2",
          "hidden"
        ],
        "summary": "Confirm an OAuth 2.0 Device Authorization Grant.",
        "description": "This endpoint is designed to be accessed by the user agent (browser), not the client requesting the token. So we do not actually return the token here; it will be returned in response to the poll on `/oauth2/device/token`.",
        "operationId": "device_auth_confirm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceAuthVerifyParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_device_auth_confirm",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/oauth2/device/token": {
      "post": {
        "tags": [
          "oauth2",
          "hidden"
        ],
        "summary": "Request a device access token.",
        "description": "This endpoint should be polled by the client until the user code is verified and the grant is confirmed.",
        "operationId": "device_access_token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceAccessTokenRequestForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {}
              }
            }
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_device_access_token",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/oauth2/device/verify": {
      "get": {
        "tags": [
          "oauth2",
          "hidden"
        ],
        "summary": "Verify an OAuth 2.0 Device Authorization Grant.",
        "description": "This endpoint should be accessed in a full user agent (e.g., a browser). If the user is not logged in, we redirect them to the login page and use the `callback_url` parameter to get them to the UI verification form upon logging in. If they are logged in, we redirect them to the UI verification form on the website.",
        "operationId": "device_auth_verify",
        "parameters": [
          {
            "in": "query",
            "name": "user_code",
            "description": "The user code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Temporary Redirect",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/oauth2/provider/{provider}/callback": {
      "get": {
        "tags": [
          "oauth2",
          "hidden"
        ],
        "summary": "Listen for callbacks for the OAuth 2.0 provider.",
        "operationId": "oauth2_provider_callback",
        "parameters": [
          {
            "in": "path",
            "name": "provider",
            "description": "The provider.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AccountProvider"
            }
          },
          {
            "in": "query",
            "name": "code",
            "description": "The authorization code.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "id_token",
            "description": "For Apple only, a JSON web token containing the user’s identity information.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "state",
            "description": "The state that we had passed in through the user consent URL.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "user",
            "description": "For Apple only, a JSON string containing the data requested in the scope property. The returned data is in the following format: `{ \"name\": { \"firstName\": string, \"lastName\": string }, \"email\": string }`",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Temporary Redirect",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Set-Cookie": {
                "description": "Set-Cookie header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "oauth2",
          "hidden"
        ],
        "summary": "Listen for callbacks for the OAuth 2.0 provider.",
        "description": "This specific endpoint listens for posts of form data.",
        "operationId": "oauth2_provider_callback_post",
        "parameters": [
          {
            "in": "path",
            "name": "provider",
            "description": "The provider.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AccountProvider"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthCallback"
              }
            }
          },
          "required": true
        },
        "responses": {
          "302": {
            "description": "Temporary Redirect",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Set-Cookie": {
                "description": "Set-Cookie header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_oauth2_provider_callback",
        "parameters": [
          {
            "in": "path",
            "name": "provider",
            "description": "The provider.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AccountProvider"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/oauth2/provider/{provider}/consent": {
      "get": {
        "tags": [
          "oauth2",
          "hidden"
        ],
        "summary": "Get the consent URL and other information for the OAuth 2.0 provider.",
        "operationId": "oauth2_provider_consent",
        "parameters": [
          {
            "in": "path",
            "name": "provider",
            "description": "The provider.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AccountProvider"
            }
          },
          {
            "in": "query",
            "name": "callback_url",
            "description": "The URL to redirect back to after we have authenticated.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuth2ClientInfo"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/oauth2/token/revoke": {
      "post": {
        "tags": [
          "oauth2",
          "hidden"
        ],
        "summary": "Revoke an OAuth2 token.",
        "description": "This endpoint is designed to be accessed from an *unauthenticated* API client.",
        "operationId": "oauth2_token_revoke",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenRevokeRequestForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {}
              }
            }
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_oauth2_token_revoke",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/org": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "Get an org.",
        "description": "This endpoint requires authentication by an org admin. It gets the authenticated user's org.",
        "operationId": "get_org",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "orgs"
        ],
        "summary": "Update an org.",
        "description": "This endpoint requires authentication by an org admin. It updates the authenticated user's org.",
        "operationId": "update_org",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrgDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "Create an org.",
        "description": "This endpoint requires authentication by a Zoo user that is not already in an org. It creates a new org for the authenticated user and makes them an admin.",
        "operationId": "create_org",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrgDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "orgs",
          "hidden"
        ],
        "summary": "Delete an org.",
        "description": "In order to delete an org, you must first delete all of its members, except yourself.\nYou must also have no outstanding invoices or unpaid balances.\nThis endpoint requires authentication by an org admin. It deletes the authenticated user's org.",
        "operationId": "delete_org",
        "responses": {
          "204": {
            "description": "successful deletion",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_org",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/org/api-calls": {
      "get": {
        "tags": [
          "api-calls"
        ],
        "summary": "List API calls for your org.",
        "description": "This includes all API calls that were made by users in the org.\nThis endpoint requires authentication by an org admin. It returns the API calls for the authenticated user's org.\nThe API calls are returned in order of creation, with the most recently created API calls first.",
        "operationId": "org_list_api_calls",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCallWithPriceResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/org/api-calls/{id}": {
      "get": {
        "tags": [
          "api-calls"
        ],
        "summary": "Get an API call for an org.",
        "description": "This endpoint requires authentication by an org admin. It returns details of the requested API call for the user's org.",
        "operationId": "get_api_call_for_org",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the API call.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCallWithPrice"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/org/members": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "List members of your org.",
        "description": "This endpoint requires authentication by an org admin. It lists the members of the authenticated user's org.",
        "operationId": "list_org_members",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          },
          {
            "in": "query",
            "name": "role",
            "description": "The organization role to filter by.",
            "schema": {
              "$ref": "#/components/schemas/UserOrgRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgMemberResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      },
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "Add a member to your org.",
        "description": "If the user exists, this will add them to your org. If they do not exist, this will create a new user and add them to your org.\nIn both cases the user gets an email that they have been added to the org.\nIf the user is already in your org, this will return a 400 and a message.\nIf the user is already in a different org, this will return a 400 and a message.\nThis endpoint requires authentication by an org admin. It adds the specified member to the authenticated user's org.",
        "operationId": "create_org_member",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrgMember"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgMember"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_org_member",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/org/members/{user_id}": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "Get a member of your org.",
        "description": "This endpoint requires authentication by an org admin. It gets the specified member of the authenticated user's org.",
        "operationId": "get_org_member",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "The user id of the org member.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgMember"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "orgs"
        ],
        "summary": "Update a member of your org.",
        "description": "This endpoint requires authentication by an org admin. It updates the specified member of the authenticated user's org.",
        "operationId": "update_org_member",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "The user id of the org member.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberToOrgBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgMember"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "orgs"
        ],
        "summary": "Remove a member from your org.",
        "description": "This endpoint requires authentication by an org admin. It removes the specified member from the authenticated user's org.",
        "operationId": "delete_org_member",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "The user id of the org member.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful deletion",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_update_org_member",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "The user id of the org member.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/org/payment": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Get payment info about your org.",
        "description": "This includes billing address, phone, and name.\nThis endpoint requires authentication by an org admin. It gets the payment information for the authenticated user's org.",
        "operationId": "get_payment_information_for_org",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "payments"
        ],
        "summary": "Update payment info for your org.",
        "description": "This includes billing address, phone, and name.\nThis endpoint requires authentication by an org admin. It updates the payment information for the authenticated user's org.",
        "operationId": "update_payment_information_for_org",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Create payment info for your org.",
        "description": "This includes billing address, phone, and name.\nThis endpoint requires authentication by the org admin. It creates the payment information for the authenticated user's org.",
        "operationId": "create_payment_information_for_org",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "payments"
        ],
        "summary": "Delete payment info for your org.",
        "description": "This includes billing address, phone, and name.\nThis endpoint requires authentication by an org admin. It deletes the payment information for the authenticated user's org.",
        "operationId": "delete_payment_information_for_org",
        "responses": {
          "204": {
            "description": "successful deletion",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_payment_information_for_org",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/org/payment/balance": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Get balance for your org.",
        "description": "This endpoint requires authentication by an org admin. It gets the balance information for the authenticated user's org.",
        "operationId": "get_payment_balance_for_org",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerBalance"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/org/payment/intent": {
      "post": {
        "tags": [
          "payments",
          "hidden"
        ],
        "summary": "Create a payment intent for your org.",
        "description": "This endpoint requires authentication by the org admin. It creates a new payment intent for the authenticated user's org's org.",
        "operationId": "create_payment_intent_for_org",
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntent"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_payment_intent_for_org",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/org/payment/invoices": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "List invoices for your org.",
        "description": "This endpoint requires authentication by an org admin. It lists invoices for the authenticated user's org.",
        "operationId": "list_invoices_for_org",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_Invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/org/payment/methods": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "List payment methods for your org.",
        "description": "This endpoint requires authentication by an org admin. It lists payment methods for the authenticated user's org.",
        "operationId": "list_payment_methods_for_org",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_PaymentMethod",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/org/payment/methods/{id}": {
      "delete": {
        "tags": [
          "payments",
          "hidden"
        ],
        "summary": "Delete a payment method for your org.",
        "description": "This endpoint requires authentication by an org admin. It deletes the specified payment method for the authenticated user's org.",
        "operationId": "delete_payment_method_for_org",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the payment method.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful deletion",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_payment_methods_for_org",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the payment method.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/org/payment/subscriptions": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Get the subscription for an org.",
        "description": "This endpoint requires authentication by an org admin. It gets the subscription for the authenticated user's org.",
        "operationId": "get_org_subscription",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZooProductSubscriptions"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "payments"
        ],
        "summary": "Update the subscription for an org.",
        "description": "This endpoint requires authentication by an org admin. It updates the subscription for the authenticated user's org.",
        "operationId": "update_org_subscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZooProductSubscriptionsOrgRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZooProductSubscriptions"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Create the subscription for an org.",
        "description": "This endpoint requires authentication by an org admin. It creates the subscription for the authenticated user's org.",
        "operationId": "create_org_subscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZooProductSubscriptionsOrgRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZooProductSubscriptions"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_org_subscription",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/org/payment/tax": {
      "get": {
        "tags": [
          "payments",
          "hidden"
        ],
        "summary": "Validate an orgs's information is correct and valid for automatic tax.",
        "description": "This endpoint requires authentication by an org admin. It will return an error if the org's information is not valid for automatic tax. Otherwise, it will return an empty successful response.",
        "operationId": "validate_customer_tax_information_for_org",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/org/privacy": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "Get the privacy settings for an org.",
        "description": "This endpoint requires authentication by an org admin. It gets the privacy settings for the authenticated user's org.",
        "operationId": "get_org_privacy_settings",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacySettings"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "orgs"
        ],
        "summary": "Update the privacy settings for an org.",
        "description": "This endpoint requires authentication by an org admin. It updates the privacy settings for the authenticated user's org.",
        "operationId": "update_org_privacy_settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacySettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacySettings"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_org_privacy_settings",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/org/saml/idp": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "Get the SAML identity provider.",
        "description": "This endpoint requires authentication by an org admin.",
        "operationId": "get_org_saml_idp",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SamlIdentityProvider"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "orgs"
        ],
        "summary": "Update the SAML identity provider.",
        "description": "This endpoint requires authentication by an org admin.",
        "operationId": "update_org_saml_idp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SamlIdentityProviderCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SamlIdentityProvider"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "Create a SAML identity provider.",
        "description": "This endpoint requires authentication by an org admin.",
        "operationId": "create_org_saml_idp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SamlIdentityProviderCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SamlIdentityProvider"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "orgs"
        ],
        "summary": "Delete an SAML identity provider.",
        "description": "This endpoint requires authentication by an org admin.",
        "operationId": "delete_org_saml_idp",
        "responses": {
          "204": {
            "description": "successful deletion",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_org_saml_idp",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/org/service-accounts": {
      "get": {
        "tags": [
          "service-accounts"
        ],
        "summary": "List service accounts for your org.",
        "description": "This endpoint requires authentication by an org admin. It returns the service accounts for the organization.\nThe service accounts are returned in order of creation, with the most recently created service accounts first.",
        "operationId": "list_service_accounts_for_org",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAccountResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      },
      "post": {
        "tags": [
          "service-accounts"
        ],
        "summary": "Create a new service account for your org.",
        "description": "This endpoint requires authentication by an org admin. It creates a new service account for the organization.",
        "operationId": "create_service_account_for_org",
        "parameters": [
          {
            "in": "query",
            "name": "label",
            "description": "An optional label for the service account.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAccount"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_service_account_for_org",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/org/service-accounts/{token}": {
      "get": {
        "tags": [
          "service-accounts"
        ],
        "summary": "Get an service account for your org.",
        "description": "This endpoint requires authentication by an org admin. It returns details of the requested service account for the organization.",
        "operationId": "get_service_account_for_org",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "The service account.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceAccount"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "service-accounts"
        ],
        "summary": "Delete an service account for your org.",
        "description": "This endpoint requires authentication by an org admin. It deletes the requested service account for the organization.\nThis endpoint does not actually delete the service account from the database. It merely marks the token as invalid. We still want to keep the service account in the database for historical purposes.",
        "operationId": "delete_service_account_for_org",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "The service account.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful deletion",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_service_account_for_org",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "The service account.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/orgs": {
      "get": {
        "tags": [
          "orgs",
          "hidden"
        ],
        "summary": "List orgs.",
        "description": "This endpoint requires authentication by a Zoo employee. The orgs are returned in order of creation, with the most recently created orgs first.",
        "operationId": "list_orgs",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/orgs/{id}": {
      "get": {
        "tags": [
          "orgs",
          "hidden"
        ],
        "summary": "Get an org.",
        "description": "This endpoint requires authentication by a Zoo employee. It gets the information for the specified org.",
        "operationId": "get_any_org",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The organization ID.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/orgs/{id}/enterprise/pricing": {
      "put": {
        "tags": [
          "orgs",
          "hidden"
        ],
        "summary": "Set the enterprise price for an organization.",
        "description": "You must be a Zoo employee to perform this request.",
        "operationId": "update_enterprise_pricing_for_org",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The organization ID.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionTierPrice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZooProductSubscriptions"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_enterprise_pricing_for_org",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The organization ID.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/orgs/{id}/payment/balance": {
      "get": {
        "tags": [
          "payments",
          "hidden"
        ],
        "summary": "Get balance for an org.",
        "description": "This endpoint requires authentication by a Zoo employee. It gets the balance information for the specified org.",
        "operationId": "get_payment_balance_for_any_org",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The organization ID.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerBalance"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "payments",
          "hidden"
        ],
        "summary": "Update balance for an org.",
        "description": "This endpoint requires authentication by a Zoo employee. It updates the balance information for the specified org.",
        "operationId": "update_payment_balance_for_any_org",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The organization ID.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentBalance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerBalance"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_payment_balance_for_any_org",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The organization ID.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "meta"
        ],
        "summary": "Return pong.",
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pong"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/pricing/subscriptions": {
      "get": {
        "tags": [
          "meta",
          "hidden"
        ],
        "summary": "Get the pricing for our subscriptions.",
        "description": "This is the ultimate source of truth for the pricing of our subscriptions.",
        "operationId": "get_pricing_subscriptions",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "title": "Map_of_Array_of_ZooProductSubscription",
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ZooProductSubscription"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/store/coupon": {
      "post": {
        "tags": [
          "store",
          "hidden"
        ],
        "summary": "Create a new store coupon.",
        "description": "This endpoint requires authentication by a Zoo employee. It creates a new store coupon.",
        "operationId": "create_store_coupon",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCouponParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCode"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_store_coupon",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/angle/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert angle units.",
        "description": "Convert an angle unit value to another angle unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_angle_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitAngle"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitAngle"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitAngleConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/area/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert area units.",
        "description": "Convert an area unit value to another area unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_area_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitArea"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitArea"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitAreaConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/current/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert current units.",
        "description": "Convert a current unit value to another current unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_current_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitCurrent"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitCurrent"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitCurrentConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/energy/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert energy units.",
        "description": "Convert a energy unit value to another energy unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_energy_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitEnergy"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitEnergy"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitEnergyConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/force/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert force units.",
        "description": "Convert a force unit value to another force unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_force_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitForce"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitForce"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitForceConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/frequency/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert frequency units.",
        "description": "Convert a frequency unit value to another frequency unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_frequency_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitFrequency"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitFrequency"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitFrequencyConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/length/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert length units.",
        "description": "Convert a length unit value to another length unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_length_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitLength"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitLength"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitLengthConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/mass/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert mass units.",
        "description": "Convert a mass unit value to another mass unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_mass_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitMass"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitMass"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMassConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/power/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert power units.",
        "description": "Convert a power unit value to another power unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_power_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitPower"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitPower"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitPowerConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/pressure/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert pressure units.",
        "description": "Convert a pressure unit value to another pressure unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_pressure_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitPressure"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitPressure"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitPressureConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/temperature/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert temperature units.",
        "description": "Convert a temperature unit value to another temperature unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_temperature_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitTemperature"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitTemperature"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitTemperatureConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/torque/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert torque units.",
        "description": "Convert a torque unit value to another torque unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_torque_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitTorque"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitTorque"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitTorqueConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/volume/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert volume units.",
        "description": "Convert a volume unit value to another volume unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_volume_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitVolume"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitVolume"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitVolumeConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get your user.",
        "description": "Get the user information for the authenticated user.\nAlternatively, you can also use the `/users/me` endpoint.",
        "operationId": "get_user_self",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update your user.",
        "description": "This endpoint requires authentication by any Zoo user. It updates information about the authenticated user.",
        "operationId": "update_user_self",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete your user.",
        "description": "This endpoint requires authentication by any Zoo user. It deletes the authenticated user from Zoo's database.\nThis call will only succeed if all invoices associated with the user have been paid in full and there is no outstanding balance.",
        "operationId": "delete_user_self",
        "responses": {
          "204": {
            "description": "successful deletion",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_user_self",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/api-calls": {
      "get": {
        "tags": [
          "api-calls"
        ],
        "summary": "List API calls for your user.",
        "description": "This endpoint requires authentication by any Zoo user. It returns the API calls for the authenticated user.\nThe API calls are returned in order of creation, with the most recently created API calls first.",
        "operationId": "user_list_api_calls",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCallWithPriceResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/user/api-calls/{id}": {
      "get": {
        "tags": [
          "api-calls"
        ],
        "summary": "Get an API call for a user.",
        "description": "This endpoint requires authentication by any Zoo user. It returns details of the requested API call for the user.",
        "operationId": "get_api_call_for_user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the API call.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCallWithPrice"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/api-tokens": {
      "get": {
        "tags": [
          "api-tokens"
        ],
        "summary": "List API tokens for your user.",
        "description": "This endpoint requires authentication by any Zoo user. It returns the API tokens for the authenticated user.\nThe API tokens are returned in order of creation, with the most recently created API tokens first.",
        "operationId": "list_api_tokens_for_user",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiTokenResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      },
      "post": {
        "tags": [
          "api-tokens"
        ],
        "summary": "Create a new API token for your user.",
        "description": "This endpoint requires authentication by any Zoo user. It creates a new API token for the authenticated user.",
        "operationId": "create_api_token_for_user",
        "parameters": [
          {
            "in": "query",
            "name": "label",
            "description": "An optional label for the API token.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiToken"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_api_token_for_user",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/api-tokens/{token}": {
      "get": {
        "tags": [
          "api-tokens"
        ],
        "summary": "Get an API token for your user.",
        "description": "This endpoint requires authentication by any Zoo user. It returns details of the requested API token for the user.",
        "operationId": "get_api_token_for_user",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "The API token.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiToken"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "api-tokens"
        ],
        "summary": "Delete an API token for your user.",
        "description": "This endpoint requires authentication by any Zoo user. It deletes the requested API token for the user.\nThis endpoint does not actually delete the API token from the database. It merely marks the token as invalid. We still want to keep the token in the database for historical purposes.",
        "operationId": "delete_api_token_for_user",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "The API token.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful deletion",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_api_token_for_user",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "The API token.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/extended": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get extended information about your user.",
        "description": "Get the user information for the authenticated user.\nAlternatively, you can also use the `/users-extended/me` endpoint.",
        "operationId": "get_user_self_extended",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedUser"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/oauth2/providers": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get the OAuth2 providers for your user.",
        "description": "If this returns an empty array, then the user has not connected any OAuth2 providers and uses raw email authentication.\nThis endpoint requires authentication by any Zoo user. It gets the providers for the authenticated user.",
        "operationId": "get_oauth2_providers_for_user",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_AccountProvider",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountProvider"
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/onboarding": {
      "get": {
        "tags": [
          "users",
          "hidden"
        ],
        "summary": "Get your user's onboarding status.",
        "description": "Checks key part of their api usage to determine their onboarding progress",
        "operationId": "get_user_onboarding_self",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Onboarding"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/org": {
      "get": {
        "tags": [
          "orgs",
          "users"
        ],
        "summary": "Get a user's org.",
        "description": "This endpoint requires authentication by any Zoo user. It gets the authenticated user's org.\nIf the user is not a member of an org, this endpoint will return a 404.",
        "operationId": "get_user_org",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOrgInfo"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/payment": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Get payment info about your user.",
        "description": "This includes billing address, phone, and name.\nThis endpoint requires authentication by any Zoo user. It gets the payment information for the authenticated user.",
        "operationId": "get_payment_information_for_user",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "payments"
        ],
        "summary": "Update payment info for your user.",
        "description": "This includes billing address, phone, and name.\nThis endpoint requires authentication by any Zoo user. It updates the payment information for the authenticated user.",
        "operationId": "update_payment_information_for_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Create payment info for your user.",
        "description": "This includes billing address, phone, and name.\nThis endpoint requires authentication by any Zoo user. It creates the payment information for the authenticated user.",
        "operationId": "create_payment_information_for_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "payments"
        ],
        "summary": "Delete payment info for your user.",
        "description": "This includes billing address, phone, and name.\nThis endpoint requires authentication by any Zoo user. It deletes the payment information for the authenticated user.",
        "operationId": "delete_payment_information_for_user",
        "responses": {
          "204": {
            "description": "successful deletion",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_payment_information_for_user",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/payment/balance": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Get balance for your user.",
        "description": "This endpoint requires authentication by any Zoo user. It gets the balance information for the authenticated user.",
        "operationId": "get_payment_balance_for_user",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerBalance"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/payment/intent": {
      "post": {
        "tags": [
          "payments",
          "hidden"
        ],
        "summary": "Create a payment intent for your user.",
        "description": "This endpoint requires authentication by any Zoo user. It creates a new payment intent for the authenticated user.",
        "operationId": "create_payment_intent_for_user",
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntent"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_payment_intent_for_user",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/payment/invoices": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "List invoices for your user.",
        "description": "This endpoint requires authentication by any Zoo user. It lists invoices for the authenticated user.",
        "operationId": "list_invoices_for_user",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_Invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/payment/methods": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "List payment methods for your user.",
        "description": "This endpoint requires authentication by any Zoo user. It lists payment methods for the authenticated user.",
        "operationId": "list_payment_methods_for_user",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_PaymentMethod",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/payment/methods/{id}": {
      "delete": {
        "tags": [
          "payments",
          "hidden"
        ],
        "summary": "Delete a payment method for your user.",
        "description": "This endpoint requires authentication by any Zoo user. It deletes the specified payment method for the authenticated user.",
        "operationId": "delete_payment_method_for_user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the payment method.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful deletion",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_payment_methods_for_user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the payment method.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/payment/subscriptions": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Get the subscription for a user.",
        "description": "This endpoint requires authentication by any Zoo user. It gets the subscription for the user.",
        "operationId": "get_user_subscription",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZooProductSubscriptions"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "payments"
        ],
        "summary": "Update the user's subscription.",
        "description": "This endpoint requires authentication by any Zoo user. It updates the subscription for the user.",
        "operationId": "update_user_subscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZooProductSubscriptionsUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZooProductSubscriptions"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Create the subscription for a user.",
        "description": "This endpoint requires authentication by any Zoo user. It creates the subscription for the user.",
        "operationId": "create_user_subscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZooProductSubscriptionsUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZooProductSubscriptions"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_user_subscription",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/payment/tax": {
      "get": {
        "tags": [
          "payments",
          "hidden"
        ],
        "summary": "Validate a user's information is correct and valid for automatic tax.",
        "description": "This endpoint requires authentication by any Zoo user. It will return an error if the user's information is not valid for automatic tax. Otherwise, it will return an empty successful response.",
        "operationId": "validate_customer_tax_information_for_user",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/privacy": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get the privacy settings for a user.",
        "description": "This endpoint requires authentication by any Zoo user. It gets the privacy settings for the user.",
        "operationId": "get_user_privacy_settings",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacySettings"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update the user's privacy settings.",
        "description": "This endpoint requires authentication by any Zoo user. It updates the privacy settings for the user.",
        "operationId": "update_user_privacy_settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivacySettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacySettings"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_user_privacy_settings",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/session/{token}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get a session for your user.",
        "description": "This endpoint requires authentication by any Zoo user. It returns details of the requested API token for the user.",
        "operationId": "get_session_for_user",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "The API token.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/text-to-cad": {
      "get": {
        "tags": [
          "ml"
        ],
        "summary": "List text-to-CAD models you've generated.",
        "description": "This will always return the STEP file contents as well as the format the user originally requested.\nThis endpoint requires authentication by any Zoo user. It returns the text-to-CAD models for the authenticated user.\nThe text-to-CAD models are returned in order of creation, with the most recently created text-to-CAD models first.",
        "operationId": "list_text_to_cad_models_for_user",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          },
          {
            "in": "query",
            "name": "no_models",
            "description": "If we should return the model file contents or just the metadata.",
            "schema": {
              "nullable": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextToCadResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/user/text-to-cad/{id}": {
      "get": {
        "tags": [
          "ml"
        ],
        "summary": "Get a text-to-CAD response.",
        "description": "This endpoint requires authentication by any Zoo user. The user must be the owner of the text-to-CAD model.",
        "operationId": "get_text_to_cad_model_for_user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The id of the model to give feedback to.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextToCad"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "ml"
        ],
        "summary": "Give feedback to a specific text-to-CAD response.",
        "description": "This endpoint requires authentication by any Zoo user. The user must be the owner of the text-to-CAD model, in order to give feedback.",
        "operationId": "create_text_to_cad_model_feedback",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The id of the model to give feedback to.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "feedback",
            "description": "The feedback.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/MlFeedback"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "resource updated",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_text_to_cad_model_feedback",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The id of the model to give feedback to.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users",
          "hidden"
        ],
        "summary": "List users.",
        "description": "This endpoint requires authentication by a Zoo employee. The users are returned in order of creation, with the most recently created users first.",
        "operationId": "list_users",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/users-extended": {
      "get": {
        "tags": [
          "users",
          "hidden"
        ],
        "summary": "List users with extended information.",
        "description": "This endpoint requires authentication by a Zoo employee. The users are returned in order of creation, with the most recently created users first.",
        "operationId": "list_users_extended",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedUserResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/users-extended/{id}": {
      "get": {
        "tags": [
          "users",
          "hidden"
        ],
        "summary": "Get extended information about a user.",
        "description": "To get information about yourself, use `/users-extended/me` as the endpoint. By doing so you will get the user information for the authenticated user.\nAlternatively, to get information about the authenticated user, use `/user/extended` endpoint.\nTo get information about any Zoo user, you must be a Zoo employee.",
        "operationId": "get_user_extended",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The user ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedUser"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users",
          "hidden"
        ],
        "summary": "Get a user.",
        "description": "To get information about yourself, use `/users/me` as the endpoint. By doing so you will get the user information for the authenticated user.\nAlternatively, to get information about the authenticated user, use `/user` endpoint.\nTo get information about any Zoo user, you must be a Zoo employee.",
        "operationId": "get_user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The user ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/users/{id}/api-calls": {
      "get": {
        "tags": [
          "api-calls",
          "hidden"
        ],
        "summary": "List API calls for a user.",
        "description": "This endpoint requires authentication by any Zoo user. It returns the API calls for the authenticated user if \"me\" is passed as the user id.\nAlternatively, you can use the `/user/api-calls` endpoint to get the API calls for your user.\nIf the authenticated user is a Zoo employee, then the API calls are returned for the user specified by the user id.\nThe API calls are returned in order of creation, with the most recently created API calls first.",
        "operationId": "list_api_calls_for_user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The user ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCallWithPriceResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/users/{id}/payment/balance": {
      "get": {
        "tags": [
          "payments",
          "hidden"
        ],
        "summary": "Get balance for an user.",
        "description": "This endpoint requires authentication by a Zoo employee. It gets the balance information for the specified user.",
        "operationId": "get_payment_balance_for_any_user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The user ID.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerBalance"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "payments",
          "hidden"
        ],
        "summary": "Update balance for an user.",
        "description": "This endpoint requires authentication by a Zoo employee. It updates the balance information for the specified user.",
        "operationId": "update_payment_balance_for_any_user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The user ID.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentBalance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerBalance"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_payment_balance_for_any_user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The user ID.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "X-Api-Call-Id": {
                "description": "ID for this request. We return it so that users can report this to us and help us debug their problems.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ws/executor/term": {
      "get": {
        "tags": [
          "executor",
          "hidden"
        ],
        "summary": "Create a terminal.",
        "description": "Attach to a docker container to create an interactive terminal.",
        "operationId": "create_executor_term",
        "responses": {
          "default": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {}
              }
            }
          }
        },
        "x-dropshot-websocket": {}
      }
    },
    "/ws/modeling/commands": {
      "get": {
        "tags": [
          "modeling",
          "beta"
        ],
        "summary": "Open a websocket which accepts modeling commands.",
        "description": "Pass those commands to the engine via websocket, and pass responses back to the client. Basically, this is a websocket proxy between the frontend/client and the engine.",
        "operationId": "modeling_commands_ws",
        "parameters": [
          {
            "in": "query",
            "name": "fps",
            "description": "Frames per second of the video feed.",
            "schema": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "pool",
            "description": "An optional identifier for a pool of engine instances. The 'default' pool is used when none is specified.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "post_effect",
            "description": "Engine Post effects (such as SSAO)",
            "schema": {
              "$ref": "#/components/schemas/PostEffectType"
            }
          },
          {
            "in": "query",
            "name": "replay",
            "description": "If given, when the session ends, the modeling commands sent during the session will be written out to this filename. For debugging.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "show_grid",
            "description": "If true, will show the grid at the start of the session.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "unlocked_framerate",
            "description": "If true, engine will render video frames as fast as it can.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "video_res_height",
            "description": "Height of the video feed. Must be a multiple of 4.",
            "schema": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "video_res_width",
            "description": "Width of the video feed. Must be a multiple of 4.",
            "schema": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "webrtc",
            "description": "If true, will start a webrtc connection.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "Websocket requests",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebSocketRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Websocket responses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebSocketResponse"
                }
              }
            }
          }
        },
        "x-dropshot-websocket": {}
      }
    }
  },
  "components": {
    "schemas": {
      "AccountProvider": {
        "description": "An account provider.",
        "oneOf": [
          {
            "description": "The Apple account provider.",
            "type": "string",
            "enum": [
              "apple"
            ]
          },
          {
            "description": "The Discord account provider.",
            "type": "string",
            "enum": [
              "discord"
            ]
          },
          {
            "description": "The Google account provider.",
            "type": "string",
            "enum": [
              "google"
            ]
          },
          {
            "description": "The GitHub account provider.",
            "type": "string",
            "enum": [
              "github"
            ]
          },
          {
            "description": "The Microsoft account provider.",
            "type": "string",
            "enum": [
              "microsoft"
            ]
          },
          {
            "description": "The SAML account provider.",
            "type": "string",
            "enum": [
              "saml"
            ]
          },
          {
            "description": "The Tencent QQ account provider.",
            "type": "string",
            "enum": [
              "tencent"
            ]
          }
        ]
      },
      "AddOrgMember": {
        "description": "Data for adding a member to an org.",
        "type": "object",
        "properties": {
          "email": {
            "description": "The email address of the user to add to the org.",
            "type": "string",
            "format": "email"
          },
          "role": {
            "description": "The organization role to give the user.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserOrgRole"
              }
            ]
          }
        },
        "required": [
          "email",
          "role"
        ]
      },
      "AddressDetails": {
        "description": "Address details.",
        "type": "object",
        "properties": {
          "city": {
            "description": "The city component.",
            "type": "string"
          },
          "country": {
            "description": "The country component. This is a two-letter ISO country code.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CountryCode"
              }
            ]
          },
          "state": {
            "description": "The state component.",
            "type": "string"
          },
          "street1": {
            "description": "The first street component.",
            "type": "string"
          },
          "street2": {
            "description": "The second street component.",
            "type": "string"
          },
          "zip": {
            "description": "The zip component.",
            "type": "string"
          }
        },
        "required": [
          "country"
        ]
      },
      "Angle": {
        "description": "An angle, with a specific unit.",
        "type": "object",
        "properties": {
          "unit": {
            "description": "What unit is the measurement?",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitAngle"
              }
            ]
          },
          "value": {
            "description": "The size of the angle, measured in the chosen unit.",
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "unit",
          "value"
        ]
      },
      "AnnotationLineEnd": {
        "description": "Annotation line end type",
        "type": "string",
        "enum": [
          "none",
          "arrow"
        ]
      },
      "AnnotationLineEndOptions": {
        "description": "Options for annotation text",
        "type": "object",
        "properties": {
          "end": {
            "description": "How to style the end of the annotation line.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AnnotationLineEnd"
              }
            ]
          },
          "start": {
            "description": "How to style the start of the annotation line.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AnnotationLineEnd"
              }
            ]
          }
        },
        "required": [
          "end",
          "start"
        ]
      },
      "AnnotationOptions": {
        "description": "Options for annotations",
        "type": "object",
        "properties": {
          "color": {
            "nullable": true,
            "description": "Color to render the annotation",
            "allOf": [
              {
                "$ref": "#/components/schemas/Color"
              }
            ]
          },
          "line_ends": {
            "nullable": true,
            "description": "How to style the start and end of the line",
            "allOf": [
              {
                "$ref": "#/components/schemas/AnnotationLineEndOptions"
              }
            ]
          },
          "line_width": {
            "nullable": true,
            "description": "Width of the annotation's line",
            "type": "number",
            "format": "float"
          },
          "position": {
            "nullable": true,
            "description": "Position to put the annotation",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "text": {
            "nullable": true,
            "description": "Text displayed on the annotation",
            "allOf": [
              {
                "$ref": "#/components/schemas/AnnotationTextOptions"
              }
            ]
          }
        }
      },
      "AnnotationTextAlignmentX": {
        "description": "Horizontal Text alignment",
        "type": "string",
        "enum": [
          "left",
          "center",
          "right"
        ]
      },
      "AnnotationTextAlignmentY": {
        "description": "Vertical Text alignment",
        "type": "string",
        "enum": [
          "bottom",
          "center",
          "top"
        ]
      },
      "AnnotationTextOptions": {
        "description": "Options for annotation text",
        "type": "object",
        "properties": {
          "point_size": {
            "description": "Text font's point size",
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "text": {
            "description": "Text displayed on the annotation",
            "type": "string"
          },
          "x": {
            "description": "Alignment along the X axis",
            "allOf": [
              {
                "$ref": "#/components/schemas/AnnotationTextAlignmentX"
              }
            ]
          },
          "y": {
            "description": "Alignment along the Y axis",
            "allOf": [
              {
                "$ref": "#/components/schemas/AnnotationTextAlignmentY"
              }
            ]
          }
        },
        "required": [
          "point_size",
          "text",
          "x",
          "y"
        ]
      },
      "AnnotationType": {
        "description": "The type of annotation",
        "oneOf": [
          {
            "description": "2D annotation type (screen or planar space)",
            "type": "string",
            "enum": [
              "t2d"
            ]
          },
          {
            "description": "3D annotation type",
            "type": "string",
            "enum": [
              "t3d"
            ]
          }
        ]
      },
      "ApiCallQueryGroup": {
        "description": "A response for a query on the API call table that is grouped by something.",
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "query": {
            "type": "string"
          }
        },
        "required": [
          "count",
          "query"
        ]
      },
      "ApiCallQueryGroupBy": {
        "description": "The field of an API call to group by.",
        "oneOf": [
          {
            "description": "The email of the user that requested the API call.",
            "type": "string",
            "enum": [
              "email"
            ]
          },
          {
            "description": "The HTTP method of the API call.",
            "type": "string",
            "enum": [
              "method"
            ]
          },
          {
            "description": "The endpoint of the API call.",
            "type": "string",
            "enum": [
              "endpoint"
            ]
          },
          {
            "description": "The user ID of the user that requested the API call.",
            "type": "string",
            "enum": [
              "user_id"
            ]
          },
          {
            "description": "The origin of the API call. This is parsed from the `Origin` header.",
            "type": "string",
            "enum": [
              "origin"
            ]
          },
          {
            "description": "The IP address of the user making the API call.",
            "type": "string",
            "enum": [
              "ip_address"
            ]
          }
        ]
      },
      "ApiCallStatus": {
        "description": "The status of an async API call.",
        "oneOf": [
          {
            "description": "The async API call is queued.",
            "type": "string",
            "enum": [
              "queued"
            ]
          },
          {
            "description": "The async API call was uploaded to be converted.",
            "type": "string",
            "enum": [
              "uploaded"
            ]
          },
          {
            "description": "The async API call is in progress.",
            "type": "string",
            "enum": [
              "in_progress"
            ]
          },
          {
            "description": "The async API call has completed.",
            "type": "string",
            "enum": [
              "completed"
            ]
          },
          {
            "description": "The async API call has failed.",
            "type": "string",
            "enum": [
              "failed"
            ]
          }
        ]
      },
      "ApiCallWithPrice": {
        "description": "An API call with the price.\n\nThis is a join of the `ApiCall` and `ApiCallPrice` tables.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The date and time the API call completed billing.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "nullable": true,
            "title": "int64",
            "description": "The duration of the API call.",
            "type": "integer",
            "format": "duration"
          },
          "email": {
            "description": "The user's email address.",
            "type": "string",
            "format": "email"
          },
          "endpoint": {
            "description": "The endpoint requested by the API call.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "ip_address": {
            "title": "String",
            "description": "The ip address of the origin.",
            "default": "",
            "type": "string",
            "format": "ip"
          },
          "litterbox": {
            "nullable": true,
            "description": "If the API call was spawned from the litterbox or not.",
            "type": "boolean"
          },
          "method": {
            "description": "The HTTP method requested by the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Method"
              }
            ]
          },
          "minutes": {
            "nullable": true,
            "description": "The number of minutes the API call was billed for.",
            "type": "integer",
            "format": "int32"
          },
          "org_id": {
            "nullable": true,
            "description": "The organization ID of the API call if it is billable through an organization.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "origin": {
            "description": "The origin of the API call.",
            "type": "string"
          },
          "price": {
            "nullable": true,
            "title": "double",
            "description": "The price of the API call.",
            "type": "number",
            "format": "money-usd"
          },
          "request_body": {
            "nullable": true,
            "description": "The request body sent by the API call.",
            "type": "string"
          },
          "request_query_params": {
            "description": "The request query params sent by the API call.",
            "type": "string"
          },
          "response_body": {
            "nullable": true,
            "description": "The response body returned by the API call. We do not store this information if it is above a certain size.",
            "type": "string"
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The date and time the API call started billing.",
            "type": "string",
            "format": "date-time"
          },
          "status_code": {
            "nullable": true,
            "title": "int32",
            "description": "The status code returned by the API call.",
            "type": "integer",
            "format": "int32"
          },
          "stripe_invoice_item_id": {
            "description": "The Stripe invoice item ID of the API call if it is billable.",
            "type": "string"
          },
          "token": {
            "description": "The API token that made the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_agent": {
            "description": "The user agent of the request.",
            "type": "string"
          },
          "user_id": {
            "description": "The ID of the user that made the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "method",
          "token",
          "updated_at",
          "user_agent",
          "user_id"
        ]
      },
      "ApiCallWithPriceResultsPage": {
        "description": "A single page of results",
        "type": "object",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiCallWithPrice"
            }
          },
          "next_page": {
            "nullable": true,
            "description": "token used to fetch the next page of results (if any)",
            "type": "string"
          }
        },
        "required": [
          "items"
        ]
      },
      "ApiError": {
        "description": "An error.",
        "type": "object",
        "properties": {
          "error_code": {
            "description": "The error code.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorCode"
              }
            ]
          },
          "message": {
            "description": "The error message.",
            "type": "string"
          }
        },
        "required": [
          "error_code",
          "message"
        ]
      },
      "ApiToken": {
        "description": "An API token.\n\nThese are used to authenticate users with Bearer authentication.",
        "type": "object",
        "properties": {
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the API token was created.",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "description": "The unique identifier for the API token.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "is_valid": {
            "description": "If the token is valid. We never delete API tokens, but we can mark them as invalid. We save them for ever to preserve the history of the API token.",
            "type": "boolean"
          },
          "label": {
            "nullable": true,
            "description": "An optional label for the API token.",
            "type": "string"
          },
          "token": {
            "description": "The API token itself.",
            "allOf": [
              {
                "$ref": "#/components/schemas/StringUuid"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the API token was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The ID of the user that owns the API token.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "is_valid",
          "token",
          "updated_at",
          "user_id"
        ]
      },
      "ApiTokenResultsPage": {
        "description": "A single page of results",
        "type": "object",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiToken"
            }
          },
          "next_page": {
            "nullable": true,
            "description": "token used to fetch the next page of results (if any)",
            "type": "string"
          }
        },
        "required": [
          "items"
        ]
      },
      "AppClientInfo": {
        "description": "Information about a third party app client.",
        "type": "object",
        "properties": {
          "url": {
            "description": "The URL for consent.",
            "type": "string"
          }
        }
      },
      "AsyncApiCall": {
        "description": "An async API call.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the async API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the async API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the async API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The JSON input for the API call. These are determined by the endpoint that is run."
          },
          "output": {
            "nullable": true,
            "description": "The JSON output for the API call. These are determined by the endpoint that is run."
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the async API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the async API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "type": {
            "description": "The type of async API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AsyncApiCallType"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the async API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the async API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "worker": {
            "description": "The worker node that is performing or performed the async API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "status",
          "type",
          "updated_at",
          "user_id"
        ]
      },
      "AsyncApiCallOutput": {
        "description": "The output from the async API call.",
        "oneOf": [
          {
            "description": "A file conversion.",
            "type": "object",
            "properties": {
              "completed_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was completed.",
                "type": "string",
                "format": "date-time"
              },
              "created_at": {
                "title": "DateTime",
                "description": "The time and date the API call was created.",
                "type": "string",
                "format": "date-time"
              },
              "error": {
                "nullable": true,
                "description": "The error the function returned, if any.",
                "type": "string"
              },
              "id": {
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              },
              "output_format": {
                "description": "The output format of the file conversion.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileExportFormat"
                  }
                ]
              },
              "output_format_options": {
                "nullable": true,
                "description": "The output format options of the file conversion.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OutputFormat"
                  }
                ]
              },
              "outputs": {
                "description": "The converted files (if multiple file conversion), if completed, base64 encoded. The key of the map is the path of the output file.",
                "type": "object",
                "additionalProperties": {
                  "title": "String",
                  "type": "string",
                  "format": "byte"
                }
              },
              "src_format": {
                "description": "The source format of the file conversion.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileImportFormat"
                  }
                ]
              },
              "src_format_options": {
                "nullable": true,
                "description": "The source format options of the file conversion.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InputFormat"
                  }
                ]
              },
              "started_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was started.",
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "description": "The status of the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "file_conversion"
                ]
              },
              "updated_at": {
                "title": "DateTime",
                "description": "The time and date the API call was last updated.",
                "type": "string",
                "format": "date-time"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              }
            },
            "required": [
              "created_at",
              "id",
              "output_format",
              "src_format",
              "status",
              "type",
              "updated_at",
              "user_id"
            ]
          },
          {
            "description": "File center of mass.",
            "type": "object",
            "properties": {
              "center_of_mass": {
                "nullable": true,
                "description": "The resulting center of mass.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "completed_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was completed.",
                "type": "string",
                "format": "date-time"
              },
              "created_at": {
                "title": "DateTime",
                "description": "The time and date the API call was created.",
                "type": "string",
                "format": "date-time"
              },
              "error": {
                "nullable": true,
                "description": "The error the function returned, if any.",
                "type": "string"
              },
              "id": {
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              },
              "output_unit": {
                "description": "The output unit for the center of mass.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              },
              "src_format": {
                "description": "The source format of the file.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileImportFormat"
                  }
                ]
              },
              "started_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was started.",
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "description": "The status of the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "file_center_of_mass"
                ]
              },
              "updated_at": {
                "title": "DateTime",
                "description": "The time and date the API call was last updated.",
                "type": "string",
                "format": "date-time"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              }
            },
            "required": [
              "created_at",
              "id",
              "output_unit",
              "src_format",
              "status",
              "type",
              "updated_at",
              "user_id"
            ]
          },
          {
            "description": "A file mass.",
            "type": "object",
            "properties": {
              "completed_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was completed.",
                "type": "string",
                "format": "date-time"
              },
              "created_at": {
                "title": "DateTime",
                "description": "The time and date the API call was created.",
                "type": "string",
                "format": "date-time"
              },
              "error": {
                "nullable": true,
                "description": "The error the function returned, if any.",
                "type": "string"
              },
              "id": {
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              },
              "mass": {
                "nullable": true,
                "description": "The resulting mass.",
                "type": "number",
                "format": "double"
              },
              "material_density": {
                "description": "The material density as denoted by the user.",
                "default": 0.0,
                "type": "number",
                "format": "double"
              },
              "material_density_unit": {
                "description": "The material density unit.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitDensity"
                  }
                ]
              },
              "output_unit": {
                "description": "The output unit for the mass.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitMass"
                  }
                ]
              },
              "src_format": {
                "description": "The source format of the file.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileImportFormat"
                  }
                ]
              },
              "started_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was started.",
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "description": "The status of the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "file_mass"
                ]
              },
              "updated_at": {
                "title": "DateTime",
                "description": "The time and date the API call was last updated.",
                "type": "string",
                "format": "date-time"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              }
            },
            "required": [
              "created_at",
              "id",
              "material_density_unit",
              "output_unit",
              "src_format",
              "status",
              "type",
              "updated_at",
              "user_id"
            ]
          },
          {
            "description": "A file volume.",
            "type": "object",
            "properties": {
              "completed_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was completed.",
                "type": "string",
                "format": "date-time"
              },
              "created_at": {
                "title": "DateTime",
                "description": "The time and date the API call was created.",
                "type": "string",
                "format": "date-time"
              },
              "error": {
                "nullable": true,
                "description": "The error the function returned, if any.",
                "type": "string"
              },
              "id": {
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              },
              "output_unit": {
                "description": "The output unit for the volume.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitVolume"
                  }
                ]
              },
              "src_format": {
                "description": "The source format of the file.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileImportFormat"
                  }
                ]
              },
              "started_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was started.",
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "description": "The status of the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "file_volume"
                ]
              },
              "updated_at": {
                "title": "DateTime",
                "description": "The time and date the API call was last updated.",
                "type": "string",
                "format": "date-time"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              },
              "volume": {
                "nullable": true,
                "description": "The resulting volume.",
                "type": "number",
                "format": "double"
              }
            },
            "required": [
              "created_at",
              "id",
              "output_unit",
              "src_format",
              "status",
              "type",
              "updated_at",
              "user_id"
            ]
          },
          {
            "description": "A file density.",
            "type": "object",
            "properties": {
              "completed_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was completed.",
                "type": "string",
                "format": "date-time"
              },
              "created_at": {
                "title": "DateTime",
                "description": "The time and date the API call was created.",
                "type": "string",
                "format": "date-time"
              },
              "density": {
                "nullable": true,
                "description": "The resulting density.",
                "type": "number",
                "format": "double"
              },
              "error": {
                "nullable": true,
                "description": "The error the function returned, if any.",
                "type": "string"
              },
              "id": {
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              },
              "material_mass": {
                "description": "The material mass as denoted by the user.",
                "default": 0.0,
                "type": "number",
                "format": "double"
              },
              "material_mass_unit": {
                "description": "The material mass unit.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitMass"
                  }
                ]
              },
              "output_unit": {
                "description": "The output unit for the density.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitDensity"
                  }
                ]
              },
              "src_format": {
                "description": "The source format of the file.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileImportFormat"
                  }
                ]
              },
              "started_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was started.",
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "description": "The status of the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "file_density"
                ]
              },
              "updated_at": {
                "title": "DateTime",
                "description": "The time and date the API call was last updated.",
                "type": "string",
                "format": "date-time"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              }
            },
            "required": [
              "created_at",
              "id",
              "material_mass_unit",
              "output_unit",
              "src_format",
              "status",
              "type",
              "updated_at",
              "user_id"
            ]
          },
          {
            "description": "A file surface area.",
            "type": "object",
            "properties": {
              "completed_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was completed.",
                "type": "string",
                "format": "date-time"
              },
              "created_at": {
                "title": "DateTime",
                "description": "The time and date the API call was created.",
                "type": "string",
                "format": "date-time"
              },
              "error": {
                "nullable": true,
                "description": "The error the function returned, if any.",
                "type": "string"
              },
              "id": {
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              },
              "output_unit": {
                "description": "The output unit for the surface area.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitArea"
                  }
                ]
              },
              "src_format": {
                "description": "The source format of the file.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileImportFormat"
                  }
                ]
              },
              "started_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was started.",
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "description": "The status of the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ]
              },
              "surface_area": {
                "nullable": true,
                "description": "The resulting surface area.",
                "type": "number",
                "format": "double"
              },
              "type": {
                "type": "string",
                "enum": [
                  "file_surface_area"
                ]
              },
              "updated_at": {
                "title": "DateTime",
                "description": "The time and date the API call was last updated.",
                "type": "string",
                "format": "date-time"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              }
            },
            "required": [
              "created_at",
              "id",
              "output_unit",
              "src_format",
              "status",
              "type",
              "updated_at",
              "user_id"
            ]
          },
          {
            "description": "Text to CAD.",
            "type": "object",
            "properties": {
              "code": {
                "nullable": true,
                "description": "The code for the model. This is optional but will be required in the future once we are at v1.",
                "type": "string"
              },
              "completed_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was completed.",
                "type": "string",
                "format": "date-time"
              },
              "created_at": {
                "title": "DateTime",
                "description": "The time and date the API call was created.",
                "type": "string",
                "format": "date-time"
              },
              "error": {
                "nullable": true,
                "description": "The error the function returned, if any.",
                "type": "string"
              },
              "feedback": {
                "nullable": true,
                "description": "Feedback from the user, if any.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MlFeedback"
                  }
                ]
              },
              "id": {
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              },
              "model": {
                "description": "The model being used.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TextToCadModel"
                  }
                ]
              },
              "model_version": {
                "description": "The version of the model.",
                "type": "string"
              },
              "output_format": {
                "description": "The output format of the model.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileExportFormat"
                  }
                ]
              },
              "outputs": {
                "description": "The output of the model in the given file format the user requested, base64 encoded. The key of the map is the path of the output file.",
                "type": "object",
                "additionalProperties": {
                  "title": "String",
                  "type": "string",
                  "format": "byte"
                }
              },
              "prompt": {
                "description": "The prompt.",
                "type": "string"
              },
              "started_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was started.",
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "description": "The status of the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "text_to_cad"
                ]
              },
              "updated_at": {
                "title": "DateTime",
                "description": "The time and date the API call was last updated.",
                "type": "string",
                "format": "date-time"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              }
            },
            "required": [
              "created_at",
              "id",
              "model",
              "model_version",
              "output_format",
              "prompt",
              "status",
              "type",
              "updated_at",
              "user_id"
            ]
          },
          {
            "description": "Text to CAD iteration.",
            "type": "object",
            "properties": {
              "code": {
                "description": "The code for the new model.",
                "type": "string"
              },
              "completed_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was completed.",
                "type": "string",
                "format": "date-time"
              },
              "created_at": {
                "title": "DateTime",
                "description": "The time and date the API call was created.",
                "type": "string",
                "format": "date-time"
              },
              "error": {
                "nullable": true,
                "description": "The error the function returned, if any.",
                "type": "string"
              },
              "feedback": {
                "nullable": true,
                "description": "Feedback from the user, if any.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MlFeedback"
                  }
                ]
              },
              "id": {
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              },
              "model": {
                "description": "The model being used.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TextToCadModel"
                  }
                ]
              },
              "model_version": {
                "description": "The version of the model.",
                "type": "string"
              },
              "original_source_code": {
                "description": "The original source code for the model, previous to the changes.",
                "type": "string"
              },
              "prompt": {
                "nullable": true,
                "description": "The prompt for the overall changes. This is optional if you only want changes on specific source ranges.",
                "type": "string"
              },
              "source_ranges": {
                "description": "The source ranges the user suggested to change.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SourceRangePrompt"
                }
              },
              "started_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was started.",
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "description": "The status of the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "text_to_cad_iteration"
                ]
              },
              "updated_at": {
                "title": "DateTime",
                "description": "The time and date the API call was last updated.",
                "type": "string",
                "format": "date-time"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              }
            },
            "required": [
              "code",
              "created_at",
              "id",
              "model",
              "model_version",
              "original_source_code",
              "source_ranges",
              "status",
              "type",
              "updated_at",
              "user_id"
            ]
          }
        ]
      },
      "AsyncApiCallResultsPage": {
        "description": "A single page of results",
        "type": "object",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AsyncApiCall"
            }
          },
          "next_page": {
            "nullable": true,
            "description": "token used to fetch the next page of results (if any)",
            "type": "string"
          }
        },
        "required": [
          "items"
        ]
      },
      "AsyncApiCallType": {
        "description": "The type of async API call.",
        "oneOf": [
          {
            "description": "File conversion.",
            "type": "string",
            "enum": [
              "file_conversion"
            ]
          },
          {
            "description": "File volume.",
            "type": "string",
            "enum": [
              "file_volume"
            ]
          },
          {
            "description": "File center of mass.",
            "type": "string",
            "enum": [
              "file_center_of_mass"
            ]
          },
          {
            "description": "File mass.",
            "type": "string",
            "enum": [
              "file_mass"
            ]
          },
          {
            "description": "File density.",
            "type": "string",
            "enum": [
              "file_density"
            ]
          },
          {
            "description": "File surface area.",
            "type": "string",
            "enum": [
              "file_surface_area"
            ]
          },
          {
            "description": "Text to CAD.",
            "type": "string",
            "enum": [
              "text_to_cad"
            ]
          },
          {
            "description": "Text to CAD iteration.",
            "type": "string",
            "enum": [
              "text_to_cad_iteration"
            ]
          }
        ]
      },
      "AuthCallback": {
        "description": "The authentication callback from the OAuth 2.0 client. This is typically posted to the redirect URL as query params after authenticating.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The authorization code.",
            "type": "string"
          },
          "id_token": {
            "nullable": true,
            "description": "For Apple only, a JSON web token containing the user’s identity information.",
            "type": "string"
          },
          "state": {
            "description": "The state that we had passed in through the user consent URL.",
            "type": "string"
          },
          "user": {
            "nullable": true,
            "description": "For Apple only, a JSON string containing the data requested in the scope property. The returned data is in the following format: `{ \"name\": { \"firstName\": string, \"lastName\": string }, \"email\": string }`",
            "type": "string"
          }
        }
      },
      "Axis": {
        "description": "Co-ordinate axis specifier.\n\nSee [cglearn.eu] for background reading.\n\n[cglearn.eu]: https://cglearn.eu/pub/computer-graphics/introduction-to-geometry#material-coordinate-systems-1",
        "oneOf": [
          {
            "description": "'Y' axis.",
            "type": "string",
            "enum": [
              "y"
            ]
          },
          {
            "description": "'Z' axis.",
            "type": "string",
            "enum": [
              "z"
            ]
          }
        ]
      },
      "AxisDirectionPair": {
        "description": "An [`Axis`] paired with a [`Direction`].",
        "type": "object",
        "properties": {
          "axis": {
            "description": "Axis specifier.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Axis"
              }
            ]
          },
          "direction": {
            "description": "Specifies which direction the axis is pointing.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Direction"
              }
            ]
          }
        },
        "required": [
          "axis",
          "direction"
        ]
      },
      "BatchResponse": {
        "description": "Websocket responses can either be successful or unsuccessful. Slightly different schemas in either case.",
        "anyOf": [
          {
            "description": "Response sent when a request succeeded.",
            "type": "object",
            "properties": {
              "response": {
                "description": "Response to the modeling command.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OkModelingCmdResponse"
                  }
                ]
              }
            },
            "required": [
              "response"
            ]
          },
          {
            "description": "Response sent when a request did not succeed.",
            "type": "object",
            "properties": {
              "errors": {
                "description": "Errors that occurred during the modeling command.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "required": [
              "errors"
            ]
          }
        ]
      },
      "BillingInfo": {
        "description": "The billing information for payments.",
        "type": "object",
        "properties": {
          "address": {
            "nullable": true,
            "description": "The address of the customer.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressDetails"
              }
            ]
          },
          "name": {
            "description": "The name of the customer.",
            "type": "string"
          },
          "phone": {
            "title": "String",
            "description": "The phone for the customer.",
            "default": "",
            "type": "string",
            "format": "phone"
          }
        }
      },
      "BlockReason": {
        "description": "The reason for blocking a user.",
        "oneOf": [
          {
            "description": "The user is missing a payment method and has exceeded their free API call credits for the month.",
            "type": "string",
            "enum": [
              "missing_payment_method"
            ]
          },
          {
            "description": "The users payment method has failed.",
            "type": "string",
            "enum": [
              "payment_method_failed"
            ]
          }
        ]
      },
      "CacheMetadata": {
        "description": "Metadata about our cache.\n\nThis is mostly used for internal purposes and debugging.",
        "type": "object",
        "properties": {
          "ok": {
            "description": "If the cache returned an ok response from ping.",
            "type": "boolean"
          }
        },
        "required": [
          "ok"
        ]
      },
      "CameraDragEnd": {
        "description": "The response from the `CameraDragEnd` command.",
        "type": "object",
        "properties": {
          "settings": {
            "description": "Camera settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/CameraSettings"
              }
            ]
          }
        },
        "required": [
          "settings"
        ]
      },
      "CameraDragInteractionType": {
        "description": "The type of camera drag interaction.",
        "oneOf": [
          {
            "description": "Camera pan",
            "type": "string",
            "enum": [
              "pan"
            ]
          },
          {
            "description": "Camera rotate (revolve/orbit)",
            "type": "string",
            "enum": [
              "rotate"
            ]
          },
          {
            "description": "Camera zoom (increase or decrease distance to reference point center)",
            "type": "string",
            "enum": [
              "zoom"
            ]
          }
        ]
      },
      "CameraDragMove": {
        "description": "The response from the `CameraDragMove` command. Note this is an \"unreliable\" channel message, so this data may need more data like a \"sequence\"",
        "type": "object",
        "properties": {
          "settings": {
            "description": "Camera settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/CameraSettings"
              }
            ]
          }
        },
        "required": [
          "settings"
        ]
      },
      "CameraSettings": {
        "description": "Camera settings including position, center, fov etc",
        "type": "object",
        "properties": {
          "center": {
            "description": "Camera's look-at center (center-pos gives viewing vector)",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "fov_y": {
            "nullable": true,
            "description": "Camera's field-of-view angle (if ortho is false)",
            "type": "number",
            "format": "float"
          },
          "orientation": {
            "description": "The Camera's orientation (in the form of a quaternion)",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point4d"
              }
            ]
          },
          "ortho": {
            "description": "Whether or not the camera is in ortho mode",
            "type": "boolean"
          },
          "ortho_scale": {
            "nullable": true,
            "description": "The camera's ortho scale (derived from viewing distance if ortho is true)",
            "type": "number",
            "format": "float"
          },
          "pos": {
            "description": "Camera position (vantage)",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "up": {
            "description": "Camera's world-space up vector",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          }
        },
        "required": [
          "center",
          "orientation",
          "ortho",
          "pos",
          "up"
        ]
      },
      "CardDetails": {
        "description": "The card details of a payment method.",
        "type": "object",
        "properties": {
          "brand": {
            "description": "Card brand.\n\nCan be `amex`, `diners`, `discover`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
            "type": "string"
          },
          "checks": {
            "description": "Checks on Card address and CVC if provided.",
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodCardChecks"
              }
            ]
          },
          "country": {
            "description": "Two-letter ISO code representing the country of the card.",
            "type": "string"
          },
          "exp_month": {
            "description": "Two-digit number representing the card's expiration month.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "exp_year": {
            "description": "Four-digit number representing the card's expiration year.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular card number.",
            "type": "string"
          },
          "funding": {
            "description": "Card funding type.\n\nCan be `credit`, `debit`, `prepaid`, or `unknown`.",
            "type": "string"
          },
          "last4": {
            "description": "The last four digits of the card.",
            "type": "string"
          }
        }
      },
      "CenterOfMass": {
        "description": "The center of mass response.",
        "type": "object",
        "properties": {
          "center_of_mass": {
            "description": "The center of mass.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "output_unit": {
            "description": "The output unit for the center of mass.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitLength"
              }
            ]
          }
        },
        "required": [
          "center_of_mass",
          "output_unit"
        ]
      },
      "ClientMetrics": {
        "description": "ClientMetrics contains information regarding the state of the peer.",
        "type": "object",
        "properties": {
          "rtc_frames_decoded": {
            "description": "Counter of the number of WebRTC frames that the client has decoded during this session.",
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          },
          "rtc_frames_dropped": {
            "description": "Counter of the number of WebRTC frames the client has dropped during this session.",
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "rtc_frames_per_second": {
            "description": "Current number of frames being rendered per second. A good target is 60 frames per second, but it can fluctuate depending on network conditions.",
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          },
          "rtc_frames_received": {
            "description": "Counter of the number of WebRTC frames that the client has received during this session.",
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          },
          "rtc_freeze_count": {
            "description": "Number of times the WebRTC playback has frozen. This is usually due to network conditions.",
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "rtc_jitter_sec": {
            "description": "Amount of \"jitter\" in the WebRTC session. Network latency is the time it takes a packet to traverse the network. The amount that the latency varies is the jitter. Video latency is the time it takes to render a frame sent by the server (including network latency). A low jitter means the video latency can be reduced without impacting smooth playback. High jitter means clients will increase video latency to ensure smooth playback.",
            "type": "number",
            "format": "float"
          },
          "rtc_keyframes_decoded": {
            "description": "Number of \"key frames\" decoded in the underlying h.264 stream. A key frame is an expensive (bandwidth-wise) \"full image\" of the video frame. Data after the keyframe become -- effectively -- \"diff\" operations on that key frame. The Engine will only send a keyframe if required, which is an indication that some of the \"diffs\" have been lost, usually an indication of poor network conditions. We like this metric to understand times when the connection has had to recover.",
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "rtc_total_freezes_duration_sec": {
            "description": "Number of seconds of frozen video the user has been subjected to.",
            "type": "number",
            "format": "float"
          }
        },
        "required": [
          "rtc_frames_decoded",
          "rtc_frames_dropped",
          "rtc_frames_per_second",
          "rtc_frames_received",
          "rtc_freeze_count",
          "rtc_jitter_sec",
          "rtc_keyframes_decoded",
          "rtc_total_freezes_duration_sec"
        ]
      },
      "ClosePath": {
        "description": "The response from the `ClosePath` command.",
        "type": "object",
        "properties": {
          "face_id": {
            "description": "The UUID of the lone face of the resulting solid2D.",
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "face_id"
        ]
      },
      "Cluster": {
        "description": "Cluster information.",
        "type": "object",
        "properties": {
          "addr": {
            "nullable": true,
            "description": "The IP address of the cluster.",
            "type": "string"
          },
          "auth_timeout": {
            "description": "The auth timeout of the cluster.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "cluster_port": {
            "description": "The port of the cluster.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "description": "The name of the cluster.",
            "default": "",
            "type": "string"
          },
          "tls_timeout": {
            "description": "The TLS timeout for the cluster.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "urls": {
            "description": "The urls of the cluster.",
            "default": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CodeLanguage": {
        "description": "The language code is written in.\n\n<details><summary>JSON schema</summary>\n\n```json { \"description\": \"The language code is written in.\", \"oneOf\": [ { \"description\": \"The `go` programming language.\", \"type\": \"string\", \"enum\": [ \"go\" ] }, { \"description\": \"The `python` programming language.\", \"type\": \"string\", \"enum\": [ \"python\" ] }, { \"description\": \"The `node` programming language.\", \"type\": \"string\", \"enum\": [ \"node\" ] } ] } ``` </details>",
        "oneOf": [
          {
            "description": "The `go` programming language.",
            "type": "string",
            "enum": [
              "go"
            ]
          },
          {
            "description": "The `python` programming language.",
            "type": "string",
            "enum": [
              "python"
            ]
          },
          {
            "description": "The `node` programming language.",
            "type": "string",
            "enum": [
              "node"
            ]
          }
        ]
      },
      "CodeOutput": {
        "description": "Output of the code being executed.\n\n<details><summary>JSON schema</summary>\n\n```json { \"description\": \"Output of the code being executed.\", \"type\": \"object\", \"properties\": { \"output_files\": { \"description\": \"The contents of the files requested if they were passed.\", \"type\": \"array\", \"items\": { \"$ref\": \"#/components/schemas/OutputFile\" } }, \"stderr\": { \"description\": \"The stderr of the code.\", \"default\": \"\", \"type\": \"string\" }, \"stdout\": { \"description\": \"The stdout of the code.\", \"default\": \"\", \"type\": \"string\" } } } ``` </details>",
        "type": "object",
        "properties": {
          "output_files": {
            "description": "The contents of the files requested if they were passed.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutputFile"
            }
          },
          "stderr": {
            "description": "The stderr of the code.",
            "default": "",
            "type": "string"
          },
          "stdout": {
            "description": "The stdout of the code.",
            "default": "",
            "type": "string"
          }
        }
      },
      "Color": {
        "description": "An RGBA color",
        "type": "object",
        "properties": {
          "a": {
            "description": "Alpha",
            "type": "number",
            "format": "float"
          },
          "b": {
            "description": "Blue",
            "type": "number",
            "format": "float"
          },
          "g": {
            "description": "Green",
            "type": "number",
            "format": "float"
          },
          "r": {
            "description": "Red",
            "type": "number",
            "format": "float"
          }
        },
        "required": [
          "a",
          "b",
          "g",
          "r"
        ]
      },
      "Connection": {
        "description": "Metadata about a pub-sub connection.\n\nThis is mostly used for internal purposes and debugging.",
        "type": "object",
        "properties": {
          "auth_timeout": {
            "description": "The auth timeout of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "cluster": {
            "description": "Information about the cluster.",
            "default": {
              "addr": null,
              "auth_timeout": 0,
              "cluster_port": 0,
              "name": "",
              "tls_timeout": 0,
              "urls": []
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Cluster"
              }
            ]
          },
          "config_load_time": {
            "description": "The time the configuration was loaded.",
            "type": "string",
            "format": "date-time"
          },
          "connections": {
            "description": "The number of connections to the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "cores": {
            "description": "The CPU core usage of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "cpu": {
            "description": "The CPU usage of the server.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "gateway": {
            "description": "Information about the gateway.",
            "default": {
              "auth_timeout": 0,
              "host": "",
              "name": "",
              "port": 0,
              "tls_timeout": 0
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Gateway"
              }
            ]
          },
          "git_commit": {
            "description": "The git commit.",
            "default": "",
            "type": "string"
          },
          "go": {
            "description": "The go version.",
            "default": "",
            "type": "string"
          },
          "gomaxprocs": {
            "description": "`GOMAXPROCS` of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "host": {
            "description": "The host of the server.",
            "type": "string",
            "format": "ip"
          },
          "http_base_path": {
            "description": "The http base path of the server.",
            "default": "",
            "type": "string"
          },
          "http_host": {
            "description": "The http host of the server.",
            "default": "",
            "type": "string"
          },
          "http_port": {
            "description": "The http port of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "http_req_stats": {
            "description": "HTTP request statistics.",
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            }
          },
          "https_port": {
            "description": "The https port of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "in_bytes": {
            "description": "The count of inbound bytes for the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "in_msgs": {
            "description": "The number of inbound messages for the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "jetstream": {
            "description": "Jetstream information.",
            "default": {
              "config": {
                "domain": "",
                "max_memory": 0,
                "max_storage": 0,
                "store_dir": ""
              },
              "meta": {
                "cluster_size": 0,
                "leader": "",
                "name": ""
              },
              "stats": {
                "accounts": 0,
                "api": {
                  "errors": 0,
                  "inflight": 0,
                  "total": 0
                },
                "ha_assets": 0,
                "memory": 0,
                "reserved_memory": 0,
                "reserved_store": 0,
                "store": 0
              }
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Jetstream"
              }
            ]
          },
          "leaf": {
            "description": "Information about leaf nodes.",
            "default": {
              "auth_timeout": 0,
              "host": "",
              "port": 0,
              "tls_timeout": 0
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/LeafNode"
              }
            ]
          },
          "leafnodes": {
            "description": "The number of leaf nodes for the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "max_connections": {
            "description": "The max connections of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "max_control_line": {
            "description": "The max control line of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "max_payload": {
            "description": "The max payload of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "max_pending": {
            "description": "The max pending of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "mem": {
            "description": "The memory usage of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "now": {
            "description": "The time now.",
            "type": "string",
            "format": "date-time"
          },
          "out_bytes": {
            "description": "The count of outbound bytes for the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "out_msgs": {
            "description": "The number of outbound messages for the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "ping_interval": {
            "description": "The ping interval of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "ping_max": {
            "description": "The ping max of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "port": {
            "description": "The port of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "proto": {
            "description": "The protocol version.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "remotes": {
            "description": "The number of remotes for the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "routes": {
            "description": "The number of routes for the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "server_id": {
            "description": "The server ID.",
            "default": "",
            "type": "string"
          },
          "server_name": {
            "description": "The server name.",
            "default": "",
            "type": "string"
          },
          "slow_consumers": {
            "description": "The number of slow consumers for the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "start": {
            "description": "When the server was started.",
            "type": "string",
            "format": "date-time"
          },
          "subscriptions": {
            "description": "The number of subscriptions for the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "system_account": {
            "description": "The system account.",
            "default": "",
            "type": "string"
          },
          "tls_timeout": {
            "description": "The TLS timeout of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "total_connections": {
            "description": "The total number of connections to the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "uptime": {
            "description": "The uptime of the server.",
            "default": "",
            "type": "string"
          },
          "version": {
            "description": "The version of the service.",
            "default": "",
            "type": "string"
          },
          "write_deadline": {
            "description": "The write deadline of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "config_load_time",
          "host",
          "http_req_stats",
          "now",
          "start"
        ]
      },
      "CountryCode": {
        "description": "An ISO-3166 alpha-2 country code. Always uppercase.",
        "type": "string"
      },
      "Coupon": {
        "description": "The resource representing a Coupon.",
        "type": "object",
        "properties": {
          "amount_off": {
            "nullable": true,
            "title": "double",
            "description": "Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.",
            "type": "number",
            "format": "money-usd"
          },
          "deleted": {
            "description": "Always true for a deleted object.",
            "default": false,
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "metadata": {
            "description": "Set of key-value pairs.",
            "default": {},
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "nullable": true,
            "description": "Name of the coupon displayed to customers on, for instance invoices, or receipts.\n\nBy default the `id` is shown if `name` is not set.",
            "type": "string"
          },
          "percent_off": {
            "nullable": true,
            "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon.\n\nFor example, a coupon with percent_off of 50 will make a %s100 invoice %s50 instead.",
            "type": "number",
            "format": "double"
          }
        }
      },
      "CreatedAtSortMode": {
        "description": "Supported set of sort modes for scanning by created_at only.\n\nCurrently, we only support scanning in ascending order.",
        "oneOf": [
          {
            "description": "Sort in increasing order of \"created_at\".",
            "type": "string",
            "enum": [
              "created_at_ascending"
            ]
          },
          {
            "description": "Sort in decreasing order of \"created_at\".",
            "type": "string",
            "enum": [
              "created_at_descending"
            ]
          }
        ]
      },
      "Currency": {
        "description": "Currency is the list of supported currencies. Always lowercase.\n\nThis comes from the Stripe API docs: For more details see <https://support.stripe.com/questions/which-currencies-does-stripe-support>.",
        "type": "string"
      },
      "CurveGetControlPoints": {
        "description": "The response from the `CurveGetControlPoints` command.",
        "type": "object",
        "properties": {
          "control_points": {
            "description": "Control points in the curve.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Point3d"
            }
          }
        },
        "required": [
          "control_points"
        ]
      },
      "CurveGetEndPoints": {
        "description": "Endpoints of a curve",
        "type": "object",
        "properties": {
          "end": {
            "description": "End",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "start": {
            "description": "Start",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          }
        },
        "required": [
          "end",
          "start"
        ]
      },
      "CurveGetType": {
        "description": "The response from the `CurveGetType` command.",
        "type": "object",
        "properties": {
          "curve_type": {
            "description": "Curve type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CurveType"
              }
            ]
          }
        },
        "required": [
          "curve_type"
        ]
      },
      "CurveType": {
        "description": "The type of Curve (embedded within path)",
        "type": "string",
        "enum": [
          "line",
          "arc",
          "nurbs"
        ]
      },
      "Customer": {
        "description": "The resource representing a payment \"Customer\".",
        "type": "object",
        "properties": {
          "address": {
            "nullable": true,
            "description": "The customer's address.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressDetails"
              }
            ]
          },
          "balance": {
            "title": "double",
            "description": "Current balance, if any, being stored on the customer in the payments service.\n\nIf negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.",
            "default": 0.0,
            "type": "number",
            "format": "money-usd"
          },
          "created_at": {
            "description": "Time at which the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "description": "Three-letter ISO code for the currency the customer can be charged in for recurring billing purposes.",
            "default": "usd",
            "allOf": [
              {
                "$ref": "#/components/schemas/Currency"
              }
            ]
          },
          "delinquent": {
            "description": "When the customer's latest invoice is billed by charging automatically, `delinquent` is `true` if the invoice's latest charge failed.\n\nWhen the customer's latest invoice is billed by sending an invoice, `delinquent` is `true` if the invoice isn't paid by its due date.  If an invoice is marked uncollectible by dunning, `delinquent` doesn't get reset to `false`.",
            "default": false,
            "type": "boolean"
          },
          "email": {
            "description": "The customer's email address.",
            "type": "string",
            "format": "email"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "metadata": {
            "description": "Set of key-value pairs.",
            "default": {},
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "description": "The customer's full name or business name.",
            "type": "string"
          },
          "phone": {
            "title": "String",
            "description": "The customer's phone number.",
            "default": "",
            "type": "string",
            "format": "phone"
          }
        },
        "required": [
          "created_at"
        ]
      },
      "CustomerBalance": {
        "description": "A balance for a customer.\n\nThis holds information about the financial balance for the customer.",
        "type": "object",
        "properties": {
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the balance was created.",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "description": "The unique identifier for the balance.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "map_id": {
            "description": "The mapping id of the user or org.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "modeling_app_enterprise_price": {
            "nullable": true,
            "description": "The enterprise price for the Modeling App subscription, if they are on the enterprise plan.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionTierPrice"
              }
            ]
          },
          "monthly_credits_remaining": {
            "title": "double",
            "description": "The monthy credits remaining in the balance. This gets re-upped every month, but if the credits are not used for a month they do not carry over to the next month. It is a stable amount granted to the customer per month.",
            "type": "number",
            "format": "money-usd"
          },
          "pre_pay_cash_remaining": {
            "title": "double",
            "description": "The amount of pre-pay cash remaining in the balance. This number goes down as the customer uses their pre-paid credits. The reason we track this amount is if a customer ever wants to withdraw their pre-pay cash, we can use this amount to determine how much to give them. Say a customer has $100 in pre-paid cash, their bill is worth, $50 after subtracting any other credits (like monthly etc.) Their bill is $50, their pre-pay cash remaining will be subtracted by 50 to pay the bill and their `pre_pay_credits_remaining` will be subtracted by 50 to pay the bill. This way if they want to withdraw money after, they can only withdraw $50 since that is the amount of cash they have remaining.",
            "type": "number",
            "format": "money-usd"
          },
          "pre_pay_credits_remaining": {
            "title": "double",
            "description": "The amount of credits remaining in the balance. This is typically the amount of cash * some multiplier they get for pre-paying their account. This number lowers every time a bill is paid with the balance. This number increases every time a customer adds funds to their balance. This may be through a subscription or a one off payment.",
            "type": "number",
            "format": "money-usd"
          },
          "subscription_details": {
            "nullable": true,
            "description": "Details about the subscription.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ZooProductSubscriptions"
              }
            ]
          },
          "subscription_id": {
            "nullable": true,
            "description": "The subscription ID for the user.",
            "type": "string"
          },
          "total_due": {
            "title": "double",
            "description": "This includes any outstanding, draft, or open invoices and any pending invoice items. This does not include any credits the customer has on their account.",
            "type": "number",
            "format": "money-usd"
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the balance was last updated.",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "created_at",
          "id",
          "map_id",
          "monthly_credits_remaining",
          "pre_pay_cash_remaining",
          "pre_pay_credits_remaining",
          "total_due",
          "updated_at"
        ]
      },
      "CutType": {
        "description": "What kind of cut to do",
        "oneOf": [
          {
            "description": "Round off an edge.",
            "type": "string",
            "enum": [
              "fillet"
            ]
          },
          {
            "description": "Cut away an edge.",
            "type": "string",
            "enum": [
              "chamfer"
            ]
          }
        ]
      },
      "DefaultCameraFocusOn": {
        "description": "The response from the `DefaultCameraFocusOn` command.",
        "type": "object"
      },
      "DefaultCameraGetSettings": {
        "description": "The response from the `DefaultCameraGetSettings` command.",
        "type": "object",
        "properties": {
          "settings": {
            "description": "Camera settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/CameraSettings"
              }
            ]
          }
        },
        "required": [
          "settings"
        ]
      },
      "DefaultCameraZoom": {
        "description": "The response from the `DefaultCameraZoom` command.",
        "type": "object",
        "properties": {
          "settings": {
            "description": "Camera settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/CameraSettings"
              }
            ]
          }
        },
        "required": [
          "settings"
        ]
      },
      "Density": {
        "description": "The density response.",
        "type": "object",
        "properties": {
          "density": {
            "description": "The density.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output unit for the density.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitDensity"
              }
            ]
          }
        },
        "required": [
          "density",
          "output_unit"
        ]
      },
      "DerEncodedKeyPair": {
        "description": "The DER encoded key pair.",
        "type": "object",
        "properties": {
          "private_key": {
            "title": "String",
            "description": "The request signing private key (pem file).",
            "type": "string",
            "format": "byte"
          },
          "public_cert": {
            "title": "String",
            "description": "The request signing public certificate (pem file).",
            "type": "string",
            "format": "byte"
          }
        },
        "required": [
          "private_key",
          "public_cert"
        ]
      },
      "DeviceAccessTokenRequestForm": {
        "description": "The form for a device access token request.",
        "type": "object",
        "properties": {
          "client_id": {
            "description": "The client ID.",
            "type": "string",
            "format": "uuid"
          },
          "device_code": {
            "description": "The device code.",
            "type": "string",
            "format": "uuid"
          },
          "grant_type": {
            "description": "The grant type.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OAuth2GrantType"
              }
            ]
          }
        },
        "required": [
          "client_id",
          "device_code",
          "grant_type"
        ]
      },
      "DeviceAuthRequestForm": {
        "description": "The request parameters for the OAuth 2.0 Device Authorization Grant flow.",
        "type": "object",
        "properties": {
          "client_id": {
            "description": "The client ID.",
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "client_id"
        ]
      },
      "DeviceAuthVerifyParams": {
        "description": "The request parameters to verify the `user_code` for the OAuth 2.0 Device Authorization Grant.",
        "type": "object",
        "properties": {
          "user_code": {
            "description": "The user code.",
            "type": "string"
          }
        },
        "required": [
          "user_code"
        ]
      },
      "Direction": {
        "description": "Specifies the sign of a co-ordinate axis.",
        "oneOf": [
          {
            "description": "Increasing numbers.",
            "type": "string",
            "enum": [
              "positive"
            ]
          },
          {
            "description": "Decreasing numbers.",
            "type": "string",
            "enum": [
              "negative"
            ]
          }
        ]
      },
      "Discount": {
        "description": "The resource representing a Discount.",
        "type": "object",
        "properties": {
          "coupon": {
            "description": "The coupon that applied to create this discount.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Coupon"
              }
            ]
          }
        },
        "required": [
          "coupon"
        ]
      },
      "DiscountCode": {
        "description": "A discount code for a store.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The code for the discount.",
            "type": "string"
          },
          "expires_at": {
            "nullable": true,
            "description": "The date the discount code expires.",
            "type": "string",
            "format": "date-time"
          },
          "percent_off": {
            "description": "The percent off for the discount.",
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "required": [
          "code",
          "percent_off"
        ]
      },
      "DistanceType": {
        "description": "The type of distance Distances can vary depending on the objects used as input.",
        "oneOf": [
          {
            "description": "Euclidean Distance.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "euclidean"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "The distance between objects along the specified axis",
            "type": "object",
            "properties": {
              "axis": {
                "description": "Global axis",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GlobalAxis"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "on_axis"
                ]
              }
            },
            "required": [
              "axis",
              "type"
            ]
          }
        ]
      },
      "EmailAuthenticationForm": {
        "description": "The body of the form for email authentication.",
        "type": "object",
        "properties": {
          "callback_url": {
            "nullable": true,
            "description": "The URL to redirect back to after we have authenticated.",
            "type": "string",
            "format": "uri"
          },
          "email": {
            "description": "The user's email.",
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "email"
        ]
      },
      "EntityCircularPattern": {
        "description": "The response from the `EntityCircularPattern` command.",
        "type": "object",
        "properties": {
          "entity_ids": {
            "description": "The UUIDs of the entities that were created.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "entity_ids"
        ]
      },
      "EntityGetAllChildUuids": {
        "description": "The response from the `EntityGetAllChildUuids` command.",
        "type": "object",
        "properties": {
          "entity_ids": {
            "description": "The UUIDs of the child entities.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "entity_ids"
        ]
      },
      "EntityGetChildUuid": {
        "description": "The response from the `EntityGetChildUuid` command.",
        "type": "object",
        "properties": {
          "entity_id": {
            "description": "The UUID of the child entity.",
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "entity_id"
        ]
      },
      "EntityGetDistance": {
        "description": "The response from the `EntitiesGetDistance` command.",
        "type": "object",
        "properties": {
          "max_distance": {
            "description": "The maximum distance between the input entities.",
            "allOf": [
              {
                "$ref": "#/components/schemas/LengthUnit"
              }
            ]
          },
          "min_distance": {
            "description": "The minimum distance between the input entities.",
            "allOf": [
              {
                "$ref": "#/components/schemas/LengthUnit"
              }
            ]
          }
        },
        "required": [
          "max_distance",
          "min_distance"
        ]
      },
      "EntityGetNumChildren": {
        "description": "The response from the `EntityGetNumChildren` command.",
        "type": "object",
        "properties": {
          "num": {
            "description": "The number of children the entity has.",
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "required": [
          "num"
        ]
      },
      "EntityGetParentId": {
        "description": "The response from the `EntityGetParentId` command.",
        "type": "object",
        "properties": {
          "entity_id": {
            "description": "The UUID of the parent entity.",
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "entity_id"
        ]
      },
      "EntityGetSketchPaths": {
        "description": "The response from the `EntityGetSketchPaths` command.",
        "type": "object",
        "properties": {
          "entity_ids": {
            "description": "The UUIDs of the sketch paths.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "entity_ids"
        ]
      },
      "EntityLinearPattern": {
        "description": "The response from the `EntityLinearPattern` command.",
        "type": "object",
        "properties": {
          "entity_ids": {
            "description": "The UUIDs of the entities that were created.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "entity_ids"
        ]
      },
      "EntityLinearPatternTransform": {
        "description": "The response from the `EntityLinearPatternTransform` command.",
        "type": "object",
        "properties": {
          "entity_ids": {
            "description": "The UUIDs of the entities that were created.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "entity_ids"
        ]
      },
      "EntityType": {
        "description": "The type of entity",
        "type": "string",
        "enum": [
          "entity",
          "object",
          "path",
          "curve",
          "solid2d",
          "solid3d",
          "edge",
          "face",
          "plane",
          "vertex"
        ]
      },
      "Environment": {
        "description": "The environment the server is running in.",
        "oneOf": [
          {
            "description": "The development environment. This is for running locally.",
            "type": "string",
            "enum": [
              "DEVELOPMENT"
            ]
          },
          {
            "description": "The preview environment. This is when PRs are created and a service is deployed for testing.",
            "type": "string",
            "enum": [
              "PREVIEW"
            ]
          },
          {
            "description": "The production environment.",
            "type": "string",
            "enum": [
              "PRODUCTION"
            ]
          }
        ]
      },
      "Error": {
        "description": "Error information from a response.",
        "type": "object",
        "properties": {
          "error_code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "request_id": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "request_id"
        ]
      },
      "ErrorCode": {
        "description": "The type of error sent by the KittyCAD API.",
        "oneOf": [
          {
            "description": "Graphics engine failed to complete request, consider retrying",
            "type": "string",
            "enum": [
              "internal_engine"
            ]
          },
          {
            "description": "API failed to complete request, consider retrying",
            "type": "string",
            "enum": [
              "internal_api"
            ]
          },
          {
            "description": "User requested something geometrically or graphically impossible. Don't retry this request, as it's inherently impossible. Instead, read the error message and change your request.",
            "type": "string",
            "enum": [
              "bad_request"
            ]
          },
          {
            "description": "Auth token is missing from the request",
            "type": "string",
            "enum": [
              "auth_token_missing"
            ]
          },
          {
            "description": "Auth token is invalid in some way (expired, incorrect format, etc)",
            "type": "string",
            "enum": [
              "auth_token_invalid"
            ]
          },
          {
            "description": "Client sent invalid JSON.",
            "type": "string",
            "enum": [
              "invalid_json"
            ]
          },
          {
            "description": "Client sent invalid BSON.",
            "type": "string",
            "enum": [
              "invalid_bson"
            ]
          },
          {
            "description": "Client sent a message which is not accepted over this protocol.",
            "type": "string",
            "enum": [
              "wrong_protocol"
            ]
          },
          {
            "description": "Problem sending data between client and KittyCAD API.",
            "type": "string",
            "enum": [
              "connection_problem"
            ]
          },
          {
            "description": "Client sent a Websocket message type which the KittyCAD API does not handle.",
            "type": "string",
            "enum": [
              "message_type_not_accepted"
            ]
          },
          {
            "description": "Client sent a Websocket message intended for WebRTC but it was configured as a WebRTC connection.",
            "type": "string",
            "enum": [
              "message_type_not_accepted_for_web_r_t_c"
            ]
          }
        ]
      },
      "Event": {
        "description": "Telemetry data we are collecting",
        "oneOf": [
          {
            "description": "An event related to modeling app files",
            "type": "object",
            "properties": {
              "attachment_uri": {
                "nullable": true,
                "description": "Attachment URI for where the attachment is stored.",
                "type": "string"
              },
              "created_at": {
                "description": "Time this event was created.",
                "type": "string",
                "format": "date-time"
              },
              "event_type": {
                "description": "The specific event type from the modeling app.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ModelingAppEventType"
                  }
                ]
              },
              "last_compiled_at": {
                "nullable": true,
                "description": "Time the associated attachment was last compiled.",
                "type": "string",
                "format": "date-time"
              },
              "project_description": {
                "nullable": true,
                "description": "Project descriptino as given by the user.",
                "type": "string"
              },
              "project_name": {
                "description": "Project name as given by the user.",
                "type": "string"
              },
              "source_id": {
                "description": "The source app for this event, uuid that is unique to the app.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "modeling_app_event"
                ]
              },
              "user_id": {
                "description": "An anonymous user id generated client-side.",
                "type": "string"
              }
            },
            "required": [
              "created_at",
              "event_type",
              "project_name",
              "source_id",
              "type",
              "user_id"
            ]
          }
        ]
      },
      "Export": {
        "description": "The response from the `Export` endpoint.",
        "type": "object",
        "properties": {
          "files": {
            "description": "The files that were exported.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExportFile"
            }
          }
        },
        "required": [
          "files"
        ]
      },
      "ExportFile": {
        "description": "A file to be exported to the client.",
        "type": "object",
        "properties": {
          "contents": {
            "title": "String",
            "description": "The contents of the file, base64 encoded.",
            "type": "string",
            "format": "byte"
          },
          "name": {
            "description": "The name of the file.",
            "type": "string"
          }
        },
        "required": [
          "contents",
          "name"
        ]
      },
      "ExtendedUser": {
        "description": "Extended user information.\n\nThis is mostly used for internal purposes. It returns a mapping of the user's information, including that of our third party services we use for users: MailChimp | Stripe",
        "type": "object",
        "properties": {
          "block": {
            "nullable": true,
            "description": "If the user should be blocked and the reason why.",
            "allOf": [
              {
                "$ref": "#/components/schemas/BlockReason"
              }
            ]
          },
          "can_train_on_data": {
            "description": "If we can train on the user's data. If the user is a member of an organization, the organization's setting will override this.",
            "default": false,
            "type": "boolean"
          },
          "company": {
            "description": "The user's company.",
            "type": "string"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the user was created.",
            "type": "string",
            "format": "date-time"
          },
          "discord": {
            "description": "The user's Discord handle.",
            "type": "string"
          },
          "email": {
            "description": "The email address of the user.",
            "type": "string",
            "format": "email"
          },
          "email_verified": {
            "nullable": true,
            "title": "DateTime",
            "description": "The date and time the email address was verified.",
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "description": "The user's first name.",
            "type": "string"
          },
          "front_id": {
            "nullable": true,
            "description": "The user's Front ID. This is mostly used for internal mapping.",
            "type": "string"
          },
          "github": {
            "description": "The user's GitHub handle.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the user.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "image": {
            "title": "String",
            "description": "The image avatar for the user. This is a URL.",
            "type": "string",
            "format": "uri"
          },
          "is_service_account": {
            "description": "If the user is tied to a service account.",
            "default": false,
            "type": "boolean"
          },
          "last_name": {
            "description": "The user's last name.",
            "type": "string"
          },
          "mailchimp_id": {
            "nullable": true,
            "description": "The user's MailChimp ID. This is mostly used for internal mapping.",
            "type": "string"
          },
          "name": {
            "description": "The name of the user. This is auto populated at first from the authentication provider (if there was a name). It can be updated by the user by updating their `first_name` and `last_name` fields.",
            "type": "string"
          },
          "phone": {
            "title": "String",
            "description": "The user's phone number.",
            "default": "",
            "type": "string",
            "format": "phone"
          },
          "stripe_id": {
            "nullable": true,
            "description": "The user's Stripe ID. This is mostly used for internal mapping.",
            "type": "string"
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the user was last updated.",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "created_at",
          "id",
          "image",
          "updated_at"
        ]
      },
      "ExtendedUserResultsPage": {
        "description": "A single page of results",
        "type": "object",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedUser"
            }
          },
          "next_page": {
            "nullable": true,
            "description": "token used to fetch the next page of results (if any)",
            "type": "string"
          }
        },
        "required": [
          "items"
        ]
      },
      "ExtrusionFaceCapType": {
        "description": "Possible types of faces which can be extruded from a 3D solid.",
        "oneOf": [
          {
            "description": "Uncapped.",
            "type": "string",
            "enum": [
              "none"
            ]
          },
          {
            "description": "Capped on top.",
            "type": "string",
            "enum": [
              "top"
            ]
          },
          {
            "description": "Capped below.",
            "type": "string",
            "enum": [
              "bottom"
            ]
          }
        ]
      },
      "ExtrusionFaceInfo": {
        "description": "Extrusion face info struct (useful for maintaining mappings between source path segment ids and extrusion faces)",
        "type": "object",
        "properties": {
          "cap": {
            "description": "Whether or not this extrusion face is a top/bottom cap face or not. Note that top/bottom cap faces will not have associated curve IDs.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtrusionFaceCapType"
              }
            ]
          },
          "curve_id": {
            "nullable": true,
            "description": "Path component (curve) UUID.",
            "type": "string",
            "format": "uuid"
          },
          "face_id": {
            "nullable": true,
            "description": "Face uuid.",
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "cap"
        ]
      },
      "FaceGetCenter": {
        "description": "The 3D center of mass on the surface",
        "type": "object",
        "properties": {
          "pos": {
            "description": "The 3D position on the surface center of mass",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          }
        },
        "required": [
          "pos"
        ]
      },
      "FaceGetGradient": {
        "description": "The gradient (dFdu, dFdv) + normal vector on a brep face",
        "type": "object",
        "properties": {
          "df_du": {
            "description": "dFdu",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "df_dv": {
            "description": "dFdv",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "normal": {
            "description": "Normal (||dFdu x dFdv||)",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          }
        },
        "required": [
          "df_du",
          "df_dv",
          "normal"
        ]
      },
      "FaceGetPosition": {
        "description": "The 3D position on the surface that was evaluated",
        "type": "object",
        "properties": {
          "pos": {
            "description": "The 3D position on the surface that was evaluated",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          }
        },
        "required": [
          "pos"
        ]
      },
      "FaceIsPlanar": {
        "description": "Surface-local planar axes (if available)",
        "type": "object",
        "properties": {
          "origin": {
            "nullable": true,
            "description": "plane's origin",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "x_axis": {
            "nullable": true,
            "description": "plane's local x-axis",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "y_axis": {
            "nullable": true,
            "description": "plane's local y-axis",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "z_axis": {
            "nullable": true,
            "description": "plane's local z-axis (normal)",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          }
        }
      },
      "FailureWebSocketResponse": {
        "description": "Unsuccessful Websocket response.",
        "type": "object",
        "properties": {
          "errors": {
            "description": "The errors that occurred.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "request_id": {
            "nullable": true,
            "description": "Which request this is a response to. If the request was a modeling command, this is the modeling command ID. If no request ID was sent, this will be null.",
            "type": "string",
            "format": "uuid"
          },
          "success": {
            "description": "Always false",
            "type": "boolean"
          }
        },
        "required": [
          "errors",
          "success"
        ]
      },
      "FbxStorage": {
        "description": "Describes the storage format of an FBX file.",
        "oneOf": [
          {
            "description": "ASCII FBX encoding.",
            "type": "string",
            "enum": [
              "ascii"
            ]
          },
          {
            "description": "Binary FBX encoding.",
            "type": "string",
            "enum": [
              "binary"
            ]
          }
        ]
      },
      "FileCenterOfMass": {
        "description": "A file center of mass result.",
        "type": "object",
        "properties": {
          "center_of_mass": {
            "nullable": true,
            "description": "The resulting center of mass.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "output_unit": {
            "description": "The output unit for the center of mass.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitLength"
              }
            ]
          },
          "src_format": {
            "description": "The source format of the file.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileImportFormat"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "output_unit",
          "src_format",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "FileConversion": {
        "description": "A file conversion.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "output_format": {
            "description": "The output format of the file conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileExportFormat"
              }
            ]
          },
          "output_format_options": {
            "nullable": true,
            "description": "The output format options of the file conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OutputFormat"
              }
            ]
          },
          "outputs": {
            "description": "The converted files (if multiple file conversion), if completed, base64 encoded. The key of the map is the path of the output file.",
            "type": "object",
            "additionalProperties": {
              "title": "String",
              "type": "string",
              "format": "byte"
            }
          },
          "src_format": {
            "description": "The source format of the file conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileImportFormat"
              }
            ]
          },
          "src_format_options": {
            "nullable": true,
            "description": "The source format options of the file conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/InputFormat"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "output_format",
          "src_format",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "FileDensity": {
        "description": "A file density result.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "density": {
            "nullable": true,
            "description": "The resulting density.",
            "type": "number",
            "format": "double"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "material_mass": {
            "description": "The material mass as denoted by the user.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "material_mass_unit": {
            "description": "The material mass unit.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitMass"
              }
            ]
          },
          "output_unit": {
            "description": "The output unit for the density.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitDensity"
              }
            ]
          },
          "src_format": {
            "description": "The source format of the file.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileImportFormat"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "material_mass_unit",
          "output_unit",
          "src_format",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "FileExportFormat": {
        "description": "The valid types of output file formats.",
        "oneOf": [
          {
            "description": "Autodesk Filmbox (FBX) format. <https://en.wikipedia.org/wiki/FBX>",
            "type": "string",
            "enum": [
              "fbx"
            ]
          },
          {
            "description": "Binary glTF 2.0.\n\nThis is a single binary with .glb extension.\n\nThis is better if you want a compressed format as opposed to the human readable glTF that lacks compression.",
            "type": "string",
            "enum": [
              "glb"
            ]
          },
          {
            "description": "glTF 2.0. Embedded glTF 2.0 (pretty printed).\n\nSingle JSON file with .gltf extension binary data encoded as base64 data URIs.\n\nThe JSON contents are pretty printed.\n\nIt is human readable, single file, and you can view the diff easily in a git commit.",
            "type": "string",
            "enum": [
              "gltf"
            ]
          },
          {
            "description": "The OBJ file format. <https://en.wikipedia.org/wiki/Wavefront_.obj_file> It may or may not have an an attached material (mtl // mtllib) within the file, but we interact with it as if it does not.",
            "type": "string",
            "enum": [
              "obj"
            ]
          },
          {
            "description": "The PLY file format. <https://en.wikipedia.org/wiki/PLY_(file_format)>",
            "type": "string",
            "enum": [
              "ply"
            ]
          },
          {
            "description": "The STEP file format. <https://en.wikipedia.org/wiki/ISO_10303-21>",
            "type": "string",
            "enum": [
              "step"
            ]
          },
          {
            "description": "The STL file format. <https://en.wikipedia.org/wiki/STL_(file_format)>",
            "type": "string",
            "enum": [
              "stl"
            ]
          }
        ]
      },
      "FileImportFormat": {
        "description": "The valid types of source file formats.",
        "oneOf": [
          {
            "description": "Autodesk Filmbox (FBX) format. <https://en.wikipedia.org/wiki/FBX>",
            "type": "string",
            "enum": [
              "fbx"
            ]
          },
          {
            "description": "glTF 2.0.",
            "type": "string",
            "enum": [
              "gltf"
            ]
          },
          {
            "description": "The OBJ file format. <https://en.wikipedia.org/wiki/Wavefront_.obj_file> It may or may not have an an attached material (mtl // mtllib) within the file, but we interact with it as if it does not.",
            "type": "string",
            "enum": [
              "obj"
            ]
          },
          {
            "description": "The PLY file format. <https://en.wikipedia.org/wiki/PLY_(file_format)>",
            "type": "string",
            "enum": [
              "ply"
            ]
          },
          {
            "description": "SolidWorks part (SLDPRT) format.",
            "type": "string",
            "enum": [
              "sldprt"
            ]
          },
          {
            "description": "The STEP file format. <https://en.wikipedia.org/wiki/ISO_10303-21>",
            "type": "string",
            "enum": [
              "step"
            ]
          },
          {
            "description": "The STL file format. <https://en.wikipedia.org/wiki/STL_(file_format)>",
            "type": "string",
            "enum": [
              "stl"
            ]
          }
        ]
      },
      "FileMass": {
        "description": "A file mass result.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "mass": {
            "nullable": true,
            "description": "The resulting mass.",
            "type": "number",
            "format": "double"
          },
          "material_density": {
            "description": "The material density as denoted by the user.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "material_density_unit": {
            "description": "The material density unit.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitDensity"
              }
            ]
          },
          "output_unit": {
            "description": "The output unit for the mass.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitMass"
              }
            ]
          },
          "src_format": {
            "description": "The source format of the file.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileImportFormat"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "material_density_unit",
          "output_unit",
          "src_format",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "FileSurfaceArea": {
        "description": "A file surface area result.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "output_unit": {
            "description": "The output unit for the surface area.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitArea"
              }
            ]
          },
          "src_format": {
            "description": "The source format of the file.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileImportFormat"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "surface_area": {
            "nullable": true,
            "description": "The resulting surface area.",
            "type": "number",
            "format": "double"
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "output_unit",
          "src_format",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "FileSystemMetadata": {
        "description": "Metadata about our file system.\n\nThis is mostly used for internal purposes and debugging.",
        "type": "object",
        "properties": {
          "ok": {
            "description": "If the file system passed a sanity check.",
            "type": "boolean"
          }
        },
        "required": [
          "ok"
        ]
      },
      "FileVolume": {
        "description": "A file volume result.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "output_unit": {
            "description": "The output unit for the volume.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitVolume"
              }
            ]
          },
          "src_format": {
            "description": "The source format of the file.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileImportFormat"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "volume": {
            "nullable": true,
            "description": "The resulting volume.",
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "created_at",
          "id",
          "output_unit",
          "src_format",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "Gateway": {
        "description": "Gateway information.",
        "type": "object",
        "properties": {
          "auth_timeout": {
            "description": "The auth timeout of the gateway.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "host": {
            "description": "The host of the gateway.",
            "default": "",
            "type": "string"
          },
          "name": {
            "description": "The name of the gateway.",
            "default": "",
            "type": "string"
          },
          "port": {
            "description": "The port of the gateway.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "tls_timeout": {
            "description": "The TLS timeout for the gateway.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetEntityType": {
        "description": "The response from the `GetEntityType` command.",
        "type": "object",
        "properties": {
          "entity_type": {
            "description": "The type of the entity.",
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityType"
              }
            ]
          }
        },
        "required": [
          "entity_type"
        ]
      },
      "GetNumObjects": {
        "description": "The response from the `GetNumObjects` command.",
        "type": "object",
        "properties": {
          "num_objects": {
            "description": "The number of objects in the scene.",
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "required": [
          "num_objects"
        ]
      },
      "GetSketchModePlane": {
        "description": "The plane for sketch mode.",
        "type": "object",
        "properties": {
          "origin": {
            "description": "The origin.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "x_axis": {
            "description": "The x axis.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "y_axis": {
            "description": "The y axis.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "z_axis": {
            "description": "The z axis (normal).",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          }
        },
        "required": [
          "origin",
          "x_axis",
          "y_axis",
          "z_axis"
        ]
      },
      "GlobalAxis": {
        "description": "The global axes.",
        "oneOf": [
          {
            "description": "The X axis",
            "type": "string",
            "enum": [
              "x"
            ]
          },
          {
            "description": "The Y axis",
            "type": "string",
            "enum": [
              "y"
            ]
          },
          {
            "description": "The Z axis",
            "type": "string",
            "enum": [
              "z"
            ]
          }
        ]
      },
      "GltfPresentation": {
        "description": "Describes the presentation style of the glTF JSON.",
        "oneOf": [
          {
            "description": "Condense the JSON into the smallest possible size.",
            "type": "string",
            "enum": [
              "compact"
            ]
          },
          {
            "description": "Expand the JSON into a more human readable format.\n\nThis is the default setting.",
            "type": "string",
            "enum": [
              "pretty"
            ]
          }
        ]
      },
      "GltfStorage": {
        "description": "Describes the storage format of a glTF 2.0 scene.",
        "oneOf": [
          {
            "description": "Binary glTF 2.0.\n\nThis is a single binary with .glb extension.",
            "type": "string",
            "enum": [
              "binary"
            ]
          },
          {
            "description": "Standard glTF 2.0.\n\nThis is a JSON file with .gltf extension paired with a separate binary blob file with .bin extension.",
            "type": "string",
            "enum": [
              "standard"
            ]
          },
          {
            "description": "Embedded glTF 2.0.\n\nSingle JSON file with .gltf extension binary data encoded as base64 data URIs.\n\nThis is the default setting.",
            "type": "string",
            "enum": [
              "embedded"
            ]
          }
        ]
      },
      "HighlightSetEntity": {
        "description": "The response from the `HighlightSetEntity` command.",
        "type": "object",
        "properties": {
          "entity_id": {
            "nullable": true,
            "description": "The UUID of the entity that was highlighted.",
            "type": "string",
            "format": "uuid"
          },
          "sequence": {
            "nullable": true,
            "description": "If the client sent a sequence ID with its request, the backend sends it back.",
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        }
      },
      "IceServer": {
        "description": "Representation of an ICE server used for STUN/TURN Used to initiate WebRTC connections based on <https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer>",
        "type": "object",
        "properties": {
          "credential": {
            "nullable": true,
            "description": "Credentials for a given TURN server.",
            "type": "string"
          },
          "urls": {
            "description": "URLs for a given STUN/TURN server. IceServer urls can either be a string or an array of strings But, we choose to always convert to an array of strings for consistency",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "username": {
            "nullable": true,
            "description": "Username for a given TURN server.",
            "type": "string"
          }
        },
        "required": [
          "urls"
        ]
      },
      "IdpMetadataSource": {
        "description": "The source of an identity provider metadata descriptor.",
        "oneOf": [
          {
            "description": "A URL to the identity provider metadata descriptor.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "url"
                ]
              },
              "url": {
                "title": "String",
                "description": "The URL of the identity provider metadata descriptor.",
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "type",
              "url"
            ]
          },
          {
            "description": "A base64 encoded XML document containing the identity provider metadata descriptor.",
            "type": "object",
            "properties": {
              "data": {
                "title": "String",
                "description": "The base64 encoded XML document containing the identity provider metadata descriptor.",
                "type": "string",
                "format": "byte"
              },
              "type": {
                "type": "string",
                "enum": [
                  "base64_encoded_xml"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          }
        ]
      },
      "ImageFormat": {
        "description": "Enum containing the variety of image formats snapshots may be exported to.",
        "oneOf": [
          {
            "description": ".png format",
            "type": "string",
            "enum": [
              "png"
            ]
          },
          {
            "description": ".jpeg format",
            "type": "string",
            "enum": [
              "jpeg"
            ]
          }
        ]
      },
      "ImportFile": {
        "description": "File to import into the current model. If you are sending binary data for a file, be sure to send the WebSocketRequest as binary/bson, not text/json.",
        "type": "object",
        "properties": {
          "data": {
            "description": "The raw bytes of the file",
            "type": "array",
            "items": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0
            }
          },
          "path": {
            "description": "The file's full path, including file extension.",
            "type": "string"
          }
        },
        "required": [
          "data",
          "path"
        ]
      },
      "ImportFiles": {
        "description": "Data from importing the files",
        "type": "object",
        "properties": {
          "object_id": {
            "description": "ID of the imported 3D models within the scene.",
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "object_id"
        ]
      },
      "ImportedGeometry": {
        "description": "Data from importing the files",
        "type": "object",
        "properties": {
          "id": {
            "description": "ID of the imported 3D models within the scene.",
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "description": "The original file paths that held the geometry.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "value"
        ]
      },
      "InputFormat": {
        "description": "Input format specifier.",
        "oneOf": [
          {
            "description": "Autodesk Filmbox (FBX) format.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "fbx"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Binary glTF 2.0. We refer to this as glTF since that is how our customers refer to it, but this can also import binary glTF (glb).",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gltf"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Wavefront OBJ format.",
            "type": "object",
            "properties": {
              "coords": {
                "description": "Co-ordinate system of input data.\n\nDefaults to the [KittyCAD co-ordinate system].\n\n[KittyCAD co-ordinate system]: ../coord/constant.KITTYCAD.html",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/System"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "obj"
                ]
              },
              "units": {
                "description": "The units of the input data. This is very important for correct scaling and when calculating physics properties like mass, etc.\n\nDefaults to meters.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              }
            },
            "required": [
              "coords",
              "type",
              "units"
            ]
          },
          {
            "description": "The PLY Polygon File Format.",
            "type": "object",
            "properties": {
              "coords": {
                "description": "Co-ordinate system of input data.\n\nDefaults to the [KittyCAD co-ordinate system].\n\n[KittyCAD co-ordinate system]: ../coord/constant.KITTYCAD.html",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/System"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "ply"
                ]
              },
              "units": {
                "description": "The units of the input data. This is very important for correct scaling and when calculating physics properties like mass, etc.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              }
            },
            "required": [
              "coords",
              "type",
              "units"
            ]
          },
          {
            "description": "SolidWorks part (SLDPRT) format.",
            "type": "object",
            "properties": {
              "split_closed_faces": {
                "description": "Splits all closed faces into two open faces.\n\nDefaults to `false` but is implicitly `true` when importing into the engine.",
                "default": false,
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "enum": [
                  "sldprt"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "ISO 10303-21 (STEP) format.",
            "type": "object",
            "properties": {
              "split_closed_faces": {
                "description": "Splits all closed faces into two open faces.\n\nDefaults to `false` but is implicitly `true` when importing into the engine.",
                "default": false,
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "enum": [
                  "step"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "*ST**ereo**L**ithography format.",
            "type": "object",
            "properties": {
              "coords": {
                "description": "Co-ordinate system of input data.\n\nDefaults to the [KittyCAD co-ordinate system].\n\n[KittyCAD co-ordinate system]: ../coord/constant.KITTYCAD.html",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/System"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "stl"
                ]
              },
              "units": {
                "description": "The units of the input data. This is very important for correct scaling and when calculating physics properties like mass, etc.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              }
            },
            "required": [
              "coords",
              "type",
              "units"
            ]
          }
        ]
      },
      "Invoice": {
        "description": "An invoice.",
        "type": "object",
        "properties": {
          "amount_due": {
            "title": "double",
            "description": "Final amount due at this time for this invoice.\n\nIf the invoice's total is smaller than the minimum charge amount, for example, or if there is account credit that can be applied to the invoice, the `amount_due` may be 0. If there is a positive `starting_balance` for the invoice (the customer owes money), the `amount_due` will also take that into account. The charge that gets generated for the invoice will be for the amount specified in `amount_due`.",
            "default": 0.0,
            "type": "number",
            "format": "money-usd"
          },
          "amount_paid": {
            "title": "double",
            "description": "The amount, in USD, that was paid.",
            "default": 0.0,
            "type": "number",
            "format": "money-usd"
          },
          "amount_remaining": {
            "title": "double",
            "description": "The amount remaining, in USD, that is due.",
            "default": 0.0,
            "type": "number",
            "format": "money-usd"
          },
          "attempt_count": {
            "description": "Number of payment attempts made for this invoice, from the perspective of the payment retry schedule.\n\nAny payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count. In other words, manual payment attempts after the first attempt do not affect the retry schedule.",
            "default": 0,
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          },
          "attempted": {
            "description": "Whether an attempt has been made to pay the invoice.\n\nAn invoice is not attempted until 1 hour after the `invoice.created` webhook, for example, so you might not want to display that invoice as unpaid to your users.",
            "default": false,
            "type": "boolean"
          },
          "created_at": {
            "description": "Time at which the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.",
            "default": "usd",
            "allOf": [
              {
                "$ref": "#/components/schemas/Currency"
              }
            ]
          },
          "customer_email": {
            "description": "The email address for the customer. Until the invoice is finalized, this field will equal customer.email. Once the invoice is finalized, this field will no longer be updated.",
            "type": "string",
            "format": "email"
          },
          "customer_id": {
            "description": "Customer ID. The unique identifier for the customer this invoice belongs to. This is the customer ID in the payments service, not our database customer ID.",
            "type": "string"
          },
          "default_payment_method": {
            "description": "Default payment method.",
            "type": "string"
          },
          "description": {
            "description": "Description of the invoice.",
            "type": "string"
          },
          "discounts": {
            "description": "The discounts applied to the invoice. This is an array of discount objects.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Discount"
            }
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "lines": {
            "description": "The individual line items that make up the invoice.\n\n`lines` is sorted as follows: invoice items in reverse chronological order, followed by the subscription, if any.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItem"
            }
          },
          "metadata": {
            "description": "Set of key-value pairs.",
            "default": {},
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "number": {
            "description": "A unique, identifying string that appears on emails sent to the customer for this invoice.",
            "type": "string"
          },
          "paid": {
            "description": "Whether payment was successfully collected for this invoice.\n\nAn invoice can be paid (most commonly) with a charge or with credit from the customer's account balance.",
            "default": false,
            "type": "boolean"
          },
          "pdf": {
            "nullable": true,
            "description": "The link to download the PDF for the invoice.",
            "type": "string",
            "format": "uri"
          },
          "receipt_number": {
            "description": "This is the transaction number that appears on email receipts sent for this invoice.",
            "type": "string"
          },
          "statement_descriptor": {
            "description": "Extra information about an invoice for the customer's credit card statement.",
            "type": "string"
          },
          "status": {
            "nullable": true,
            "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`.",
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceStatus"
              }
            ]
          },
          "subtotal": {
            "title": "double",
            "description": "Total of all subscriptions, invoice items, and prorations on the invoice before any invoice level discount or tax is applied.\n\nItem discounts are already incorporated.",
            "default": 0.0,
            "type": "number",
            "format": "money-usd"
          },
          "tax": {
            "title": "double",
            "description": "The amount of tax on this invoice.\n\nThis is the sum of all the tax amounts on this invoice.",
            "default": 0.0,
            "type": "number",
            "format": "money-usd"
          },
          "total": {
            "title": "double",
            "description": "Total after discounts and taxes.",
            "default": 0.0,
            "type": "number",
            "format": "money-usd"
          },
          "url": {
            "nullable": true,
            "description": "The URL for the hosted invoice page, which allows customers to view and pay an invoice.",
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "created_at"
        ]
      },
      "InvoiceLineItem": {
        "description": "An invoice line item.",
        "type": "object",
        "properties": {
          "amount": {
            "title": "double",
            "description": "The amount, in USD.",
            "default": 0.0,
            "type": "number",
            "format": "money-usd"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.",
            "default": "usd",
            "allOf": [
              {
                "$ref": "#/components/schemas/Currency"
              }
            ]
          },
          "description": {
            "description": "The description.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "invoice_item": {
            "description": "The ID of the invoice item associated with this line item if any.",
            "type": "string"
          },
          "metadata": {
            "description": "Set of key-value pairs.",
            "default": {},
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "InvoiceStatus": {
        "description": "An enum representing the possible values of an `Invoice`'s `status` field.",
        "oneOf": [
          {
            "description": "Draft.",
            "type": "string",
            "enum": [
              "draft"
            ]
          },
          {
            "description": "Open.",
            "type": "string",
            "enum": [
              "open"
            ]
          },
          {
            "description": "Paid.",
            "type": "string",
            "enum": [
              "paid"
            ]
          },
          {
            "description": "Uncollectible.",
            "type": "string",
            "enum": [
              "uncollectible"
            ]
          },
          {
            "description": "Void.",
            "type": "string",
            "enum": [
              "void"
            ]
          }
        ]
      },
      "IpAddrInfo": {
        "description": "Information about an ip address. Represents geographical and network-related information.",
        "type": "object",
        "properties": {
          "asn": {
            "nullable": true,
            "description": "Autonomous System Number.",
            "type": "integer",
            "format": "int64"
          },
          "city": {
            "nullable": true,
            "description": "City name.",
            "type": "string"
          },
          "continent_code": {
            "nullable": true,
            "description": "Continent code (e.g., \"EU\" for Europe).",
            "type": "string"
          },
          "country": {
            "nullable": true,
            "description": "Country name.",
            "type": "string"
          },
          "country_code": {
            "nullable": true,
            "description": "Two-letter country code (e.g., \"NL\" for Netherlands).",
            "allOf": [
              {
                "$ref": "#/components/schemas/CountryCode"
              }
            ]
          },
          "country_code3": {
            "nullable": true,
            "description": "Three-letter country code (e.g., \"NLD\" for Netherlands).",
            "type": "string"
          },
          "ip": {
            "title": "String",
            "description": "IP address of the user.",
            "default": "",
            "type": "string",
            "format": "ip"
          },
          "is_in_european_union": {
            "nullable": true,
            "description": "Flag indicating whether the country is in the European Union.",
            "type": "boolean"
          },
          "latitude": {
            "nullable": true,
            "description": "Geographic latitude.",
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "nullable": true,
            "description": "Geographic longitude.",
            "type": "number",
            "format": "double"
          },
          "offset": {
            "nullable": true,
            "description": "Time offset in seconds from UTC.",
            "type": "integer",
            "format": "int64"
          },
          "organization": {
            "nullable": true,
            "description": "Organization name (e.g., \"RIPE NCC\").",
            "type": "string"
          },
          "postal_code": {
            "nullable": true,
            "description": "Postal code.",
            "type": "string"
          },
          "region": {
            "nullable": true,
            "description": "Name of the region (e.g., \"North Holland\").",
            "type": "string"
          },
          "region_code": {
            "nullable": true,
            "description": "Region code (e.g., \"NH\" for North Holland).",
            "type": "string"
          },
          "timezone": {
            "nullable": true,
            "description": "Timezone (e.g., \"Europe/Amsterdam\").",
            "type": "string"
          }
        }
      },
      "Jetstream": {
        "description": "Jetstream information.",
        "type": "object",
        "properties": {
          "config": {
            "description": "The Jetstream config.",
            "default": {
              "domain": "",
              "max_memory": 0,
              "max_storage": 0,
              "store_dir": ""
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/JetstreamConfig"
              }
            ]
          },
          "meta": {
            "description": "Meta information about the cluster.",
            "default": {
              "cluster_size": 0,
              "leader": "",
              "name": ""
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/MetaClusterInfo"
              }
            ]
          },
          "stats": {
            "description": "Jetstream statistics.",
            "default": {
              "accounts": 0,
              "api": {
                "errors": 0,
                "inflight": 0,
                "total": 0
              },
              "ha_assets": 0,
              "memory": 0,
              "reserved_memory": 0,
              "reserved_store": 0,
              "store": 0
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/JetstreamStats"
              }
            ]
          }
        }
      },
      "JetstreamApiStats": {
        "description": "Jetstream API statistics.",
        "type": "object",
        "properties": {
          "errors": {
            "description": "The number of errors.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "inflight": {
            "description": "The number of inflight requests.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "total": {
            "description": "The number of requests.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "JetstreamConfig": {
        "description": "Jetstream configuration.",
        "type": "object",
        "properties": {
          "domain": {
            "description": "The domain.",
            "default": "",
            "type": "string"
          },
          "max_memory": {
            "description": "The max memory.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "max_storage": {
            "description": "The max storage.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "store_dir": {
            "description": "The store directory.",
            "default": "",
            "type": "string"
          }
        }
      },
      "JetstreamStats": {
        "description": "Jetstream statistics.",
        "type": "object",
        "properties": {
          "accounts": {
            "description": "The number of accounts.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "api": {
            "description": "API stats.",
            "default": {
              "errors": 0,
              "inflight": 0,
              "total": 0
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/JetstreamApiStats"
              }
            ]
          },
          "ha_assets": {
            "description": "The number of HA assets.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "memory": {
            "description": "The memory used by the Jetstream server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "reserved_memory": {
            "description": "The reserved memory for the Jetstream server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "reserved_store": {
            "description": "The reserved storage for the Jetstream server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "store": {
            "description": "The storage used by the Jetstream server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "KclCodeCompletionParams": {
        "description": "Extra params for the completions.",
        "type": "object",
        "properties": {
          "language": {
            "description": "The language of the code.",
            "default": "",
            "type": "string"
          },
          "next_indent": {
            "nullable": true,
            "description": "The next indent of the code.",
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          },
          "prompt_tokens": {
            "nullable": true,
            "description": "The prompt tokens for the completions.",
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "suffix_tokens": {
            "nullable": true,
            "description": "The suffix tokens for the completions.",
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "trim_by_indentation": {
            "description": "If we should trim by indentation.",
            "default": false,
            "type": "boolean"
          }
        }
      },
      "KclCodeCompletionRequest": {
        "description": "A request to generate KCL code completions.",
        "type": "object",
        "properties": {
          "extra": {
            "description": "Extra parameters for the completions.",
            "default": {
              "language": "",
              "trim_by_indentation": false
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/KclCodeCompletionParams"
              }
            ]
          },
          "max_tokens": {
            "nullable": true,
            "description": "The maximum number of tokens that can be generated for the completions. The total length of input tokens and generated tokens is limited by the model’s context length.",
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          },
          "n": {
            "nullable": true,
            "description": "How many completion choices to generate for each input message.",
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          },
          "nwo": {
            "nullable": true,
            "description": "For GitHub copilot this is the `{org}/{repo}`. This does not do anything yet. But we wanted the same API as GitHub Copilot. It might be used in the future.",
            "type": "string"
          },
          "prompt": {
            "description": "The prompt for the model.",
            "default": "",
            "type": "string"
          },
          "stop": {
            "description": "Up to 4 sequences where the API will stop generating further tokens.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "stream": {
            "description": "If set, partial message deltas will be sent, like in ChatGPT or OpenAPI. Tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a data: [DONE] message.",
            "default": false,
            "type": "boolean"
          },
          "suffix": {
            "description": "The suffix for the model.",
            "default": "",
            "type": "string"
          },
          "temperature": {
            "nullable": true,
            "description": "The temperature for the model.",
            "type": "number",
            "format": "float"
          },
          "top_p": {
            "nullable": true,
            "description": "The top p for the model.",
            "type": "number",
            "format": "float"
          }
        }
      },
      "KclCodeCompletionResponse": {
        "description": "A response with KCL code completions.",
        "type": "object",
        "properties": {
          "completions": {
            "description": "The completions.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "completions"
        ]
      },
      "LeafNode": {
        "description": "Leaf node information.",
        "type": "object",
        "properties": {
          "auth_timeout": {
            "description": "The auth timeout of the leaf node.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "host": {
            "description": "The host of the leaf node.",
            "default": "",
            "type": "string"
          },
          "port": {
            "description": "The port of the leaf node.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "tls_timeout": {
            "description": "The TLS timeout for the leaf node.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "LengthUnit": {
        "type": "number",
        "format": "double"
      },
      "LinearTransform": {
        "description": "Ways to transform each solid being replicated in a repeating pattern.",
        "type": "object",
        "properties": {
          "replicate": {
            "description": "Whether to replicate the original solid in this instance.",
            "default": true,
            "type": "boolean"
          },
          "scale": {
            "description": "Scale the replica's size along each axis. Defaults to (1, 1, 1) (i.e. the same size as the original).",
            "default": {
              "x": 1.0,
              "y": 1.0,
              "z": 1.0
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "translate": {
            "description": "Translate the replica this far along each dimension. Defaults to zero vector (i.e. same position as the original).",
            "default": {
              "x": 0.0,
              "y": 0.0,
              "z": 0.0
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          }
        }
      },
      "Loft": {
        "description": "The response from the `Loft` command.",
        "type": "object",
        "properties": {
          "solid_id": {
            "description": "The UUID of the newly created solid loft.",
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "solid_id"
        ]
      },
      "Mass": {
        "description": "The mass response.",
        "type": "object",
        "properties": {
          "mass": {
            "description": "The mass.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output unit for the mass.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitMass"
              }
            ]
          }
        },
        "required": [
          "mass",
          "output_unit"
        ]
      },
      "MetaClusterInfo": {
        "description": "Jetstream statistics.",
        "type": "object",
        "properties": {
          "cluster_size": {
            "description": "The size of the cluster.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "leader": {
            "description": "The leader of the cluster.",
            "default": "",
            "type": "string"
          },
          "name": {
            "description": "The name of the cluster.",
            "default": "",
            "type": "string"
          }
        }
      },
      "Metadata": {
        "description": "Metadata about our currently running server.\n\nThis is mostly used for internal purposes and debugging.",
        "type": "object",
        "properties": {
          "cache": {
            "description": "Metadata about our cache.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CacheMetadata"
              }
            ]
          },
          "environment": {
            "description": "The environment we are running in.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Environment"
              }
            ]
          },
          "fs": {
            "description": "Metadata about our file system.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileSystemMetadata"
              }
            ]
          },
          "git_hash": {
            "description": "The git hash of the server.",
            "type": "string"
          },
          "pubsub": {
            "description": "Metadata about our pub-sub connection.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Connection"
              }
            ]
          }
        },
        "required": [
          "cache",
          "environment",
          "fs",
          "git_hash",
          "pubsub"
        ]
      },
      "Method": {
        "description": "The Request Method (VERB)\n\nThis type also contains constants for a number of common HTTP methods such as GET, POST, etc.\n\nCurrently includes 8 variants representing the 8 methods defined in [RFC 7230](https://tools.ietf.org/html/rfc7231#section-4.1), plus PATCH, and an Extension variant for all extensions.",
        "oneOf": [
          {
            "description": "The `OPTIONS` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.2.1).",
            "type": "string",
            "enum": [
              "OPTIONS"
            ]
          },
          {
            "description": "The `GET` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3.1).",
            "type": "string",
            "enum": [
              "GET"
            ]
          },
          {
            "description": "The `POST` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3.1).",
            "type": "string",
            "enum": [
              "POST"
            ]
          },
          {
            "description": "The `PUT` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3.1).",
            "type": "string",
            "enum": [
              "PUT"
            ]
          },
          {
            "description": "The `DELETE` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3.5).",
            "type": "string",
            "enum": [
              "DELETE"
            ]
          },
          {
            "description": "The `HEAD` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3.2).",
            "type": "string",
            "enum": [
              "HEAD"
            ]
          },
          {
            "description": "The `TRACE` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3).",
            "type": "string",
            "enum": [
              "TRACE"
            ]
          },
          {
            "description": "The `CONNECT` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3.6).",
            "type": "string",
            "enum": [
              "CONNECT"
            ]
          },
          {
            "description": "The `PATCH` method as defined in [RFC 5789](https://tools.ietf.org/html/rfc5789).",
            "type": "string",
            "enum": [
              "PATCH"
            ]
          },
          {
            "description": "A catch all.",
            "type": "string",
            "enum": [
              "EXTENSION"
            ]
          }
        ]
      },
      "MlFeedback": {
        "description": "Human feedback on an ML response.",
        "oneOf": [
          {
            "description": "Thumbs up.",
            "type": "string",
            "enum": [
              "thumbs_up"
            ]
          },
          {
            "description": "Thumbs down.",
            "type": "string",
            "enum": [
              "thumbs_down"
            ]
          },
          {
            "description": "Accepted.",
            "type": "string",
            "enum": [
              "accepted"
            ]
          },
          {
            "description": "Rejected.",
            "type": "string",
            "enum": [
              "rejected"
            ]
          }
        ]
      },
      "MlPrompt": {
        "description": "A ML prompt.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "When the prompt was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the ML prompt was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error message if the prompt failed.",
            "type": "string"
          },
          "feedback": {
            "nullable": true,
            "description": "Feedback from the user, if any.",
            "allOf": [
              {
                "$ref": "#/components/schemas/MlFeedback"
              }
            ]
          },
          "id": {
            "description": "The unique identifier for the ML prompt.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "metadata": {
            "nullable": true,
            "description": "The metadata for the prompt.",
            "allOf": [
              {
                "$ref": "#/components/schemas/MlPromptMetadata"
              }
            ]
          },
          "model_version": {
            "description": "The version of the model.",
            "type": "string"
          },
          "output_file": {
            "nullable": true,
            "description": "The output file. In the case of TextToCad this is a link to a file in a GCP bucket.",
            "type": "string"
          },
          "prompt": {
            "description": "The prompt.",
            "type": "string"
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "When the prompt was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the prompt.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "type": {
            "description": "The type of prompt.",
            "allOf": [
              {
                "$ref": "#/components/schemas/MlPromptType"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the ML prompt was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the ML prompt.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "model_version",
          "prompt",
          "status",
          "type",
          "updated_at",
          "user_id"
        ]
      },
      "MlPromptMetadata": {
        "description": "Metadata for a ML prompt.",
        "type": "object",
        "properties": {
          "code": {
            "nullable": true,
            "description": "Code for the model.",
            "type": "string"
          },
          "original_source_code": {
            "nullable": true,
            "description": "The original source code for the model.",
            "type": "string"
          },
          "source_ranges": {
            "description": "The source ranges the user suggested to change.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceRangePrompt"
            }
          }
        }
      },
      "MlPromptResultsPage": {
        "description": "A single page of results",
        "type": "object",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MlPrompt"
            }
          },
          "next_page": {
            "nullable": true,
            "description": "token used to fetch the next page of results (if any)",
            "type": "string"
          }
        },
        "required": [
          "items"
        ]
      },
      "MlPromptType": {
        "description": "A type of ML prompt.",
        "oneOf": [
          {
            "description": "Text to CAD.",
            "type": "string",
            "enum": [
              "text_to_cad"
            ]
          },
          {
            "description": "Text to KCL.",
            "type": "string",
            "enum": [
              "text_to_kcl"
            ]
          },
          {
            "description": "Text to Kcl iteration,",
            "type": "string",
            "enum": [
              "text_to_kcl_iteration"
            ]
          }
        ]
      },
      "ModelingAppEventType": {
        "description": "Type for modeling-app events",
        "oneOf": [
          {
            "description": "This event is sent before the modeling app or project is closed. The attachment should contain the contents of the most recent successful compile.",
            "type": "string",
            "enum": [
              "successful_compile_before_close"
            ]
          }
        ]
      },
      "ModelingAppIndividualSubscriptionTier": {
        "description": "The subscription tiers we offer for the Modeling App to individuals.",
        "oneOf": [
          {
            "description": "The free tier.",
            "type": "string",
            "enum": [
              "free"
            ]
          },
          {
            "description": "The pro tier.",
            "type": "string",
            "enum": [
              "pro"
            ]
          }
        ]
      },
      "ModelingAppOrganizationSubscriptionTier": {
        "description": "The subscription tiers we offer for the Modeling App to organizations.",
        "oneOf": [
          {
            "description": "The team tier.",
            "type": "string",
            "enum": [
              "team"
            ]
          },
          {
            "description": "The enterprise tier.",
            "type": "string",
            "enum": [
              "enterprise"
            ]
          }
        ]
      },
      "ModelingAppSubscriptionTier": {
        "description": "A subscription tier we offer for the Modeling App.",
        "type": "object",
        "properties": {
          "description": {
            "description": "A description of the tier.",
            "type": "string"
          },
          "features": {
            "description": "Features that are included in the subscription.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionTierFeature"
            },
            "minItems": 0,
            "maxItems": 15
          },
          "name": {
            "description": "The name of the tier.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModelingAppSubscriptionTierName"
              }
            ]
          },
          "pay_as_you_go_credits": {
            "title": "double",
            "description": "The amount of pay-as-you-go credits the individual or org gets outside the modeling app.",
            "type": "number",
            "format": "money-usd"
          },
          "price": {
            "description": "The price of the tier per month. If this is for an individual, this is the price they pay. If this is for an organization, this is the price the organization pays per member in the org. This is in USD.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionTierPrice"
              }
            ]
          },
          "support_tier": {
            "description": "The support tier the subscription provides.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SupportTier"
              }
            ]
          },
          "training_data_behavior": {
            "description": "The behavior of the users data (can it be used for training, etc).",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionTrainingDataBehavior"
              }
            ]
          },
          "type": {
            "description": "If the tier is offered for an individual or an org.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionTierType"
              }
            ]
          },
          "zoo_tools_included": {
            "description": "The Zoo tools that you can call unlimited times with this tier.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZooTool"
            }
          }
        },
        "required": [
          "description",
          "name",
          "pay_as_you_go_credits",
          "price",
          "support_tier",
          "training_data_behavior",
          "type"
        ]
      },
      "ModelingAppSubscriptionTierName": {
        "description": "An enum representing a Modeling App subscription tier name.",
        "oneOf": [
          {
            "description": "The free tier.",
            "type": "string",
            "enum": [
              "free"
            ]
          },
          {
            "description": "The pro tier.",
            "type": "string",
            "enum": [
              "pro"
            ]
          },
          {
            "description": "The team tier.",
            "type": "string",
            "enum": [
              "team"
            ]
          },
          {
            "description": "The enterprise tier.",
            "type": "string",
            "enum": [
              "enterprise"
            ]
          }
        ]
      },
      "ModelingCmd": {
        "description": "Commands that the KittyCAD engine can execute.",
        "oneOf": [
          {
            "description": "Start a new path.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "start_path"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Move the path's \"pen\".",
            "type": "object",
            "properties": {
              "path": {
                "description": "The ID of the command which created the path.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ModelingCmdId"
                  }
                ]
              },
              "to": {
                "description": "Where the path's pen should be.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "move_path_pen"
                ]
              }
            },
            "required": [
              "path",
              "to",
              "type"
            ]
          },
          {
            "description": "Extend a path by adding a new segment which starts at the path's \"pen\". If no \"pen\" location has been set before (via `MovePen`), then the pen is at the origin.",
            "type": "object",
            "properties": {
              "path": {
                "description": "The ID of the command which created the path.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ModelingCmdId"
                  }
                ]
              },
              "segment": {
                "description": "Segment to append to the path. This segment will implicitly begin at the current \"pen\" location.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PathSegment"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "extend_path"
                ]
              }
            },
            "required": [
              "path",
              "segment",
              "type"
            ]
          },
          {
            "description": "Command for extruding a solid 2d.",
            "type": "object",
            "properties": {
              "cap": {
                "description": "Whether to cap the extrusion with a face, or not. If true, the resulting solid will be closed on all sides, like a dice. If false, it will be open on one side, like a drinking glass.",
                "type": "boolean"
              },
              "distance": {
                "description": "How far off the plane to extrude",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LengthUnit"
                  }
                ]
              },
              "target": {
                "description": "Which sketch to extrude. Must be a closed 2D solid.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ModelingCmdId"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "extrude"
                ]
              }
            },
            "required": [
              "cap",
              "distance",
              "target",
              "type"
            ]
          },
          {
            "description": "Command for revolving a solid 2d.",
            "type": "object",
            "properties": {
              "angle": {
                "description": "The signed angle of revolution (in degrees, must be <= 360 in either direction)",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Angle"
                  }
                ]
              },
              "axis": {
                "description": "The axis of the extrusion (taken from the origin)",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "axis_is_2d": {
                "description": "If true, the axis is interpreted within the 2D space of the solid 2D's plane",
                "type": "boolean"
              },
              "origin": {
                "description": "The origin of the extrusion axis",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "target": {
                "description": "Which sketch to revolve. Must be a closed 2D solid.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ModelingCmdId"
                  }
                ]
              },
              "tolerance": {
                "description": "The maximum acceptable surface gap computed between the revolution surface joints. Must be positive (i.e. greater than zero).",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LengthUnit"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "revolve"
                ]
              }
            },
            "required": [
              "angle",
              "axis",
              "axis_is_2d",
              "origin",
              "target",
              "tolerance",
              "type"
            ]
          },
          {
            "description": "Command for shelling a solid3d face",
            "type": "object",
            "properties": {
              "face_ids": {
                "description": "Which faces to remove, leaving only the shell.",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "hollow": {
                "description": "If true, the Solid3D is made hollow instead of removing the selected faces",
                "default": false,
                "type": "boolean"
              },
              "object_id": {
                "description": "Which Solid3D is being shelled.",
                "type": "string",
                "format": "uuid"
              },
              "shell_thickness": {
                "description": "How thick the shell should be. Smaller values mean a thinner shell.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LengthUnit"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_shell_face"
                ]
              }
            },
            "required": [
              "face_ids",
              "object_id",
              "shell_thickness",
              "type"
            ]
          },
          {
            "description": "Command for revolving a solid 2d about a brep edge",
            "type": "object",
            "properties": {
              "angle": {
                "description": "The signed angle of revolution (in degrees, must be <= 360 in either direction)",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Angle"
                  }
                ]
              },
              "edge_id": {
                "description": "The edge to use as the axis of revolution, must be linear and lie in the plane of the solid",
                "type": "string",
                "format": "uuid"
              },
              "target": {
                "description": "Which sketch to revolve. Must be a closed 2D solid.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ModelingCmdId"
                  }
                ]
              },
              "tolerance": {
                "description": "The maximum acceptable surface gap computed between the revolution surface joints. Must be positive (i.e. greater than zero).",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LengthUnit"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "revolve_about_edge"
                ]
              }
            },
            "required": [
              "angle",
              "edge_id",
              "target",
              "tolerance",
              "type"
            ]
          },
          {
            "description": "Command for lofting sections to create a solid",
            "type": "object",
            "properties": {
              "base_curve_index": {
                "nullable": true,
                "description": "This can be set to override the automatically determined topological base curve, which is usually the first section encountered.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "bez_approximate_rational": {
                "description": "Attempt to approximate rational curves (such as arcs) using a bezier. This will remove banding around interpolations between arcs and non-arcs.  It may produce errors in other scenarios Over time, this field won't be necessary.",
                "type": "boolean"
              },
              "section_ids": {
                "description": "The closed section curves to create a lofted solid from. Currently, these must be Solid2Ds",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "tolerance": {
                "description": "Tolerance",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LengthUnit"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "loft"
                ]
              },
              "v_degree": {
                "description": "Degree of the interpolation. Must be greater than zero. For example, use 2 for quadratic, or 3 for cubic interpolation in the V direction.",
                "type": "integer",
                "format": "uint32",
                "minimum": 1
              }
            },
            "required": [
              "bez_approximate_rational",
              "section_ids",
              "tolerance",
              "type",
              "v_degree"
            ]
          },
          {
            "description": "Closes a path, converting it to a 2D solid.",
            "type": "object",
            "properties": {
              "path_id": {
                "description": "Which path to close.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "close_path"
                ]
              }
            },
            "required": [
              "path_id",
              "type"
            ]
          },
          {
            "description": "Camera drag started.",
            "type": "object",
            "properties": {
              "interaction": {
                "description": "The type of camera drag interaction.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CameraDragInteractionType"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "camera_drag_start"
                ]
              },
              "window": {
                "description": "The initial mouse position.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              }
            },
            "required": [
              "interaction",
              "type",
              "window"
            ]
          },
          {
            "description": "Camera drag continued.",
            "type": "object",
            "properties": {
              "interaction": {
                "description": "The type of camera drag interaction.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CameraDragInteractionType"
                  }
                ]
              },
              "sequence": {
                "nullable": true,
                "description": "Logical timestamp. The client should increment this with every event in the current mouse drag. That way, if the events are being sent over an unordered channel, the API can ignore the older events.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "type": {
                "type": "string",
                "enum": [
                  "camera_drag_move"
                ]
              },
              "window": {
                "description": "The current mouse position.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              }
            },
            "required": [
              "interaction",
              "type",
              "window"
            ]
          },
          {
            "description": "Camera drag ended",
            "type": "object",
            "properties": {
              "interaction": {
                "description": "The type of camera drag interaction.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CameraDragInteractionType"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "camera_drag_end"
                ]
              },
              "window": {
                "description": "The final mouse position.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              }
            },
            "required": [
              "interaction",
              "type",
              "window"
            ]
          },
          {
            "description": "Gets the default camera's camera settings",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "default_camera_get_settings"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Change what the default camera is looking at.",
            "type": "object",
            "properties": {
              "center": {
                "description": "What the camera is looking at. Center of the camera's field of vision",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "sequence": {
                "nullable": true,
                "description": "Logical timestamp. The client should increment this with every event in the current mouse drag. That way, if the events are being sent over an unordered channel, the API can ignore the older events.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "type": {
                "type": "string",
                "enum": [
                  "default_camera_look_at"
                ]
              },
              "up": {
                "description": "Which way is \"up\", from the camera's point of view.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "vantage": {
                "description": "Where the camera is positioned",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              }
            },
            "required": [
              "center",
              "type",
              "up",
              "vantage"
            ]
          },
          {
            "description": "Change what the default camera is looking at.",
            "type": "object",
            "properties": {
              "center": {
                "description": "What the camera is looking at. Center of the camera's field of vision",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "fov_y": {
                "nullable": true,
                "description": "The field of view angle in the y direction, in degrees.",
                "type": "number",
                "format": "float"
              },
              "sequence": {
                "nullable": true,
                "description": "Logical timestamp. The client should increment this with every event in the current mouse drag. That way, if the events are being sent over an unordered channel, the API can ignore the older events.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "type": {
                "type": "string",
                "enum": [
                  "default_camera_perspective_settings"
                ]
              },
              "up": {
                "description": "Which way is \"up\", from the camera's point of view.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "vantage": {
                "description": "Where the camera is positioned",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "z_far": {
                "nullable": true,
                "description": "The distance to the far clipping plane.",
                "type": "number",
                "format": "float"
              },
              "z_near": {
                "nullable": true,
                "description": "The distance to the near clipping plane.",
                "type": "number",
                "format": "float"
              }
            },
            "required": [
              "center",
              "type",
              "up",
              "vantage"
            ]
          },
          {
            "description": "Adjust zoom of the default camera.",
            "type": "object",
            "properties": {
              "magnitude": {
                "description": "Move the camera forward along the vector it's looking at, by this magnitudedefaultCameraZoom. Basically, how much should the camera move forward by.",
                "type": "number",
                "format": "float"
              },
              "type": {
                "type": "string",
                "enum": [
                  "default_camera_zoom"
                ]
              }
            },
            "required": [
              "magnitude",
              "type"
            ]
          },
          {
            "description": "Export the scene to a file.",
            "type": "object",
            "properties": {
              "entity_ids": {
                "description": "IDs of the entities to be exported. If this is empty, then all entities are exported.",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "format": {
                "description": "The file format to export to.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OutputFormat"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "export"
                ]
              }
            },
            "required": [
              "entity_ids",
              "format",
              "type"
            ]
          },
          {
            "description": "What is this entity's parent?",
            "type": "object",
            "properties": {
              "entity_id": {
                "description": "ID of the entity being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_get_parent_id"
                ]
              }
            },
            "required": [
              "entity_id",
              "type"
            ]
          },
          {
            "description": "How many children does the entity have?",
            "type": "object",
            "properties": {
              "entity_id": {
                "description": "ID of the entity being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_get_num_children"
                ]
              }
            },
            "required": [
              "entity_id",
              "type"
            ]
          },
          {
            "description": "What is the UUID of this entity's n-th child?",
            "type": "object",
            "properties": {
              "child_index": {
                "description": "Index into the entity's list of children.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "entity_id": {
                "description": "ID of the entity being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_get_child_uuid"
                ]
              }
            },
            "required": [
              "child_index",
              "entity_id",
              "type"
            ]
          },
          {
            "description": "What are all UUIDs of this entity's children?",
            "type": "object",
            "properties": {
              "entity_id": {
                "description": "ID of the entity being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_get_all_child_uuids"
                ]
              }
            },
            "required": [
              "entity_id",
              "type"
            ]
          },
          {
            "description": "What are all UUIDs of all the paths sketched on top of this entity?",
            "type": "object",
            "properties": {
              "entity_id": {
                "description": "ID of the entity being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_get_sketch_paths"
                ]
              }
            },
            "required": [
              "entity_id",
              "type"
            ]
          },
          {
            "description": "What is the distance between these two entities?",
            "type": "object",
            "properties": {
              "distance_type": {
                "description": "Type of distance to be measured.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DistanceType"
                  }
                ]
              },
              "entity_id1": {
                "description": "ID of the first entity being queried.",
                "type": "string",
                "format": "uuid"
              },
              "entity_id2": {
                "description": "ID of the second entity being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_get_distance"
                ]
              }
            },
            "required": [
              "distance_type",
              "entity_id1",
              "entity_id2",
              "type"
            ]
          },
          {
            "description": "Create a pattern using this entity by specifying the transform for each desired repetition.",
            "type": "object",
            "properties": {
              "entity_id": {
                "description": "ID of the entity being copied.",
                "type": "string",
                "format": "uuid"
              },
              "transform": {
                "description": "How to transform each repeated solid. The 0th transform will create the first copy of the entity. The total number of (optional) repetitions equals the size of this list.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinearTransform"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_linear_pattern_transform"
                ]
              }
            },
            "required": [
              "entity_id",
              "transform",
              "type"
            ]
          },
          {
            "description": "Create a linear pattern using this entity.",
            "type": "object",
            "properties": {
              "axis": {
                "description": "Axis along which to make the copies. For Solid2d patterns, the z component is ignored.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "entity_id": {
                "description": "ID of the entity being copied.",
                "type": "string",
                "format": "uuid"
              },
              "num_repetitions": {
                "description": "Number of repetitions to make.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "spacing": {
                "description": "Spacing between repetitions.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LengthUnit"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_linear_pattern"
                ]
              }
            },
            "required": [
              "axis",
              "entity_id",
              "num_repetitions",
              "spacing",
              "type"
            ]
          },
          {
            "description": "Create a circular pattern using this entity.",
            "type": "object",
            "properties": {
              "arc_degrees": {
                "description": "Arc angle (in degrees) to place repetitions along.",
                "type": "number",
                "format": "double"
              },
              "axis": {
                "description": "Axis around which to make the copies. For Solid2d patterns, this is ignored.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "center": {
                "description": "Point around which to make the copies. For Solid2d patterns, the z component is ignored.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "entity_id": {
                "description": "ID of the entity being copied.",
                "type": "string",
                "format": "uuid"
              },
              "num_repetitions": {
                "description": "Number of repetitions to make.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "rotate_duplicates": {
                "description": "Whether or not to rotate the objects as they are copied.",
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_circular_pattern"
                ]
              }
            },
            "required": [
              "arc_degrees",
              "axis",
              "center",
              "entity_id",
              "num_repetitions",
              "rotate_duplicates",
              "type"
            ]
          },
          {
            "description": "Create a helix using the input cylinder and other specified parameters.",
            "type": "object",
            "properties": {
              "cylinder_id": {
                "description": "ID of the cylinder.",
                "type": "string",
                "format": "uuid"
              },
              "is_clockwise": {
                "description": "Is the helix rotation clockwise?",
                "type": "boolean"
              },
              "length": {
                "description": "Length of the helix.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LengthUnit"
                  }
                ]
              },
              "revolutions": {
                "description": "Number of revolutions.",
                "type": "number",
                "format": "double"
              },
              "start_angle": {
                "description": "Start angle (in degrees).",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Angle"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_make_helix"
                ]
              }
            },
            "required": [
              "cylinder_id",
              "is_clockwise",
              "length",
              "revolutions",
              "start_angle",
              "type"
            ]
          },
          {
            "description": "Mirror the input entities over the specified axis. (Currently only supports sketches)",
            "type": "object",
            "properties": {
              "axis": {
                "description": "Axis to use as mirror.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "ids": {
                "description": "ID of the mirror entities.",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "point": {
                "description": "Point through which the mirror axis passes.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_mirror"
                ]
              }
            },
            "required": [
              "axis",
              "ids",
              "point",
              "type"
            ]
          },
          {
            "description": "Mirror the input entities over the specified edge. (Currently only supports sketches)",
            "type": "object",
            "properties": {
              "edge_id": {
                "description": "The edge to use as the mirror axis, must be linear and lie in the plane of the solid",
                "type": "string",
                "format": "uuid"
              },
              "ids": {
                "description": "ID of the mirror entities.",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_mirror_across_edge"
                ]
              }
            },
            "required": [
              "edge_id",
              "ids",
              "type"
            ]
          },
          {
            "description": "Enter edit mode",
            "type": "object",
            "properties": {
              "target": {
                "description": "The edit target",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "edit_mode_enter"
                ]
              }
            },
            "required": [
              "target",
              "type"
            ]
          },
          {
            "description": "Modifies the selection by simulating a \"mouse click\" at the given x,y window coordinate Returns ID of whatever was selected.",
            "type": "object",
            "properties": {
              "selected_at_window": {
                "description": "Where in the window was selected",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              },
              "selection_type": {
                "description": "What entity was selected?",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SceneSelectionType"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "select_with_point"
                ]
              }
            },
            "required": [
              "selected_at_window",
              "selection_type",
              "type"
            ]
          },
          {
            "description": "Adds one or more entities (by UUID) to the selection.",
            "type": "object",
            "properties": {
              "entities": {
                "description": "Which entities to select",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "select_add"
                ]
              }
            },
            "required": [
              "entities",
              "type"
            ]
          },
          {
            "description": "Removes one or more entities (by UUID) from the selection.",
            "type": "object",
            "properties": {
              "entities": {
                "description": "Which entities to unselect",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "select_remove"
                ]
              }
            },
            "required": [
              "entities",
              "type"
            ]
          },
          {
            "description": "Removes all of the Objects in the scene",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "scene_clear_all"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Replaces current selection with these entities (by UUID).",
            "type": "object",
            "properties": {
              "entities": {
                "description": "Which entities to select",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "select_replace"
                ]
              }
            },
            "required": [
              "entities",
              "type"
            ]
          },
          {
            "description": "Changes the current highlighted entity to whichever one is at the given window coordinate. If there's no entity at this location, clears the highlight.",
            "type": "object",
            "properties": {
              "selected_at_window": {
                "description": "Coordinates of the window being clicked",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              },
              "sequence": {
                "nullable": true,
                "description": "Logical timestamp. The client should increment this with every event in the current mouse drag. That way, if the events are being sent over an unordered channel, the API can ignore the older events.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "type": {
                "type": "string",
                "enum": [
                  "highlight_set_entity"
                ]
              }
            },
            "required": [
              "selected_at_window",
              "type"
            ]
          },
          {
            "description": "Changes the current highlighted entity to these entities.",
            "type": "object",
            "properties": {
              "entities": {
                "description": "Highlight these entities.",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "highlight_set_entities"
                ]
              }
            },
            "required": [
              "entities",
              "type"
            ]
          },
          {
            "description": "Create a new annotation",
            "type": "object",
            "properties": {
              "annotation_type": {
                "description": "What type of annotation to create.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AnnotationType"
                  }
                ]
              },
              "clobber": {
                "description": "If true, any existing drawables within the obj will be replaced (the object will be reset)",
                "type": "boolean"
              },
              "options": {
                "description": "What should the annotation contain?",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AnnotationOptions"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "new_annotation"
                ]
              }
            },
            "required": [
              "annotation_type",
              "clobber",
              "options",
              "type"
            ]
          },
          {
            "description": "Update an annotation",
            "type": "object",
            "properties": {
              "annotation_id": {
                "description": "Which annotation to update",
                "type": "string",
                "format": "uuid"
              },
              "options": {
                "description": "If any of these fields are set, they will overwrite the previous options for the annotation.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AnnotationOptions"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "update_annotation"
                ]
              }
            },
            "required": [
              "annotation_id",
              "options",
              "type"
            ]
          },
          {
            "description": "Changes visibility of scene-wide edge lines on brep solids",
            "type": "object",
            "properties": {
              "hidden": {
                "description": "Whether or not the edge lines should be hidden.",
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "enum": [
                  "edge_lines_visible"
                ]
              }
            },
            "required": [
              "hidden",
              "type"
            ]
          },
          {
            "description": "Hide or show an object",
            "type": "object",
            "properties": {
              "hidden": {
                "description": "Whether or not the object should be hidden.",
                "type": "boolean"
              },
              "object_id": {
                "description": "Which object to change",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "object_visible"
                ]
              }
            },
            "required": [
              "hidden",
              "object_id",
              "type"
            ]
          },
          {
            "description": "Bring an object to the front of the scene",
            "type": "object",
            "properties": {
              "object_id": {
                "description": "Which object to change",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "object_bring_to_front"
                ]
              }
            },
            "required": [
              "object_id",
              "type"
            ]
          },
          {
            "description": "Set the material properties of an object",
            "type": "object",
            "properties": {
              "ambient_occlusion": {
                "description": "Ambient Occlusion of the new material",
                "type": "number",
                "format": "float"
              },
              "color": {
                "description": "Color of the new material",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Color"
                  }
                ]
              },
              "metalness": {
                "description": "Metalness of the new material",
                "type": "number",
                "format": "float"
              },
              "object_id": {
                "description": "Which object to change",
                "type": "string",
                "format": "uuid"
              },
              "roughness": {
                "description": "Roughness of the new material",
                "type": "number",
                "format": "float"
              },
              "type": {
                "type": "string",
                "enum": [
                  "object_set_material_params_pbr"
                ]
              }
            },
            "required": [
              "ambient_occlusion",
              "color",
              "metalness",
              "object_id",
              "roughness",
              "type"
            ]
          },
          {
            "description": "What type of entity is this?",
            "type": "object",
            "properties": {
              "entity_id": {
                "description": "ID of the entity being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "get_entity_type"
                ]
              }
            },
            "required": [
              "entity_id",
              "type"
            ]
          },
          {
            "description": "Gets all faces which use the given edge.",
            "type": "object",
            "properties": {
              "edge_id": {
                "description": "Which edge you want the faces of.",
                "type": "string",
                "format": "uuid"
              },
              "object_id": {
                "description": "Which object is being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_all_edge_faces"
                ]
              }
            },
            "required": [
              "edge_id",
              "object_id",
              "type"
            ]
          },
          {
            "description": "Add a hole to a Solid2d object before extruding it.",
            "type": "object",
            "properties": {
              "hole_id": {
                "description": "The id of the path to use as the inner profile (hole).",
                "type": "string",
                "format": "uuid"
              },
              "object_id": {
                "description": "Which object to add the hole to.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid2d_add_hole"
                ]
              }
            },
            "required": [
              "hole_id",
              "object_id",
              "type"
            ]
          },
          {
            "description": "Gets all edges which are opposite the given edge, across all possible faces.",
            "type": "object",
            "properties": {
              "along_vector": {
                "nullable": true,
                "description": "If given, only faces parallel to this vector will be considered.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "edge_id": {
                "description": "Which edge you want the opposites of.",
                "type": "string",
                "format": "uuid"
              },
              "object_id": {
                "description": "Which object is being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_all_opposite_edges"
                ]
              }
            },
            "required": [
              "edge_id",
              "object_id",
              "type"
            ]
          },
          {
            "description": "Gets the edge opposite the given edge, along the given face.",
            "type": "object",
            "properties": {
              "edge_id": {
                "description": "Which edge you want the opposite of.",
                "type": "string",
                "format": "uuid"
              },
              "face_id": {
                "description": "Which face is used to figure out the opposite edge?",
                "type": "string",
                "format": "uuid"
              },
              "object_id": {
                "description": "Which object is being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_opposite_edge"
                ]
              }
            },
            "required": [
              "edge_id",
              "face_id",
              "object_id",
              "type"
            ]
          },
          {
            "description": "Gets the next adjacent edge for the given edge, along the given face.",
            "type": "object",
            "properties": {
              "edge_id": {
                "description": "Which edge you want the opposite of.",
                "type": "string",
                "format": "uuid"
              },
              "face_id": {
                "description": "Which face is used to figure out the opposite edge?",
                "type": "string",
                "format": "uuid"
              },
              "object_id": {
                "description": "Which object is being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_next_adjacent_edge"
                ]
              }
            },
            "required": [
              "edge_id",
              "face_id",
              "object_id",
              "type"
            ]
          },
          {
            "description": "Gets the previous adjacent edge for the given edge, along the given face.",
            "type": "object",
            "properties": {
              "edge_id": {
                "description": "Which edge you want the opposite of.",
                "type": "string",
                "format": "uuid"
              },
              "face_id": {
                "description": "Which face is used to figure out the opposite edge?",
                "type": "string",
                "format": "uuid"
              },
              "object_id": {
                "description": "Which object is being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_prev_adjacent_edge"
                ]
              }
            },
            "required": [
              "edge_id",
              "face_id",
              "object_id",
              "type"
            ]
          },
          {
            "description": "Fillets the given edge with the specified radius.",
            "type": "object",
            "properties": {
              "cut_type": {
                "description": "How to apply the cut.",
                "default": "fillet",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CutType"
                  }
                ]
              },
              "edge_id": {
                "description": "Which edge you want to fillet.",
                "type": "string",
                "format": "uuid"
              },
              "object_id": {
                "description": "Which object is being filletted.",
                "type": "string",
                "format": "uuid"
              },
              "radius": {
                "description": "The radius of the fillet. Measured in length (using the same units that the current sketch uses). Must be positive (i.e. greater than zero).",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LengthUnit"
                  }
                ]
              },
              "tolerance": {
                "description": "The maximum acceptable surface gap computed between the filleted surfaces. Must be positive (i.e. greater than zero).",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LengthUnit"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_fillet_edge"
                ]
              }
            },
            "required": [
              "edge_id",
              "object_id",
              "radius",
              "tolerance",
              "type"
            ]
          },
          {
            "description": "Determines whether a brep face is planar and returns its surface-local planar axes if so",
            "type": "object",
            "properties": {
              "object_id": {
                "description": "Which face is being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "face_is_planar"
                ]
              }
            },
            "required": [
              "object_id",
              "type"
            ]
          },
          {
            "description": "Determines a position on a brep face evaluated by parameters u,v",
            "type": "object",
            "properties": {
              "object_id": {
                "description": "Which face is being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "face_get_position"
                ]
              },
              "uv": {
                "description": "The 2D paramter-space u,v position to evaluate the surface at",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              }
            },
            "required": [
              "object_id",
              "type",
              "uv"
            ]
          },
          {
            "description": "Obtains the surface \"center of mass\"",
            "type": "object",
            "properties": {
              "object_id": {
                "description": "Which face is being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "face_get_center"
                ]
              }
            },
            "required": [
              "object_id",
              "type"
            ]
          },
          {
            "description": "Determines the gradient (dFdu, dFdv) + normal vector on a brep face evaluated by parameters u,v",
            "type": "object",
            "properties": {
              "object_id": {
                "description": "Which face is being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "face_get_gradient"
                ]
              },
              "uv": {
                "description": "The 2D paramter-space u,v position to evaluate the surface at",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              }
            },
            "required": [
              "object_id",
              "type",
              "uv"
            ]
          },
          {
            "description": "Send object to front or back.",
            "type": "object",
            "properties": {
              "front": {
                "description": "Bring to front = true, send to back = false.",
                "type": "boolean"
              },
              "object_id": {
                "description": "Which object is being changed.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "send_object"
                ]
              }
            },
            "required": [
              "front",
              "object_id",
              "type"
            ]
          },
          {
            "description": "Set opacity of the entity.",
            "type": "object",
            "properties": {
              "entity_id": {
                "description": "Which entity is being changed.",
                "type": "string",
                "format": "uuid"
              },
              "opacity": {
                "description": "How transparent should it be? 0 or lower is totally transparent. 1 or greater is totally opaque.",
                "type": "number",
                "format": "float"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_set_opacity"
                ]
              }
            },
            "required": [
              "entity_id",
              "opacity",
              "type"
            ]
          },
          {
            "description": "Fade entity in or out.",
            "type": "object",
            "properties": {
              "duration_seconds": {
                "description": "How many seconds the animation should take.",
                "default": 0.4000000059604645,
                "type": "number",
                "format": "float"
              },
              "entity_id": {
                "description": "Which entity is being changed.",
                "type": "string",
                "format": "uuid"
              },
              "fade_in": {
                "description": "Fade in = true, fade out = false.",
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_fade"
                ]
              }
            },
            "required": [
              "entity_id",
              "fade_in",
              "type"
            ]
          },
          {
            "description": "Make a new plane",
            "type": "object",
            "properties": {
              "clobber": {
                "description": "If true, any existing drawables within the obj will be replaced (the object will be reset)",
                "type": "boolean"
              },
              "hide": {
                "nullable": true,
                "description": "If true, the plane will be created but hidden initially.",
                "type": "boolean"
              },
              "origin": {
                "description": "Origin of the plane",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "size": {
                "description": "What should the plane's span/extent? When rendered visually, this is both the width and height along X and Y axis respectively.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LengthUnit"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "make_plane"
                ]
              },
              "x_axis": {
                "description": "What should the plane's X axis be?",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "y_axis": {
                "description": "What should the plane's Y axis be?",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              }
            },
            "required": [
              "clobber",
              "origin",
              "size",
              "type",
              "x_axis",
              "y_axis"
            ]
          },
          {
            "description": "Set the color of a plane.",
            "type": "object",
            "properties": {
              "color": {
                "description": "What color it should be.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Color"
                  }
                ]
              },
              "plane_id": {
                "description": "Which plane is being changed.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "plane_set_color"
                ]
              }
            },
            "required": [
              "color",
              "plane_id",
              "type"
            ]
          },
          {
            "description": "Set the current tool.",
            "type": "object",
            "properties": {
              "tool": {
                "description": "What tool should be active.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SceneToolType"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "set_tool"
                ]
              }
            },
            "required": [
              "tool",
              "type"
            ]
          },
          {
            "description": "Send a mouse move event",
            "type": "object",
            "properties": {
              "sequence": {
                "nullable": true,
                "description": "Logical timestamp. The client should increment this with every event in the current mouse drag. That way, if the events are being sent over an unordered channel, the API can ignore the older events.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "type": {
                "type": "string",
                "enum": [
                  "mouse_move"
                ]
              },
              "window": {
                "description": "Where the mouse is",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              }
            },
            "required": [
              "type",
              "window"
            ]
          },
          {
            "description": "Send a mouse click event Updates modified/selected entities.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "mouse_click"
                ]
              },
              "window": {
                "description": "Where the mouse is",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              }
            },
            "required": [
              "type",
              "window"
            ]
          },
          {
            "description": "Disable sketch mode. If you are sketching on a face, be sure to not disable sketch mode until you have extruded. Otherwise, your object will not be fused with the face.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "sketch_mode_disable"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Get the plane for sketch mode.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "get_sketch_mode_plane"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Get the plane for sketch mode.",
            "type": "object",
            "properties": {
              "constraint_bound": {
                "description": "Which constraint to apply.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PathComponentConstraintBound"
                  }
                ]
              },
              "constraint_type": {
                "description": "What part of the curve should be constrained.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PathComponentConstraintType"
                  }
                ]
              },
              "object_id": {
                "description": "Which curve to constrain.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "curve_set_constraint"
                ]
              }
            },
            "required": [
              "constraint_bound",
              "constraint_type",
              "object_id",
              "type"
            ]
          },
          {
            "description": "Sketch on some entity (e.g. a plane, a face).",
            "type": "object",
            "properties": {
              "adjust_camera": {
                "description": "Should the camera move at all?",
                "type": "boolean"
              },
              "animated": {
                "description": "Should we animate or snap for the camera transition?",
                "type": "boolean"
              },
              "entity_id": {
                "description": "Which entity to sketch on.",
                "type": "string",
                "format": "uuid"
              },
              "ortho": {
                "description": "Should the camera use orthographic projection? In other words, should an object's size in the rendered image stay constant regardless of its distance from the camera.",
                "type": "boolean"
              },
              "planar_normal": {
                "nullable": true,
                "description": "If provided, ensures that the normal of the sketch plane must be aligned with this supplied normal (otherwise the camera position will be used to infer the normal to point towards the viewer)",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "enable_sketch_mode"
                ]
              }
            },
            "required": [
              "adjust_camera",
              "animated",
              "entity_id",
              "ortho",
              "type"
            ]
          },
          {
            "description": "Set the background color of the scene.",
            "type": "object",
            "properties": {
              "color": {
                "description": "The color to set the background to.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Color"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "set_background_color"
                ]
              }
            },
            "required": [
              "color",
              "type"
            ]
          },
          {
            "description": "Set the properties of the tool lines for the scene.",
            "type": "object",
            "properties": {
              "color": {
                "nullable": true,
                "description": "The color to set the tool line to.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Color"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "set_current_tool_properties"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Set the default system properties used when a specific property isn't set.",
            "type": "object",
            "properties": {
              "color": {
                "nullable": true,
                "description": "The default system color.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Color"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "set_default_system_properties"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Get type of the given curve.",
            "type": "object",
            "properties": {
              "curve_id": {
                "description": "Which curve to query.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "curve_get_type"
                ]
              }
            },
            "required": [
              "curve_id",
              "type"
            ]
          },
          {
            "description": "Get control points of the given curve.",
            "type": "object",
            "properties": {
              "curve_id": {
                "description": "Which curve to query.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "curve_get_control_points"
                ]
              }
            },
            "required": [
              "curve_id",
              "type"
            ]
          },
          {
            "description": "Take a snapshot of the current view.",
            "type": "object",
            "properties": {
              "format": {
                "description": "What image format to return.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ImageFormat"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "take_snapshot"
                ]
              }
            },
            "required": [
              "format",
              "type"
            ]
          },
          {
            "description": "Add a gizmo showing the axes.",
            "type": "object",
            "properties": {
              "clobber": {
                "description": "If true, any existing drawables within the obj will be replaced (the object will be reset)",
                "type": "boolean"
              },
              "gizmo_mode": {
                "description": "If true, axes gizmo will be placed in the corner of the screen. If false, it will be placed at the origin of the scene.",
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "enum": [
                  "make_axes_gizmo"
                ]
              }
            },
            "required": [
              "clobber",
              "gizmo_mode",
              "type"
            ]
          },
          {
            "description": "Query the given path.",
            "type": "object",
            "properties": {
              "path_id": {
                "description": "Which path to query",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "path_get_info"
                ]
              }
            },
            "required": [
              "path_id",
              "type"
            ]
          },
          {
            "description": "Obtain curve ids for vertex ids",
            "type": "object",
            "properties": {
              "path_id": {
                "description": "Which path to query",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "path_get_curve_uuids_for_vertices"
                ]
              },
              "vertex_ids": {
                "description": "IDs of the vertices for which to obtain curve ids from",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "required": [
              "path_id",
              "type",
              "vertex_ids"
            ]
          },
          {
            "description": "Obtain curve id by index",
            "type": "object",
            "properties": {
              "index": {
                "description": "IDs of the vertices for which to obtain curve ids from",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "path_id": {
                "description": "Which path to query",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "path_get_curve_uuid"
                ]
              }
            },
            "required": [
              "index",
              "path_id",
              "type"
            ]
          },
          {
            "description": "Obtain vertex ids for a path",
            "type": "object",
            "properties": {
              "path_id": {
                "description": "Which path to query",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "path_get_vertex_uuids"
                ]
              }
            },
            "required": [
              "path_id",
              "type"
            ]
          },
          {
            "description": "Obtain the sketch target id (if the path was drawn in sketchmode) for a path",
            "type": "object",
            "properties": {
              "path_id": {
                "description": "Which path to query",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "path_get_sketch_target_uuid"
                ]
              }
            },
            "required": [
              "path_id",
              "type"
            ]
          },
          {
            "description": "Start dragging the mouse.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "handle_mouse_drag_start"
                ]
              },
              "window": {
                "description": "The mouse position.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              }
            },
            "required": [
              "type",
              "window"
            ]
          },
          {
            "description": "Continue dragging the mouse.",
            "type": "object",
            "properties": {
              "sequence": {
                "nullable": true,
                "description": "Logical timestamp. The client should increment this with every event in the current mouse drag. That way, if the events are being sent over an unordered channel, the API can ignore the older events.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "type": {
                "type": "string",
                "enum": [
                  "handle_mouse_drag_move"
                ]
              },
              "window": {
                "description": "The mouse position.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              }
            },
            "required": [
              "type",
              "window"
            ]
          },
          {
            "description": "Stop dragging the mouse.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "handle_mouse_drag_end"
                ]
              },
              "window": {
                "description": "The mouse position.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              }
            },
            "required": [
              "type",
              "window"
            ]
          },
          {
            "description": "Remove scene objects.",
            "type": "object",
            "properties": {
              "object_ids": {
                "description": "Objects to remove.",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "uniqueItems": true
              },
              "type": {
                "type": "string",
                "enum": [
                  "remove_scene_objects"
                ]
              }
            },
            "required": [
              "object_ids",
              "type"
            ]
          },
          {
            "description": "Utility method. Performs both a ray cast and projection to plane-local coordinates. Returns the plane coordinates for the given window coordinates.",
            "type": "object",
            "properties": {
              "plane_id": {
                "description": "The plane you're intersecting against.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "plane_intersect_and_project"
                ]
              },
              "window": {
                "description": "Window coordinates where the ray cast should be aimed.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              }
            },
            "required": [
              "plane_id",
              "type",
              "window"
            ]
          },
          {
            "description": "Find the start and end of a curve.",
            "type": "object",
            "properties": {
              "curve_id": {
                "description": "ID of the curve being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "curve_get_end_points"
                ]
              }
            },
            "required": [
              "curve_id",
              "type"
            ]
          },
          {
            "description": "Reconfigure the stream.",
            "type": "object",
            "properties": {
              "fps": {
                "description": "Frames per second.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "height": {
                "description": "Height of the stream.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "type": {
                "type": "string",
                "enum": [
                  "reconfigure_stream"
                ]
              },
              "width": {
                "description": "Width of the stream.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              }
            },
            "required": [
              "fps",
              "height",
              "type",
              "width"
            ]
          },
          {
            "description": "Import files to the current model.",
            "type": "object",
            "properties": {
              "files": {
                "description": "Files to import.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ImportFile"
                }
              },
              "format": {
                "description": "Input file format.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InputFormat"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "import_files"
                ]
              }
            },
            "required": [
              "files",
              "format",
              "type"
            ]
          },
          {
            "description": "Set the units of the scene. For all following commands, the units will be interpreted as the given units.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "set_scene_units"
                ]
              },
              "unit": {
                "description": "Which units the scene uses.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              }
            },
            "required": [
              "type",
              "unit"
            ]
          },
          {
            "description": "Get the mass of entities in the scene or the default scene.",
            "type": "object",
            "properties": {
              "entity_ids": {
                "description": "IDs of the entities to get the mass of. If this is empty, then the default scene is included in the mass.",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "material_density": {
                "description": "The material density.",
                "type": "number",
                "format": "double"
              },
              "material_density_unit": {
                "description": "The material density unit.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitDensity"
                  }
                ]
              },
              "output_unit": {
                "description": "The output unit for the mass.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitMass"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "mass"
                ]
              }
            },
            "required": [
              "entity_ids",
              "material_density",
              "material_density_unit",
              "output_unit",
              "type"
            ]
          },
          {
            "description": "Get the density of entities in the scene or the default scene.",
            "type": "object",
            "properties": {
              "entity_ids": {
                "description": "IDs of the entities to get the density of. If this is empty, then the default scene is included in the density.",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "material_mass": {
                "description": "The material mass.",
                "type": "number",
                "format": "double"
              },
              "material_mass_unit": {
                "description": "The material mass unit.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitMass"
                  }
                ]
              },
              "output_unit": {
                "description": "The output unit for the density.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitDensity"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "density"
                ]
              }
            },
            "required": [
              "entity_ids",
              "material_mass",
              "material_mass_unit",
              "output_unit",
              "type"
            ]
          },
          {
            "description": "Get the volume of entities in the scene or the default scene.",
            "type": "object",
            "properties": {
              "entity_ids": {
                "description": "IDs of the entities to get the volume of. If this is empty, then the default scene is included in the volume.",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "output_unit": {
                "description": "The output unit for the volume.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitVolume"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "volume"
                ]
              }
            },
            "required": [
              "entity_ids",
              "output_unit",
              "type"
            ]
          },
          {
            "description": "Get the center of mass of entities in the scene or the default scene.",
            "type": "object",
            "properties": {
              "entity_ids": {
                "description": "IDs of the entities to get the center of mass of. If this is empty, then the default scene is included in the center of mass.",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "output_unit": {
                "description": "The output unit for the center of mass.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "center_of_mass"
                ]
              }
            },
            "required": [
              "entity_ids",
              "output_unit",
              "type"
            ]
          },
          {
            "description": "Get the surface area of entities in the scene or the default scene.",
            "type": "object",
            "properties": {
              "entity_ids": {
                "description": "IDs of the entities to get the surface area of. If this is empty, then the default scene is included in the surface area.",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "output_unit": {
                "description": "The output unit for the surface area.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitArea"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "surface_area"
                ]
              }
            },
            "required": [
              "entity_ids",
              "output_unit",
              "type"
            ]
          },
          {
            "description": "Focus the default camera upon an object in the scene.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "default_camera_focus_on"
                ]
              },
              "uuid": {
                "description": "UUID of object to focus on.",
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "type",
              "uuid"
            ]
          },
          {
            "description": "When you select some entity with the current tool, what should happen to the entity?",
            "type": "object",
            "properties": {
              "selection_type": {
                "description": "What type of selection should occur when you select something?",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SceneSelectionType"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "set_selection_type"
                ]
              }
            },
            "required": [
              "selection_type",
              "type"
            ]
          },
          {
            "description": "What kind of entities can be selected?",
            "type": "object",
            "properties": {
              "filter": {
                "description": "If vector is empty, clear all filters. If vector is non-empty, only the given entity types will be selectable.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityType"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "set_selection_filter"
                ]
              }
            },
            "required": [
              "filter",
              "type"
            ]
          },
          {
            "description": "Use orthographic projection.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "default_camera_set_orthographic"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Use perspective projection.",
            "type": "object",
            "properties": {
              "parameters": {
                "nullable": true,
                "description": "If this is not given, use the same parameters as last time the perspective camera was used.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PerspectiveCameraParameters"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "default_camera_set_perspective"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Fit the view to the specified object(s).",
            "type": "object",
            "properties": {
              "object_ids": {
                "description": "Which objects to fit camera to; if empty, fit to all non-default objects. Defaults to empty vector.",
                "default": [],
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "padding": {
                "description": "How much to pad the view frame by, as a fraction of the object(s) bounding box size. Negative padding will crop the view of the object proportionally. e.g. padding = 0.2 means the view will span 120% of the object(s) bounding box, and padding = -0.2 means the view will span 80% of the object(s) bounding box.",
                "type": "number",
                "format": "float"
              },
              "type": {
                "type": "string",
                "enum": [
                  "zoom_to_fit"
                ]
              }
            },
            "required": [
              "padding",
              "type"
            ]
          },
          {
            "description": "Fit the view to the scene with an isometric view.",
            "type": "object",
            "properties": {
              "padding": {
                "description": "How much to pad the view frame by.",
                "default": 0.0,
                "type": "number",
                "format": "float"
              },
              "type": {
                "type": "string",
                "enum": [
                  "view_isometric"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Get a concise description of all of an extrusion's faces.",
            "type": "object",
            "properties": {
              "edge_id": {
                "description": "Any edge that lies on the extrusion base path.",
                "type": "string",
                "format": "uuid"
              },
              "object_id": {
                "description": "The Solid3d object whose extrusion is being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_extrusion_face_info"
                ]
              }
            },
            "required": [
              "edge_id",
              "object_id",
              "type"
            ]
          },
          {
            "description": "Exit edit mode",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "edit_mode_exit"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Clear the selection",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "select_clear"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Find all IDs of selected entities",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "select_get"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Get the number of objects in the scene",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "get_num_objects"
                ]
              }
            },
            "required": [
              "type"
            ]
          }
        ]
      },
      "ModelingCmdId": {
        "description": "All commands have unique IDs. These should be randomly generated.",
        "type": "string",
        "format": "uuid"
      },
      "ModelingCmdReq": {
        "description": "A graphics command submitted to the KittyCAD engine via the Modeling API.",
        "type": "object",
        "properties": {
          "cmd": {
            "description": "Which command to submit to the Kittycad engine.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModelingCmd"
              }
            ]
          },
          "cmd_id": {
            "description": "ID of command being submitted.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModelingCmdId"
              }
            ]
          }
        },
        "required": [
          "cmd",
          "cmd_id"
        ]
      },
      "ModelingSessionData": {
        "description": "Successful Websocket response.",
        "type": "object",
        "properties": {
          "api_call_id": {
            "description": "ID of the API call this modeling session is using. Useful for tracing and debugging.",
            "type": "string"
          }
        },
        "required": [
          "api_call_id"
        ]
      },
      "MouseClick": {
        "description": "The response from the `MouseClick` command.",
        "type": "object",
        "properties": {
          "entities_modified": {
            "description": "Entities that are modified.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "entities_selected": {
            "description": "Entities that are selected.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "entities_modified",
          "entities_selected"
        ]
      },
      "OAuth2ClientInfo": {
        "description": "Information about an OAuth 2.0 client.",
        "type": "object",
        "properties": {
          "csrf_token": {
            "description": "Value used for [CSRF](https://tools.ietf.org/html/rfc6749#section-10.12) protection via the `state` parameter.",
            "type": "string"
          },
          "pkce_code_verifier": {
            "nullable": true,
            "description": "Code Verifier used for [PKCE]((https://tools.ietf.org/html/rfc7636)) protection via the `code_verifier` parameter. The value must have a minimum length of 43 characters and a maximum length of 128 characters.  Each character must be ASCII alphanumeric or one of the characters \"-\" / \".\" / \"_\" / \"~\".",
            "type": "string"
          },
          "url": {
            "description": "The URL for consent.",
            "type": "string"
          }
        }
      },
      "OAuth2GrantType": {
        "description": "An OAuth 2.0 Grant Type. These are documented here: <https://oauth.net/2/grant-types/>.",
        "oneOf": [
          {
            "description": "An OAuth 2.0 Device Authorization Grant.",
            "type": "string",
            "enum": [
              "urn:ietf:params:oauth:grant-type:device_code"
            ]
          }
        ]
      },
      "OkModelingCmdResponse": {
        "description": "A successful response from a modeling command. This can be one of several types of responses, depending on the command.",
        "oneOf": [
          {
            "description": "An empty response, used for any command that does not explicitly have a response defined here.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "empty"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "The response to the 'Export' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Export"
              },
              "type": {
                "type": "string",
                "enum": [
                  "export"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'SelectWithPoint' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/SelectWithPoint"
              },
              "type": {
                "type": "string",
                "enum": [
                  "select_with_point"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'HighlightSetEntity' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/HighlightSetEntity"
              },
              "type": {
                "type": "string",
                "enum": [
                  "highlight_set_entity"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'EntityGetChildUuid' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/EntityGetChildUuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_get_child_uuid"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'EntityGetNumChildren' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/EntityGetNumChildren"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_get_num_children"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'EntityGetParentId' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/EntityGetParentId"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_get_parent_id"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'EntityGetAllChildUuids' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/EntityGetAllChildUuids"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_get_all_child_uuids"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'EntityGetSketchPaths' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/EntityGetSketchPaths"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_get_sketch_paths"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'Loft' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Loft"
              },
              "type": {
                "type": "string",
                "enum": [
                  "loft"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'ClosePath' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/ClosePath"
              },
              "type": {
                "type": "string",
                "enum": [
                  "close_path"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'CameraDragMove' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/CameraDragMove"
              },
              "type": {
                "type": "string",
                "enum": [
                  "camera_drag_move"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'CameraDragEnd' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/CameraDragEnd"
              },
              "type": {
                "type": "string",
                "enum": [
                  "camera_drag_end"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'DefaultCameraGetSettings' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/DefaultCameraGetSettings"
              },
              "type": {
                "type": "string",
                "enum": [
                  "default_camera_get_settings"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'DefaultCameraZoom' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/DefaultCameraZoom"
              },
              "type": {
                "type": "string",
                "enum": [
                  "default_camera_zoom"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'ZoomToFit' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/ZoomToFit"
              },
              "type": {
                "type": "string",
                "enum": [
                  "zoom_to_fit"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'ViewIsometric' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/ViewIsometric"
              },
              "type": {
                "type": "string",
                "enum": [
                  "view_isometric"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'GetNumObjects' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/GetNumObjects"
              },
              "type": {
                "type": "string",
                "enum": [
                  "get_num_objects"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'DefaultCameraFocusOn' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/DefaultCameraFocusOn"
              },
              "type": {
                "type": "string",
                "enum": [
                  "default_camera_focus_on"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'SelectGet' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/SelectGet"
              },
              "type": {
                "type": "string",
                "enum": [
                  "select_get"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'Solid3dGetAllEdgeFaces' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Solid3dGetAllEdgeFaces"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_all_edge_faces"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'Solid3dGetAllOppositeEdges' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Solid3dGetAllOppositeEdges"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_all_opposite_edges"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'Solid3dGetOppositeEdge' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Solid3dGetOppositeEdge"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_opposite_edge"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'Solid3dGetNextAdjacentEdge' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Solid3dGetNextAdjacentEdge"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_next_adjacent_edge"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'Solid3dGetPrevAdjacentEdge' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Solid3dGetPrevAdjacentEdge"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_prev_adjacent_edge"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'GetEntityType' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/GetEntityType"
              },
              "type": {
                "type": "string",
                "enum": [
                  "get_entity_type"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'CurveGetControlPoints' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/CurveGetControlPoints"
              },
              "type": {
                "type": "string",
                "enum": [
                  "curve_get_control_points"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'CurveGetType' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/CurveGetType"
              },
              "type": {
                "type": "string",
                "enum": [
                  "curve_get_type"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'MouseClick' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/MouseClick"
              },
              "type": {
                "type": "string",
                "enum": [
                  "mouse_click"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'TakeSnapshot' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/TakeSnapshot"
              },
              "type": {
                "type": "string",
                "enum": [
                  "take_snapshot"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'PathGetInfo' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/PathGetInfo"
              },
              "type": {
                "type": "string",
                "enum": [
                  "path_get_info"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'PathSegmentInfo' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/PathSegmentInfo"
              },
              "type": {
                "type": "string",
                "enum": [
                  "path_segment_info"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'PathGetCurveUuidsForVertices' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/PathGetCurveUuidsForVertices"
              },
              "type": {
                "type": "string",
                "enum": [
                  "path_get_curve_uuids_for_vertices"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'PathGetCurveUuid' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/PathGetCurveUuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "path_get_curve_uuid"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'PathGetVertexUuids' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/PathGetVertexUuids"
              },
              "type": {
                "type": "string",
                "enum": [
                  "path_get_vertex_uuids"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'PathGetSketchTargetUuid' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/PathGetSketchTargetUuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "path_get_sketch_target_uuid"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'CurveGetEndPoints' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/CurveGetEndPoints"
              },
              "type": {
                "type": "string",
                "enum": [
                  "curve_get_end_points"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'FaceIsPlanar' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/FaceIsPlanar"
              },
              "type": {
                "type": "string",
                "enum": [
                  "face_is_planar"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'FaceGetPosition' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/FaceGetPosition"
              },
              "type": {
                "type": "string",
                "enum": [
                  "face_get_position"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'FaceGetCenter' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/FaceGetCenter"
              },
              "type": {
                "type": "string",
                "enum": [
                  "face_get_center"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'FaceGetGradient' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/FaceGetGradient"
              },
              "type": {
                "type": "string",
                "enum": [
                  "face_get_gradient"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'PlaneIntersectAndProject' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/PlaneIntersectAndProject"
              },
              "type": {
                "type": "string",
                "enum": [
                  "plane_intersect_and_project"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'ImportFiles' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/ImportFiles"
              },
              "type": {
                "type": "string",
                "enum": [
                  "import_files"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'ImportedGeometry' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/ImportedGeometry"
              },
              "type": {
                "type": "string",
                "enum": [
                  "imported_geometry"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'Mass' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Mass"
              },
              "type": {
                "type": "string",
                "enum": [
                  "mass"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'Volume' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Volume"
              },
              "type": {
                "type": "string",
                "enum": [
                  "volume"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'Density' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Density"
              },
              "type": {
                "type": "string",
                "enum": [
                  "density"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'SurfaceArea' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/SurfaceArea"
              },
              "type": {
                "type": "string",
                "enum": [
                  "surface_area"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'CenterOfMass' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/CenterOfMass"
              },
              "type": {
                "type": "string",
                "enum": [
                  "center_of_mass"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'GetSketchModePlane' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/GetSketchModePlane"
              },
              "type": {
                "type": "string",
                "enum": [
                  "get_sketch_mode_plane"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'EntityGetDistance' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/EntityGetDistance"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_get_distance"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'EntityLinearPatternTransform' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/EntityLinearPatternTransform"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_linear_pattern_transform"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'EntityLinearPattern' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/EntityLinearPattern"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_linear_pattern"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'EntityCircularPattern' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/EntityCircularPattern"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_circular_pattern"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'Solid3dGetExtrusionFaceInfo' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Solid3dGetExtrusionFaceInfo"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_extrusion_face_info"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response to the 'ExtrusionFaceInfo' endpoint",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/ExtrusionFaceInfo"
              },
              "type": {
                "type": "string",
                "enum": [
                  "extrusion_face_info"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          }
        ]
      },
      "OkWebSocketResponseData": {
        "description": "The websocket messages this server sends.",
        "oneOf": [
          {
            "description": "Information about the ICE servers.",
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "ice_servers": {
                    "description": "Information about the ICE servers.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/IceServer"
                    }
                  }
                },
                "required": [
                  "ice_servers"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "ice_server_info"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The trickle ICE candidate response.",
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "candidate": {
                    "description": "Information about the ICE candidate.",
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/RtcIceCandidateInit"
                      }
                    ]
                  }
                },
                "required": [
                  "candidate"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "trickle_ice"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The SDP answer response.",
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "answer": {
                    "description": "The session description.",
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/RtcSessionDescription"
                      }
                    ]
                  }
                },
                "required": [
                  "answer"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "sdp_answer"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The modeling command response.",
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "modeling_response": {
                    "description": "The result of the command.",
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/OkModelingCmdResponse"
                      }
                    ]
                  }
                },
                "required": [
                  "modeling_response"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "modeling"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "Response to a ModelingBatch.",
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "responses": {
                    "description": "For each request in the batch, maps its ID to the request's outcome.",
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/BatchResponse"
                    }
                  }
                },
                "required": [
                  "responses"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "modeling_batch"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The exported files.",
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "files": {
                    "description": "The exported files",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RawFile"
                    }
                  }
                },
                "required": [
                  "files"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "export"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "Request a collection of metrics, to include WebRTC.",
            "type": "object",
            "properties": {
              "data": {
                "type": "object"
              },
              "type": {
                "type": "string",
                "enum": [
                  "metrics_request"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "Data about the Modeling Session (application-level).",
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "session": {
                    "description": "Data about the Modeling Session (application-level).",
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ModelingSessionData"
                      }
                    ]
                  }
                },
                "required": [
                  "session"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "modeling_session_data"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "Pong response to a Ping message.",
            "type": "object",
            "properties": {
              "data": {
                "type": "object"
              },
              "type": {
                "type": "string",
                "enum": [
                  "pong"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          }
        ]
      },
      "Onboarding": {
        "description": "Onboarding details",
        "type": "object",
        "properties": {
          "first_call_from_modeling_app_date": {
            "nullable": true,
            "title": "DateTime",
            "description": "When the user first used the modeling app.",
            "type": "string",
            "format": "date-time"
          },
          "first_call_from_text_to_cad_date": {
            "nullable": true,
            "title": "DateTime",
            "description": "When the user first used text-to-CAD.",
            "type": "string",
            "format": "date-time"
          },
          "first_token_date": {
            "nullable": true,
            "title": "DateTime",
            "description": "When the user created their first token.",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Org": {
        "description": "An organization.",
        "type": "object",
        "properties": {
          "allow_users_in_domain_to_auto_join": {
            "nullable": true,
            "description": "If we should allow all future users who are created with email addresses from this domain to join the org.",
            "type": "boolean"
          },
          "billing_email": {
            "description": "The billing email address of the org.",
            "type": "string",
            "format": "email"
          },
          "billing_email_verified": {
            "nullable": true,
            "title": "DateTime",
            "description": "The date and time the billing email address was verified.",
            "type": "string",
            "format": "date-time"
          },
          "block": {
            "nullable": true,
            "description": "If the org should be blocked and the reason why.",
            "allOf": [
              {
                "$ref": "#/components/schemas/BlockReason"
              }
            ]
          },
          "can_train_on_data": {
            "description": "If we can train on the orgs's data. This value overrides any individual user's `can_train_on_data` value if they are a member of the org.",
            "default": false,
            "type": "boolean"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the org was created.",
            "type": "string",
            "format": "date-time"
          },
          "domain": {
            "nullable": true,
            "description": "The org's domain.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the org.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "image": {
            "nullable": true,
            "title": "String",
            "description": "The image for the org. This is a URL.",
            "type": "string",
            "format": "uri"
          },
          "name": {
            "description": "The name of the org.",
            "type": "string"
          },
          "phone": {
            "title": "String",
            "description": "The org's phone number.",
            "default": "",
            "type": "string",
            "format": "phone"
          },
          "stripe_id": {
            "nullable": true,
            "description": "The org's stripe id.",
            "type": "string"
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the org was last updated.",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "created_at",
          "id",
          "updated_at"
        ]
      },
      "OrgDetails": {
        "description": "The user-modifiable parts of an organization.",
        "type": "object",
        "properties": {
          "allow_users_in_domain_to_auto_join": {
            "nullable": true,
            "description": "If we should allow all future users who are created with email addresses from this domain to join the org.",
            "type": "boolean"
          },
          "billing_email": {
            "description": "The billing email address of the org.",
            "type": "string",
            "format": "email"
          },
          "domain": {
            "nullable": true,
            "description": "The org's domain.",
            "type": "string"
          },
          "image": {
            "nullable": true,
            "title": "String",
            "description": "The image for the org. This is a URL.",
            "type": "string",
            "format": "uri"
          },
          "name": {
            "description": "The name of the org.",
            "type": "string"
          },
          "phone": {
            "title": "String",
            "description": "The org's phone number.",
            "default": "",
            "type": "string",
            "format": "phone"
          }
        }
      },
      "OrgMember": {
        "description": "A member of an organization.",
        "type": "object",
        "properties": {
          "company": {
            "description": "The user's company.",
            "type": "string"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the user was created.",
            "type": "string",
            "format": "date-time"
          },
          "discord": {
            "description": "The user's Discord handle.",
            "type": "string"
          },
          "email": {
            "description": "The email address of the user.",
            "type": "string",
            "format": "email"
          },
          "email_verified": {
            "nullable": true,
            "title": "DateTime",
            "description": "The date and time the email address was verified.",
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "description": "The user's first name.",
            "type": "string"
          },
          "github": {
            "description": "The user's GitHub handle.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the user.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "image": {
            "title": "String",
            "description": "The image avatar for the user. This is a URL.",
            "type": "string",
            "format": "uri"
          },
          "last_name": {
            "description": "The user's last name.",
            "type": "string"
          },
          "name": {
            "description": "The name of the user. This is auto populated at first from the authentication provider (if there was a name). It can be updated by the user by updating their `first_name` and `last_name` fields.",
            "type": "string"
          },
          "phone": {
            "title": "String",
            "description": "The user's phone number.",
            "default": "",
            "type": "string",
            "format": "phone"
          },
          "role": {
            "description": "The user's role in the org.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OrgRole"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the user was last updated.",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "created_at",
          "id",
          "image",
          "role",
          "updated_at"
        ]
      },
      "OrgMemberResultsPage": {
        "description": "A single page of results",
        "type": "object",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrgMember"
            }
          },
          "next_page": {
            "nullable": true,
            "description": "token used to fetch the next page of results (if any)",
            "type": "string"
          }
        },
        "required": [
          "items"
        ]
      },
      "OrgResultsPage": {
        "description": "A single page of results",
        "type": "object",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Org"
            }
          },
          "next_page": {
            "nullable": true,
            "description": "token used to fetch the next page of results (if any)",
            "type": "string"
          }
        },
        "required": [
          "items"
        ]
      },
      "OrgRole": {
        "description": "The roles in an organization.",
        "oneOf": [
          {
            "description": "Admins can do anything in the org.",
            "type": "string",
            "enum": [
              "admin"
            ]
          },
          {
            "description": "Members of an org can not modify an org, but they belong in the org.",
            "type": "string",
            "enum": [
              "member"
            ]
          },
          {
            "description": "A service account role.",
            "type": "string",
            "enum": [
              "service_account"
            ]
          }
        ]
      },
      "OutputFile": {
        "description": "Output file contents.\n\n<details><summary>JSON schema</summary>\n\n```json { \"description\": \"Output file contents.\", \"type\": \"object\", \"properties\": { \"contents\": { \"description\": \"The contents of the file. This is base64 encoded so we can ensure it is UTF-8 for JSON.\", \"type\": \"string\" }, \"name\": { \"description\": \"The name of the file.\", \"default\": \"\", \"type\": \"string\" } } } ``` </details>",
        "type": "object",
        "properties": {
          "contents": {
            "nullable": true,
            "description": "The contents of the file. This is base64 encoded so we can ensure it is UTF-8 for JSON.",
            "type": "string"
          },
          "name": {
            "description": "The name of the file.",
            "default": "",
            "type": "string"
          }
        }
      },
      "OutputFormat": {
        "description": "Output format specifier.",
        "oneOf": [
          {
            "description": "Autodesk Filmbox (FBX) format.",
            "type": "object",
            "properties": {
              "storage": {
                "description": "Specifies which kind of FBX will be exported.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FbxStorage"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "fbx"
                ]
              }
            },
            "required": [
              "storage",
              "type"
            ]
          },
          {
            "description": "glTF 2.0. We refer to this as glTF since that is how our customers refer to it, although by default it will be in binary format and thus technically (glb). If you prefer ASCII output, you can set that option for the export.",
            "type": "object",
            "properties": {
              "presentation": {
                "description": "Specifies how the JSON will be presented.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GltfPresentation"
                  }
                ]
              },
              "storage": {
                "description": "Specifies which kind of glTF 2.0 will be exported.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GltfStorage"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "gltf"
                ]
              }
            },
            "required": [
              "presentation",
              "storage",
              "type"
            ]
          },
          {
            "description": "Wavefront OBJ format.",
            "type": "object",
            "properties": {
              "coords": {
                "description": "Co-ordinate system of output data.\n\nDefaults to the [KittyCAD co-ordinate system].\n\n[KittyCAD co-ordinate system]: ../coord/constant.KITTYCAD.html",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/System"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "obj"
                ]
              },
              "units": {
                "description": "Export length unit.\n\nDefaults to meters.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              }
            },
            "required": [
              "coords",
              "type",
              "units"
            ]
          },
          {
            "description": "The PLY Polygon File Format.",
            "type": "object",
            "properties": {
              "coords": {
                "description": "Co-ordinate system of output data.\n\nDefaults to the [KittyCAD co-ordinate system].\n\n[KittyCAD co-ordinate system]: ../coord/constant.KITTYCAD.html",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/System"
                  }
                ]
              },
              "selection": {
                "description": "Export selection.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Selection"
                  }
                ]
              },
              "storage": {
                "description": "The storage for the output PLY file.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PlyStorage"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "ply"
                ]
              },
              "units": {
                "description": "Export length unit.\n\nDefaults to meters.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              }
            },
            "required": [
              "coords",
              "selection",
              "storage",
              "type",
              "units"
            ]
          },
          {
            "description": "ISO 10303-21 (STEP) format.",
            "type": "object",
            "properties": {
              "coords": {
                "description": "Co-ordinate system of output data.\n\nDefaults to the [KittyCAD co-ordinate system].\n\n[KittyCAD co-ordinate system]: ../coord/constant.KITTYCAD.html",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/System"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "step"
                ]
              }
            },
            "required": [
              "coords",
              "type"
            ]
          },
          {
            "description": "*ST**ereo**L**ithography format.",
            "type": "object",
            "properties": {
              "coords": {
                "description": "Co-ordinate system of output data.\n\nDefaults to the [KittyCAD co-ordinate system].\n\n[KittyCAD co-ordinate system]: ../coord/constant.KITTYCAD.html",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/System"
                  }
                ]
              },
              "selection": {
                "description": "Export selection.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Selection"
                  }
                ]
              },
              "storage": {
                "description": "Export storage.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StlStorage"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "stl"
                ]
              },
              "units": {
                "description": "Export length unit.\n\nDefaults to meters.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              }
            },
            "required": [
              "coords",
              "selection",
              "storage",
              "type",
              "units"
            ]
          }
        ]
      },
      "PathCommand": {
        "description": "The path component command type (within a Path)",
        "type": "string",
        "enum": [
          "move_to",
          "line_to",
          "bez_curve_to",
          "nurbs_curve_to",
          "add_arc"
        ]
      },
      "PathComponentConstraintBound": {
        "description": "The path component constraint bounds type",
        "type": "string",
        "enum": [
          "unconstrained",
          "partially_constrained",
          "fully_constrained"
        ]
      },
      "PathComponentConstraintType": {
        "description": "The path component constraint type",
        "type": "string",
        "enum": [
          "unconstrained",
          "vertical",
          "horizontal",
          "equal_length",
          "parallel",
          "angle_between"
        ]
      },
      "PathGetCurveUuid": {
        "description": "The response from the `PathGetCurveUuid` command.",
        "type": "object",
        "properties": {
          "curve_id": {
            "description": "The UUID of the curve entity.",
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "curve_id"
        ]
      },
      "PathGetCurveUuidsForVertices": {
        "description": "The response from the `PathGetCurveUuidsForVertices` command.",
        "type": "object",
        "properties": {
          "curve_ids": {
            "description": "The UUIDs of the curve entities.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "curve_ids"
        ]
      },
      "PathGetInfo": {
        "description": "The response from the `PathGetInfo` command.",
        "type": "object",
        "properties": {
          "segments": {
            "description": "All segments in the path, in the order they were added.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PathSegmentInfo"
            }
          }
        },
        "required": [
          "segments"
        ]
      },
      "PathGetSketchTargetUuid": {
        "description": "The response from the `PathGetSketchTargetUuid` command.",
        "type": "object",
        "properties": {
          "target_id": {
            "nullable": true,
            "description": "The UUID of the sketch target.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "PathGetVertexUuids": {
        "description": "The response from the `PathGetVertexUuids` command.",
        "type": "object",
        "properties": {
          "vertex_ids": {
            "description": "The UUIDs of the vertex entities.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "vertex_ids"
        ]
      },
      "PathSegment": {
        "description": "A segment of a path. Paths are composed of many segments.",
        "oneOf": [
          {
            "description": "A straight line segment. Goes from the current path \"pen\" to the given endpoint.",
            "type": "object",
            "properties": {
              "end": {
                "description": "End point of the line.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "relative": {
                "description": "Whether or not this line is a relative offset",
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "enum": [
                  "line"
                ]
              }
            },
            "required": [
              "end",
              "relative",
              "type"
            ]
          },
          {
            "description": "A circular arc segment. Arcs can be drawn clockwise when start > end.",
            "type": "object",
            "properties": {
              "center": {
                "description": "Center of the circle",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              },
              "end": {
                "description": "End of the arc along circle's perimeter.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Angle"
                  }
                ]
              },
              "radius": {
                "description": "Radius of the circle",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LengthUnit"
                  }
                ]
              },
              "relative": {
                "description": "Whether or not this arc is a relative offset",
                "type": "boolean"
              },
              "start": {
                "description": "Start of the arc along circle's perimeter.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Angle"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "arc"
                ]
              }
            },
            "required": [
              "center",
              "end",
              "radius",
              "relative",
              "start",
              "type"
            ]
          },
          {
            "description": "A cubic bezier curve segment. Start at the end of the current line, go through control point 1 and 2, then end at a given point.",
            "type": "object",
            "properties": {
              "control1": {
                "description": "First control point.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "control2": {
                "description": "Second control point.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "end": {
                "description": "Final control point.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "relative": {
                "description": "Whether or not this bezier is a relative offset",
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "enum": [
                  "bezier"
                ]
              }
            },
            "required": [
              "control1",
              "control2",
              "end",
              "relative",
              "type"
            ]
          },
          {
            "description": "Adds a tangent arc from current pen position with the given radius and angle.",
            "type": "object",
            "properties": {
              "offset": {
                "description": "Offset of the arc. Negative values will arc clockwise.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Angle"
                  }
                ]
              },
              "radius": {
                "description": "Radius of the arc. Not to be confused with Raiders of the Lost Ark.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LengthUnit"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "tangential_arc"
                ]
              }
            },
            "required": [
              "offset",
              "radius",
              "type"
            ]
          },
          {
            "description": "Adds a tangent arc from current pen position to the new position. Arcs will choose a clockwise or counter-clockwise direction based on the arc end position.",
            "type": "object",
            "properties": {
              "angle_snap_increment": {
                "nullable": true,
                "description": "0 will be interpreted as none/null.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Angle"
                  }
                ]
              },
              "to": {
                "description": "Where the arc should end. Must lie in the same plane as the current path pen position. Must not be colinear with current path pen position.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "tangential_arc_to"
                ]
              }
            },
            "required": [
              "to",
              "type"
            ]
          }
        ]
      },
      "PathSegmentInfo": {
        "description": "Info about a path segment",
        "type": "object",
        "properties": {
          "command": {
            "description": "What is the path segment?",
            "allOf": [
              {
                "$ref": "#/components/schemas/PathCommand"
              }
            ]
          },
          "command_id": {
            "nullable": true,
            "description": "Which command created this path? This field is absent if the path command is not actually creating a path segment, e.g. moving the pen doesn't create a path segment.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModelingCmdId"
              }
            ]
          },
          "relative": {
            "description": "Whether or not this segment is a relative offset",
            "type": "boolean"
          }
        },
        "required": [
          "command",
          "relative"
        ]
      },
      "PaymentIntent": {
        "description": "A payment intent response.",
        "type": "object",
        "properties": {
          "client_secret": {
            "description": "The client secret is used for client-side retrieval using a publishable key. The client secret can be used to complete payment setup from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.",
            "type": "string"
          }
        },
        "required": [
          "client_secret"
        ]
      },
      "PaymentMethod": {
        "description": "A payment method.",
        "type": "object",
        "properties": {
          "billing_info": {
            "description": "The billing info for the payment method.",
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingInfo"
              }
            ]
          },
          "card": {
            "nullable": true,
            "description": "The card, if it is one. For our purposes, this is the only type of payment method that we support.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CardDetails"
              }
            ]
          },
          "created_at": {
            "description": "Time at which the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "metadata": {
            "description": "Set of key-value pairs.",
            "default": {},
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "type": {
            "description": "The type of payment method.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodType"
              }
            ]
          }
        },
        "required": [
          "billing_info",
          "created_at",
          "type"
        ]
      },
      "PaymentMethodCardChecks": {
        "description": "Card checks.",
        "type": "object",
        "properties": {
          "address_line1_check": {
            "description": "If a address line1 was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "type": "string"
          },
          "address_postal_code_check": {
            "description": "If a address postal code was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "type": "string"
          },
          "cvc_check": {
            "description": "If a CVC was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "type": "string"
          }
        }
      },
      "PaymentMethodType": {
        "description": "An enum representing the possible values of an `PaymentMethod`'s `type` field.",
        "oneOf": [
          {
            "description": "A card payment method.",
            "type": "string",
            "enum": [
              "card"
            ]
          }
        ]
      },
      "PerspectiveCameraParameters": {
        "description": "Defines a perspective view.",
        "type": "object",
        "properties": {
          "fov_y": {
            "nullable": true,
            "description": "Camera frustum vertical field of view.",
            "type": "number",
            "format": "float"
          },
          "z_far": {
            "nullable": true,
            "description": "Camera frustum far plane.",
            "type": "number",
            "format": "float"
          },
          "z_near": {
            "nullable": true,
            "description": "Camera frustum near plane.",
            "type": "number",
            "format": "float"
          }
        }
      },
      "PlanInterval": {
        "description": "A plan's interval.",
        "oneOf": [
          {
            "description": "Day.",
            "type": "string",
            "enum": [
              "day"
            ]
          },
          {
            "description": "Month.",
            "type": "string",
            "enum": [
              "month"
            ]
          },
          {
            "description": "Week.",
            "type": "string",
            "enum": [
              "week"
            ]
          },
          {
            "description": "Year.",
            "type": "string",
            "enum": [
              "year"
            ]
          }
        ]
      },
      "PlaneIntersectAndProject": {
        "description": "Corresponding coordinates of given window coordinates, intersected on given plane.",
        "type": "object",
        "properties": {
          "plane_coordinates": {
            "nullable": true,
            "description": "Corresponding coordinates of given window coordinates, intersected on given plane.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point2d"
              }
            ]
          }
        }
      },
      "PlyStorage": {
        "description": "The storage for the output PLY file.",
        "oneOf": [
          {
            "description": "Write numbers in their ascii representation (e.g. -13, 6.28, etc.). Properties are separated by spaces and elements are separated by line breaks.",
            "type": "string",
            "enum": [
              "ascii"
            ]
          },
          {
            "description": "Encode payload as binary using little endian.",
            "type": "string",
            "enum": [
              "binary_little_endian"
            ]
          },
          {
            "description": "Encode payload as binary using big endian.",
            "type": "string",
            "enum": [
              "binary_big_endian"
            ]
          }
        ]
      },
      "Point2d": {
        "description": "A point in 2D space",
        "type": "object",
        "properties": {
          "x": {
            "$ref": "#/components/schemas/LengthUnit"
          },
          "y": {
            "$ref": "#/components/schemas/LengthUnit"
          }
        },
        "required": [
          "x",
          "y"
        ]
      },
      "Point3d": {
        "description": "A point in 3D space",
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "float"
          },
          "y": {
            "type": "number",
            "format": "float"
          },
          "z": {
            "type": "number",
            "format": "float"
          }
        },
        "required": [
          "x",
          "y",
          "z"
        ]
      },
      "Point4d": {
        "description": "A point in homogeneous (4D) space",
        "type": "object",
        "properties": {
          "w": {
            "type": "number",
            "format": "float"
          },
          "x": {
            "type": "number",
            "format": "float"
          },
          "y": {
            "type": "number",
            "format": "float"
          },
          "z": {
            "type": "number",
            "format": "float"
          }
        },
        "required": [
          "w",
          "x",
          "y",
          "z"
        ]
      },
      "Pong": {
        "description": "The response from the `/ping` endpoint.",
        "type": "object",
        "properties": {
          "message": {
            "description": "The pong response.",
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "PostEffectType": {
        "description": "Post effect type",
        "type": "string",
        "enum": [
          "phosphor",
          "ssao",
          "noeffect"
        ]
      },
      "PrivacySettings": {
        "description": "Privacy settings for an org or user.",
        "type": "object",
        "properties": {
          "can_train_on_data": {
            "description": "If we can train on the data. If the user is a member of an organization, the organization's setting will override this. The organization's setting takes priority.",
            "type": "boolean"
          }
        },
        "required": [
          "can_train_on_data"
        ]
      },
      "RawFile": {
        "description": "A raw file with unencoded contents to be passed over binary websockets. When raw files come back for exports it is sent as binary/bson, not text/json.",
        "type": "object",
        "properties": {
          "contents": {
            "description": "The contents of the file.",
            "type": "array",
            "items": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0
            }
          },
          "name": {
            "description": "The name of the file.",
            "type": "string"
          }
        },
        "required": [
          "contents",
          "name"
        ]
      },
      "RtcIceCandidateInit": {
        "description": "ICECandidateInit is used to serialize ice candidates",
        "type": "object",
        "properties": {
          "candidate": {
            "description": "The candidate string associated with the object.",
            "type": "string"
          },
          "sdpMLineIndex": {
            "nullable": true,
            "description": "The index (starting at zero) of the m-line in the SDP this candidate is associated with.",
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          },
          "sdpMid": {
            "nullable": true,
            "description": "The identifier of the \"media stream identification\" as defined in [RFC 8841](https://tools.ietf.org/html/rfc8841).",
            "type": "string"
          },
          "usernameFragment": {
            "nullable": true,
            "description": "The username fragment (as defined in [RFC 8445](https://tools.ietf.org/html/rfc8445#section-5.2.1)) associated with the object.",
            "type": "string"
          }
        },
        "required": [
          "candidate"
        ]
      },
      "RtcSdpType": {
        "description": "SDPType describes the type of an SessionDescription.",
        "oneOf": [
          {
            "description": "Unspecified indicates that the type is unspecified.",
            "type": "string",
            "enum": [
              "unspecified"
            ]
          },
          {
            "description": "indicates that a description MUST be treated as an SDP offer.",
            "type": "string",
            "enum": [
              "offer"
            ]
          },
          {
            "description": "indicates that a description MUST be treated as an SDP answer, but not a final answer. A description used as an SDP pranswer may be applied as a response to an SDP offer, or an update to a previously sent SDP pranswer.",
            "type": "string",
            "enum": [
              "pranswer"
            ]
          },
          {
            "description": "indicates that a description MUST be treated as an SDP final answer, and the offer-answer exchange MUST be considered complete. A description used as an SDP answer may be applied as a response to an SDP offer or as an update to a previously sent SDP pranswer.",
            "type": "string",
            "enum": [
              "answer"
            ]
          },
          {
            "description": "indicates that a description MUST be treated as canceling the current SDP negotiation and moving the SDP offer and answer back to what it was in the previous stable state. Note the local or remote SDP descriptions in the previous stable state could be null if there has not yet been a successful offer-answer negotiation.",
            "type": "string",
            "enum": [
              "rollback"
            ]
          }
        ]
      },
      "RtcSessionDescription": {
        "description": "SessionDescription is used to expose local and remote session descriptions.",
        "type": "object",
        "properties": {
          "sdp": {
            "description": "SDP string.",
            "type": "string"
          },
          "type": {
            "description": "SDP type.",
            "allOf": [
              {
                "$ref": "#/components/schemas/RtcSdpType"
              }
            ]
          }
        },
        "required": [
          "sdp",
          "type"
        ]
      },
      "SamlIdentityProvider": {
        "description": "A SAML identity provider.",
        "type": "object",
        "properties": {
          "acs_url": {
            "title": "String",
            "description": "The ACS (Assertion Consumer Service) url.",
            "type": "string",
            "format": "uri"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the SAML identity provider was created.",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "description": "The unique identifier for the SAML identity provider.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "idp_entity_id": {
            "description": "The entity ID of the SAML identity provider.",
            "type": "string"
          },
          "idp_metadata_document_string": {
            "description": "The metadata document as a string.",
            "type": "string"
          },
          "org_id": {
            "description": "The organization ID the SAML identity provider belongs to.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "private_key": {
            "nullable": true,
            "title": "String",
            "description": "The private key for the SAML identity provider. This is the PEM corresponding to the X509 pair.",
            "type": "string",
            "format": "byte"
          },
          "public_cert": {
            "nullable": true,
            "title": "String",
            "description": "The public certificate for the SAML identity provider. This is the PEM corresponding to the X509 pair.",
            "type": "string",
            "format": "byte"
          },
          "slo_url": {
            "title": "String",
            "description": "The SLO (Single Logout) url.",
            "type": "string",
            "format": "uri"
          },
          "technical_contact_email": {
            "description": "The technical contact email address for the SAML identity provider.",
            "type": "string",
            "format": "email"
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the SAML identity provider was last updated.",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "acs_url",
          "created_at",
          "id",
          "org_id",
          "slo_url",
          "updated_at"
        ]
      },
      "SamlIdentityProviderCreate": {
        "description": "Parameters for creating a SAML identity provider.",
        "type": "object",
        "properties": {
          "idp_entity_id": {
            "description": "The entity ID of the SAML identity provider.",
            "type": "string"
          },
          "idp_metadata_source": {
            "description": "The source of an identity provider metadata descriptor.",
            "allOf": [
              {
                "$ref": "#/components/schemas/IdpMetadataSource"
              }
            ]
          },
          "signing_keypair": {
            "nullable": true,
            "description": "The request signing key pair.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DerEncodedKeyPair"
              }
            ]
          },
          "technical_contact_email": {
            "description": "The technical contact email address for the SAML identity provider.",
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "idp_metadata_source"
        ]
      },
      "SceneSelectionType": {
        "description": "The type of scene selection change",
        "oneOf": [
          {
            "description": "Replaces the selection",
            "type": "string",
            "enum": [
              "replace"
            ]
          },
          {
            "description": "Adds to the selection",
            "type": "string",
            "enum": [
              "add"
            ]
          },
          {
            "description": "Removes from the selection",
            "type": "string",
            "enum": [
              "remove"
            ]
          }
        ]
      },
      "SceneToolType": {
        "description": "The type of scene's active tool",
        "type": "string",
        "enum": [
          "camera_revolve",
          "select",
          "move",
          "sketch_line",
          "sketch_tangential_arc",
          "sketch_curve",
          "sketch_curve_mod"
        ]
      },
      "SelectGet": {
        "description": "The response from the `SelectGet` command.",
        "type": "object",
        "properties": {
          "entity_ids": {
            "description": "The UUIDs of the selected entities.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "entity_ids"
        ]
      },
      "SelectWithPoint": {
        "description": "The response from the `SelectWithPoint` command.",
        "type": "object",
        "properties": {
          "entity_id": {
            "nullable": true,
            "description": "The UUID of the entity that was selected.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Selection": {
        "description": "Data item selection.",
        "oneOf": [
          {
            "description": "Visit the default scene.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "default_scene"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Visit the indexed scene.",
            "type": "object",
            "properties": {
              "index": {
                "description": "The index.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              },
              "type": {
                "type": "string",
                "enum": [
                  "scene_by_index"
                ]
              }
            },
            "required": [
              "index",
              "type"
            ]
          },
          {
            "description": "Visit the first scene with the given name.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name.",
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "scene_by_name"
                ]
              }
            },
            "required": [
              "name",
              "type"
            ]
          },
          {
            "description": "Visit the indexed mesh.",
            "type": "object",
            "properties": {
              "index": {
                "description": "The index.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              },
              "type": {
                "type": "string",
                "enum": [
                  "mesh_by_index"
                ]
              }
            },
            "required": [
              "index",
              "type"
            ]
          },
          {
            "description": "Visit the first mesh with the given name.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name.",
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "mesh_by_name"
                ]
              }
            },
            "required": [
              "name",
              "type"
            ]
          }
        ]
      },
      "ServiceAccount": {
        "description": "A service account.\n\nThese are used to authenticate orgs with Bearer authentication.\n\nThis works just like an API token, but it is tied to an organization versus an individual user.",
        "type": "object",
        "properties": {
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the API token was created.",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "description": "The unique identifier for the API token.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "is_valid": {
            "description": "If the token is valid. We never delete API tokens, but we can mark them as invalid. We save them for ever to preserve the history of the API token.",
            "type": "boolean"
          },
          "label": {
            "nullable": true,
            "description": "An optional label for the API token.",
            "type": "string"
          },
          "org_id": {
            "description": "The ID of the organization that owns the API token.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "token": {
            "description": "The API token itself.",
            "allOf": [
              {
                "$ref": "#/components/schemas/StringUuid"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the API token was last updated.",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "created_at",
          "id",
          "is_valid",
          "org_id",
          "token",
          "updated_at"
        ]
      },
      "ServiceAccountResultsPage": {
        "description": "A single page of results",
        "type": "object",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceAccount"
            }
          },
          "next_page": {
            "nullable": true,
            "description": "token used to fetch the next page of results (if any)",
            "type": "string"
          }
        },
        "required": [
          "items"
        ]
      },
      "Session": {
        "description": "An authentication session.",
        "type": "object",
        "properties": {
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the session was created.",
            "type": "string",
            "format": "date-time"
          },
          "expires": {
            "title": "DateTime",
            "description": "The date and time the session expires.",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "description": "The unique identifier for the session.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "session_token": {
            "description": "The session token.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SessionTokenUuid"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the session was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user that the session belongs to.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "expires",
          "id",
          "session_token",
          "updated_at",
          "user_id"
        ]
      },
      "SessionTokenUuid": {
        "description": "An auth token. A uuid with a prefix of ses-",
        "type": "string"
      },
      "Solid3dGetAllEdgeFaces": {
        "description": "The response from the `Solid3dGetAllEdgeFaces` command.",
        "type": "object",
        "properties": {
          "faces": {
            "description": "The UUIDs of the faces.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "faces"
        ]
      },
      "Solid3dGetAllOppositeEdges": {
        "description": "The response from the `Solid3dGetAllOppositeEdges` command.",
        "type": "object",
        "properties": {
          "edges": {
            "description": "The UUIDs of the edges.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "edges"
        ]
      },
      "Solid3dGetExtrusionFaceInfo": {
        "description": "Extrusion face info struct (useful for maintaining mappings between source path segment ids and extrusion faces)",
        "type": "object",
        "properties": {
          "faces": {
            "description": "Details of each face.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtrusionFaceInfo"
            }
          }
        },
        "required": [
          "faces"
        ]
      },
      "Solid3dGetNextAdjacentEdge": {
        "description": "The response from the `Solid3dGetNextAdjacentEdge` command.",
        "type": "object",
        "properties": {
          "edge": {
            "nullable": true,
            "description": "The UUID of the edge.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Solid3dGetOppositeEdge": {
        "description": "The response from the `Solid3dGetOppositeEdge` command.",
        "type": "object",
        "properties": {
          "edge": {
            "description": "The UUID of the edge.",
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "edge"
        ]
      },
      "Solid3dGetPrevAdjacentEdge": {
        "description": "The response from the `Solid3dGetPrevAdjacentEdge` command.",
        "type": "object",
        "properties": {
          "edge": {
            "nullable": true,
            "description": "The UUID of the edge.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "SourcePosition": {
        "description": "A position in the source code.",
        "type": "object",
        "properties": {
          "column": {
            "description": "The column number.",
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "line": {
            "description": "The line number.",
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "required": [
          "column",
          "line"
        ]
      },
      "SourceRange": {
        "description": "A source range of code.",
        "type": "object",
        "properties": {
          "end": {
            "description": "The end of the range.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourcePosition"
              }
            ]
          },
          "start": {
            "description": "The start of the range.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourcePosition"
              }
            ]
          }
        },
        "required": [
          "end",
          "start"
        ]
      },
      "SourceRangePrompt": {
        "description": "A source range and prompt for a text to CAD iteration.",
        "type": "object",
        "properties": {
          "prompt": {
            "description": "The prompt for the changes.",
            "type": "string"
          },
          "range": {
            "description": "The range of the source code to change.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceRange"
              }
            ]
          }
        },
        "required": [
          "prompt",
          "range"
        ]
      },
      "StlStorage": {
        "description": "Export storage.",
        "oneOf": [
          {
            "description": "Plaintext encoding.",
            "type": "string",
            "enum": [
              "ascii"
            ]
          },
          {
            "description": "Binary STL encoding.\n\nThis is the default setting.",
            "type": "string",
            "enum": [
              "binary"
            ]
          }
        ]
      },
      "StoreCouponParams": {
        "description": "The parameters for a new store coupon.",
        "type": "object",
        "properties": {
          "percent_off": {
            "description": "The percentage off.",
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "required": [
          "percent_off"
        ]
      },
      "StringUuid": {
        "description": "An auth token. A UUIDv4",
        "type": "string"
      },
      "SubscriptionTierFeature": {
        "description": "A subscription tier feature.",
        "type": "object",
        "properties": {
          "info": {
            "description": "Information about the feature.",
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        },
        "required": [
          "info"
        ]
      },
      "SubscriptionTierPrice": {
        "description": "The price for a subscription tier.",
        "oneOf": [
          {
            "description": "A flat price that we publicly list.",
            "type": "object",
            "properties": {
              "interval": {
                "description": "The interval the price is charged.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PlanInterval"
                  }
                ]
              },
              "price": {
                "title": "double",
                "description": "The price.",
                "type": "number",
                "format": "money-usd"
              },
              "type": {
                "type": "string",
                "enum": [
                  "flat"
                ]
              }
            },
            "required": [
              "interval",
              "price",
              "type"
            ]
          },
          {
            "description": "A per user price that we publicly list.",
            "type": "object",
            "properties": {
              "interval": {
                "description": "The interval the price is charged.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PlanInterval"
                  }
                ]
              },
              "price": {
                "title": "double",
                "description": "The price.",
                "type": "number",
                "format": "money-usd"
              },
              "type": {
                "type": "string",
                "enum": [
                  "per_user"
                ]
              }
            },
            "required": [
              "interval",
              "price",
              "type"
            ]
          },
          {
            "description": "Enterprise: The price is not listed and the user needs to contact sales.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "enterprise"
                ]
              }
            },
            "required": [
              "type"
            ]
          }
        ]
      },
      "SubscriptionTierType": {
        "description": "An enum representing a subscription tier type.",
        "oneOf": [
          {
            "description": "A subscription tier that can be applied to individuals only.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "individual"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "An subscription tier that can be applied to organizations only.",
            "type": "object",
            "properties": {
              "saml_sso": {
                "description": "Whether or not the subscription type supports SAML SSO.",
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "enum": [
                  "organization"
                ]
              }
            },
            "required": [
              "saml_sso",
              "type"
            ]
          }
        ]
      },
      "SubscriptionTrainingDataBehavior": {
        "description": "An enum representing a subscription training data behavior.",
        "oneOf": [
          {
            "description": "The data is always used for training and cannot be turned off.",
            "type": "string",
            "enum": [
              "always"
            ]
          },
          {
            "description": "The data is used for training by default, but can be turned off.",
            "type": "string",
            "enum": [
              "default_on"
            ]
          },
          {
            "description": "The data is not used for training by default, but can be turned on.",
            "type": "string",
            "enum": [
              "default_off"
            ]
          }
        ]
      },
      "SuccessWebSocketResponse": {
        "description": "Successful Websocket response.",
        "type": "object",
        "properties": {
          "request_id": {
            "nullable": true,
            "description": "Which request this is a response to. If the request was a modeling command, this is the modeling command ID. If no request ID was sent, this will be null.",
            "type": "string",
            "format": "uuid"
          },
          "resp": {
            "description": "The data sent with a successful response. This will be flattened into a 'type' and 'data' field.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OkWebSocketResponseData"
              }
            ]
          },
          "success": {
            "description": "Always true",
            "type": "boolean"
          }
        },
        "required": [
          "resp",
          "success"
        ]
      },
      "SupportTier": {
        "description": "The support tier the subscription provides.",
        "oneOf": [
          {
            "description": "Community support.",
            "type": "string",
            "enum": [
              "community"
            ]
          },
          {
            "description": "Standard support.",
            "type": "string",
            "enum": [
              "standard"
            ]
          },
          {
            "description": "Premium support.",
            "type": "string",
            "enum": [
              "premium"
            ]
          },
          {
            "description": "Priority support.",
            "type": "string",
            "enum": [
              "priority"
            ]
          }
        ]
      },
      "SurfaceArea": {
        "description": "The surface area response.",
        "type": "object",
        "properties": {
          "output_unit": {
            "description": "The output unit for the surface area.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitArea"
              }
            ]
          },
          "surface_area": {
            "description": "The surface area.",
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "output_unit",
          "surface_area"
        ]
      },
      "System": {
        "description": "Co-ordinate system definition.\n\nThe `up` axis must be orthogonal to the `forward` axis.\n\nSee [cglearn.eu] for background reading.\n\n[cglearn.eu](https://cglearn.eu/pub/computer-graphics/introduction-to-geometry#material-coordinate-systems-1)",
        "type": "object",
        "properties": {
          "forward": {
            "description": "Axis the front face of a model looks along.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AxisDirectionPair"
              }
            ]
          },
          "up": {
            "description": "Axis pointing up and away from a model.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AxisDirectionPair"
              }
            ]
          }
        },
        "required": [
          "forward",
          "up"
        ]
      },
      "TakeSnapshot": {
        "description": "The response from the `TakeSnapshot` command.",
        "type": "object",
        "properties": {
          "contents": {
            "title": "String",
            "description": "Contents of the image.",
            "type": "string",
            "format": "byte"
          }
        },
        "required": [
          "contents"
        ]
      },
      "TextToCad": {
        "description": "A response from a text to CAD prompt.",
        "type": "object",
        "properties": {
          "code": {
            "nullable": true,
            "description": "The code for the model. This is optional but will be required in the future once we are at v1.",
            "type": "string"
          },
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "feedback": {
            "nullable": true,
            "description": "Feedback from the user, if any.",
            "allOf": [
              {
                "$ref": "#/components/schemas/MlFeedback"
              }
            ]
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "model": {
            "description": "The model being used.",
            "allOf": [
              {
                "$ref": "#/components/schemas/TextToCadModel"
              }
            ]
          },
          "model_version": {
            "description": "The version of the model.",
            "type": "string"
          },
          "output_format": {
            "description": "The output format of the model.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileExportFormat"
              }
            ]
          },
          "outputs": {
            "description": "The output of the model in the given file format the user requested, base64 encoded. The key of the map is the path of the output file.",
            "type": "object",
            "additionalProperties": {
              "title": "String",
              "type": "string",
              "format": "byte"
            }
          },
          "prompt": {
            "description": "The prompt.",
            "type": "string"
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "model",
          "model_version",
          "output_format",
          "prompt",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "TextToCadCreateBody": {
        "description": "Body for generating models from text.",
        "type": "object",
        "properties": {
          "prompt": {
            "description": "The prompt for the model.",
            "type": "string"
          }
        },
        "required": [
          "prompt"
        ]
      },
      "TextToCadIteration": {
        "description": "A response from a text to CAD iteration.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The code for the new model.",
            "type": "string"
          },
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "feedback": {
            "nullable": true,
            "description": "Feedback from the user, if any.",
            "allOf": [
              {
                "$ref": "#/components/schemas/MlFeedback"
              }
            ]
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "model": {
            "description": "The model being used.",
            "allOf": [
              {
                "$ref": "#/components/schemas/TextToCadModel"
              }
            ]
          },
          "model_version": {
            "description": "The version of the model.",
            "type": "string"
          },
          "original_source_code": {
            "description": "The original source code for the model, previous to the changes.",
            "type": "string"
          },
          "prompt": {
            "nullable": true,
            "description": "The prompt for the overall changes. This is optional if you only want changes on specific source ranges.",
            "type": "string"
          },
          "source_ranges": {
            "description": "The source ranges the user suggested to change.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceRangePrompt"
            }
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "code",
          "created_at",
          "id",
          "model",
          "model_version",
          "original_source_code",
          "source_ranges",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "TextToCadIterationBody": {
        "description": "Body for generating models from text.",
        "type": "object",
        "properties": {
          "original_source_code": {
            "description": "The source code for the model (in kcl) that is to be edited.",
            "type": "string"
          },
          "prompt": {
            "nullable": true,
            "description": "The prompt for the model, if not using source ranges.",
            "type": "string"
          },
          "source_ranges": {
            "description": "The source ranges the user suggested to change. If empty, the prompt will be used and is required.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceRangePrompt"
            }
          }
        },
        "required": [
          "original_source_code",
          "source_ranges"
        ]
      },
      "TextToCadModel": {
        "description": "A type of Text-to-CAD model.",
        "oneOf": [
          {
            "description": "CAD.",
            "type": "string",
            "enum": [
              "cad"
            ]
          },
          {
            "description": "KCL.",
            "type": "string",
            "enum": [
              "kcl"
            ]
          },
          {
            "description": "KCL iteration.",
            "type": "string",
            "enum": [
              "kcl_iteration"
            ]
          }
        ]
      },
      "TextToCadResultsPage": {
        "description": "A single page of results",
        "type": "object",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TextToCad"
            }
          },
          "next_page": {
            "nullable": true,
            "description": "token used to fetch the next page of results (if any)",
            "type": "string"
          }
        },
        "required": [
          "items"
        ]
      },
      "TokenRevokeRequestForm": {
        "description": "The request parameters for the OAuth 2.0 token revocation flow.",
        "type": "object",
        "properties": {
          "client_id": {
            "description": "The client ID.",
            "type": "string",
            "format": "uuid"
          },
          "client_secret": {
            "nullable": true,
            "description": "The client secret.",
            "type": "string"
          },
          "token": {
            "description": "The token to revoke.",
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "client_id",
          "token"
        ]
      },
      "UnitAngle": {
        "description": "The valid types of angle formats.",
        "oneOf": [
          {
            "description": "Degrees <https://en.wikipedia.org/wiki/Degree_(angle)>",
            "type": "string",
            "enum": [
              "degrees"
            ]
          },
          {
            "description": "Radians <https://en.wikipedia.org/wiki/Radian>",
            "type": "string",
            "enum": [
              "radians"
            ]
          }
        ]
      },
      "UnitAngleConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitAngle"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitAngle"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitArea": {
        "description": "The valid types of area units.",
        "oneOf": [
          {
            "description": "Square centimeters <https://en.wikipedia.org/wiki/Square_centimeter>",
            "type": "string",
            "enum": [
              "cm2"
            ]
          },
          {
            "description": "Square decimeters <https://en.wikipedia.org/wiki/Square_decimeter>",
            "type": "string",
            "enum": [
              "dm2"
            ]
          },
          {
            "description": "Square feet <https://en.wikipedia.org/wiki/Square_foot>",
            "type": "string",
            "enum": [
              "ft2"
            ]
          },
          {
            "description": "Square inches <https://en.wikipedia.org/wiki/Square_inch>",
            "type": "string",
            "enum": [
              "in2"
            ]
          },
          {
            "description": "Square kilometers <https://en.wikipedia.org/wiki/Square_kilometer>",
            "type": "string",
            "enum": [
              "km2"
            ]
          },
          {
            "description": "Square meters <https://en.wikipedia.org/wiki/Square_meter>",
            "type": "string",
            "enum": [
              "m2"
            ]
          },
          {
            "description": "Square millimeters <https://en.wikipedia.org/wiki/Square_millimeter>",
            "type": "string",
            "enum": [
              "mm2"
            ]
          },
          {
            "description": "Square yards <https://en.wikipedia.org/wiki/Square_mile>",
            "type": "string",
            "enum": [
              "yd2"
            ]
          }
        ]
      },
      "UnitAreaConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitArea"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitArea"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitCurrent": {
        "description": "The valid types of current units.",
        "oneOf": [
          {
            "description": "Amperes <https://en.wikipedia.org/wiki/Ampere>",
            "type": "string",
            "enum": [
              "amperes"
            ]
          },
          {
            "description": "Microamperes <https://en.wikipedia.org/wiki/Microampere>",
            "type": "string",
            "enum": [
              "microamperes"
            ]
          },
          {
            "description": "Milliamperes <https://en.wikipedia.org/wiki/Milliampere>",
            "type": "string",
            "enum": [
              "milliamperes"
            ]
          },
          {
            "description": "Nanoamperes <https://en.wikipedia.org/wiki/Nanoampere>",
            "type": "string",
            "enum": [
              "nanoamperes"
            ]
          }
        ]
      },
      "UnitCurrentConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitCurrent"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitCurrent"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitDensity": {
        "description": "The valid types for density units.",
        "oneOf": [
          {
            "description": "Pounds per cubic feet.",
            "type": "string",
            "enum": [
              "lb:ft3"
            ]
          },
          {
            "description": "Kilograms per cubic meter.",
            "type": "string",
            "enum": [
              "kg:m3"
            ]
          }
        ]
      },
      "UnitEnergy": {
        "description": "The valid types of energy units.",
        "oneOf": [
          {
            "description": "British Thermal Unit (BTU) <https://en.wikipedia.org/wiki/British_thermal_unit>",
            "type": "string",
            "enum": [
              "btu"
            ]
          },
          {
            "description": "Electron Volts (eV) <https://en.wikipedia.org/wiki/Electronvolt>",
            "type": "string",
            "enum": [
              "electronvolts"
            ]
          },
          {
            "description": "Joules (or watt-seconds) <https://en.wikipedia.org/wiki/Joule>",
            "type": "string",
            "enum": [
              "joules"
            ]
          },
          {
            "description": "Kilocalories (often just called calories) <https://en.wikipedia.org/wiki/Kilocalorie>",
            "type": "string",
            "enum": [
              "kilocalories"
            ]
          },
          {
            "description": "Kilowatt hours (kWh) <https://en.wikipedia.org/wiki/Kilowatt-hour>",
            "type": "string",
            "enum": [
              "kilowatt_hours"
            ]
          },
          {
            "description": "Watt hours (Wh) <https://en.wikipedia.org/wiki/Kilowatt-hour>",
            "type": "string",
            "enum": [
              "watt_hours"
            ]
          }
        ]
      },
      "UnitEnergyConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitEnergy"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitEnergy"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitForce": {
        "description": "The valid types of force units.",
        "oneOf": [
          {
            "description": "Dynes <https://en.wikipedia.org/wiki/Dyne>",
            "type": "string",
            "enum": [
              "dynes"
            ]
          },
          {
            "description": "Kiloponds <https://en.wikipedia.org/wiki/Kilopond>",
            "type": "string",
            "enum": [
              "kiloponds"
            ]
          },
          {
            "description": "Micronewtons <https://en.wikipedia.org/wiki/Newton_(unit)>",
            "type": "string",
            "enum": [
              "micronewtons"
            ]
          },
          {
            "description": "Millinewtons <https://en.wikipedia.org/wiki/Newton_(unit)>",
            "type": "string",
            "enum": [
              "millinewtons"
            ]
          },
          {
            "description": "Newtons <https://en.wikipedia.org/wiki/Newton_(unit)>",
            "type": "string",
            "enum": [
              "newtons"
            ]
          },
          {
            "description": "Poundals <https://en.wikipedia.org/wiki/Poundal>",
            "type": "string",
            "enum": [
              "poundals"
            ]
          },
          {
            "description": "Pounds <https://en.wikipedia.org/wiki/Pound_(force)>",
            "type": "string",
            "enum": [
              "pounds"
            ]
          }
        ]
      },
      "UnitForceConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitForce"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitForce"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitFrequency": {
        "description": "The valid types of frequency units.",
        "oneOf": [
          {
            "description": "Gigahertz <https://en.wikipedia.org/wiki/Hertz>",
            "type": "string",
            "enum": [
              "gigahertz"
            ]
          },
          {
            "description": "Hertz <https://en.wikipedia.org/wiki/Hertz>",
            "type": "string",
            "enum": [
              "hertz"
            ]
          },
          {
            "description": "Kilohertz <https://en.wikipedia.org/wiki/Hertz>",
            "type": "string",
            "enum": [
              "kilohertz"
            ]
          },
          {
            "description": "Megahertz <https://en.wikipedia.org/wiki/Hertz>",
            "type": "string",
            "enum": [
              "megahertz"
            ]
          },
          {
            "description": "Microhertz <https://en.wikipedia.org/wiki/Hertz>",
            "type": "string",
            "enum": [
              "microhertz"
            ]
          },
          {
            "description": "Millihertz <https://en.wikipedia.org/wiki/Hertz>",
            "type": "string",
            "enum": [
              "millihertz"
            ]
          },
          {
            "description": "Nanohertz <https://en.wikipedia.org/wiki/Hertz>",
            "type": "string",
            "enum": [
              "nanohertz"
            ]
          },
          {
            "description": "Terahertz <https://en.wikipedia.org/wiki/Hertz>",
            "type": "string",
            "enum": [
              "terahertz"
            ]
          }
        ]
      },
      "UnitFrequencyConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitFrequency"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitFrequency"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitLength": {
        "description": "The valid types of length units.",
        "oneOf": [
          {
            "description": "Centimeters <https://en.wikipedia.org/wiki/Centimeter>",
            "type": "string",
            "enum": [
              "cm"
            ]
          },
          {
            "description": "Feet <https://en.wikipedia.org/wiki/Foot_(unit)>",
            "type": "string",
            "enum": [
              "ft"
            ]
          },
          {
            "description": "Inches <https://en.wikipedia.org/wiki/Inch>",
            "type": "string",
            "enum": [
              "in"
            ]
          },
          {
            "description": "Meters <https://en.wikipedia.org/wiki/Meter>",
            "type": "string",
            "enum": [
              "m"
            ]
          },
          {
            "description": "Millimeters <https://en.wikipedia.org/wiki/Millimeter>",
            "type": "string",
            "enum": [
              "mm"
            ]
          },
          {
            "description": "Yards <https://en.wikipedia.org/wiki/Yard>",
            "type": "string",
            "enum": [
              "yd"
            ]
          }
        ]
      },
      "UnitLengthConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitLength"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitLength"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitMass": {
        "description": "The valid types of mass units.",
        "oneOf": [
          {
            "description": "Grams <https://en.wikipedia.org/wiki/Gram>",
            "type": "string",
            "enum": [
              "g"
            ]
          },
          {
            "description": "Kilograms <https://en.wikipedia.org/wiki/Kilogram>",
            "type": "string",
            "enum": [
              "kg"
            ]
          },
          {
            "description": "Pounds <https://en.wikipedia.org/wiki/Pound_(mass)>",
            "type": "string",
            "enum": [
              "lb"
            ]
          }
        ]
      },
      "UnitMassConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitMass"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitMass"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitPower": {
        "description": "The valid types of power units.",
        "oneOf": [
          {
            "description": "British thermal units (BTU) per minute <https://en.wikipedia.org/wiki/British_thermal_unit>",
            "type": "string",
            "enum": [
              "btu_per_minute"
            ]
          },
          {
            "description": "Horsepower (hp) <https://en.wikipedia.org/wiki/Horsepower>",
            "type": "string",
            "enum": [
              "horsepower"
            ]
          },
          {
            "description": "Kilowatts <https://en.wikipedia.org/wiki/Kilowatt>",
            "type": "string",
            "enum": [
              "kilowatts"
            ]
          },
          {
            "description": "Metric horsepower (PS) <https://en.wikipedia.org/wiki/Horsepower#Metric_horsepower>",
            "type": "string",
            "enum": [
              "metric_horsepower"
            ]
          },
          {
            "description": "Microwatts <https://en.wikipedia.org/wiki/Microwatt>",
            "type": "string",
            "enum": [
              "microwatts"
            ]
          },
          {
            "description": "Millwatts <https://en.wikipedia.org/wiki/Milliwatt>",
            "type": "string",
            "enum": [
              "milliwatts"
            ]
          },
          {
            "description": "Watts <https://en.wikipedia.org/wiki/Watt>",
            "type": "string",
            "enum": [
              "watts"
            ]
          }
        ]
      },
      "UnitPowerConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitPower"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitPower"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitPressure": {
        "description": "The valid types of pressure units.",
        "oneOf": [
          {
            "description": "Atmospheres <https://en.wikipedia.org/wiki/Standard_atmosphere_(unit)>",
            "type": "string",
            "enum": [
              "atmospheres"
            ]
          },
          {
            "description": "Bars <https://en.wikipedia.org/wiki/Bar_(unit)>",
            "type": "string",
            "enum": [
              "bars"
            ]
          },
          {
            "description": "Hectopascals <https://en.wikipedia.org/wiki/Hectopascal>",
            "type": "string",
            "enum": [
              "hectopascals"
            ]
          },
          {
            "description": "Kilopascals <https://en.wikipedia.org/wiki/Kilopascal>",
            "type": "string",
            "enum": [
              "kilopascals"
            ]
          },
          {
            "description": "Millibars <https://en.wikipedia.org/wiki/Bar_(unit)>",
            "type": "string",
            "enum": [
              "millibars"
            ]
          },
          {
            "description": "Pascals <https://en.wikipedia.org/wiki/Pascal_(unit)>",
            "type": "string",
            "enum": [
              "pascals"
            ]
          },
          {
            "description": "Pounds per square inch (PSI) - <https://en.wikipedia.org/wiki/Pound_per_square_inch>",
            "type": "string",
            "enum": [
              "psi"
            ]
          }
        ]
      },
      "UnitPressureConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitPressure"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitPressure"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitTemperature": {
        "description": "The valid types of temperature units.",
        "oneOf": [
          {
            "description": "Celsius <https://en.wikipedia.org/wiki/Celsius>",
            "type": "string",
            "enum": [
              "celsius"
            ]
          },
          {
            "description": "Fahrenheit <https://en.wikipedia.org/wiki/Fahrenheit>",
            "type": "string",
            "enum": [
              "fahrenheit"
            ]
          },
          {
            "description": "Kelvin <https://en.wikipedia.org/wiki/Kelvin>",
            "type": "string",
            "enum": [
              "kelvin"
            ]
          },
          {
            "description": "Rankine <https://en.wikipedia.org/wiki/Rankine_scale>",
            "type": "string",
            "enum": [
              "rankine"
            ]
          }
        ]
      },
      "UnitTemperatureConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitTemperature"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitTemperature"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitTorque": {
        "description": "The valid types of torque units.",
        "oneOf": [
          {
            "description": "Newton metres <https://en.wikipedia.org/wiki/Newton_metre>",
            "type": "string",
            "enum": [
              "newton_metres"
            ]
          },
          {
            "description": "Pound foot <https://en.wikipedia.org/wiki/Pound-foot_(torque)>",
            "type": "string",
            "enum": [
              "pound_foot"
            ]
          }
        ]
      },
      "UnitTorqueConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitTorque"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitTorque"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitVolume": {
        "description": "The valid types of volume units.",
        "oneOf": [
          {
            "description": "Cubic centimeters (cc or cm³) <https://en.wikipedia.org/wiki/Cubic_centimeter>",
            "type": "string",
            "enum": [
              "cm3"
            ]
          },
          {
            "description": "Cubic feet (ft³) <https://en.wikipedia.org/wiki/Cubic_foot>",
            "type": "string",
            "enum": [
              "ft3"
            ]
          },
          {
            "description": "Cubic inches (cu in or in³) <https://en.wikipedia.org/wiki/Cubic_inch>",
            "type": "string",
            "enum": [
              "in3"
            ]
          },
          {
            "description": "Cubic meters (m³) <https://en.wikipedia.org/wiki/Cubic_meter>",
            "type": "string",
            "enum": [
              "m3"
            ]
          },
          {
            "description": "Cubic yards (yd³) <https://en.wikipedia.org/wiki/Cubic_yard>",
            "type": "string",
            "enum": [
              "yd3"
            ]
          },
          {
            "description": "US Fluid Ounces (fl oz) <https://en.wikipedia.org/wiki/Fluid_ounce>",
            "type": "string",
            "enum": [
              "usfloz"
            ]
          },
          {
            "description": "US Gallons (gal US) <https://en.wikipedia.org/wiki/Gallon>",
            "type": "string",
            "enum": [
              "usgal"
            ]
          },
          {
            "description": "Liters (l) <https://en.wikipedia.org/wiki/Litre>",
            "type": "string",
            "enum": [
              "l"
            ]
          },
          {
            "description": "Milliliters (ml) <https://en.wikipedia.org/wiki/Litre>",
            "type": "string",
            "enum": [
              "ml"
            ]
          }
        ]
      },
      "UnitVolumeConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitVolume"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitVolume"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UpdateMemberToOrgBody": {
        "description": "Data for updating a member of an org.",
        "type": "object",
        "properties": {
          "role": {
            "description": "The organization role to give the user.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserOrgRole"
              }
            ]
          }
        },
        "required": [
          "role"
        ]
      },
      "UpdatePaymentBalance": {
        "description": "The data for updating a balance.",
        "type": "object",
        "properties": {
          "monthly_credits_remaining": {
            "nullable": true,
            "title": "double",
            "description": "The monthy credits remaining in the balance. This gets re-upped every month, but if the credits are not used for a month they do not carry over to the next month. It is a stable amount granted to the user per month.",
            "type": "number",
            "format": "money-usd"
          },
          "pre_pay_cash_remaining": {
            "nullable": true,
            "title": "double",
            "description": "The amount of pre-pay cash remaining in the balance. This number goes down as the user uses their pre-paid credits. The reason we track this amount is if a user ever wants to withdraw their pre-pay cash, we can use this amount to determine how much to give them. Say a user has $100 in pre-paid cash, their bill is worth, $50 after subtracting any other credits (like monthly etc.) Their bill is $50, their pre-pay cash remaining will be subtracted by 50 to pay the bill and their `pre_pay_credits_remaining` will be subtracted by 50 to pay the bill. This way if they want to withdraw money after, they can only withdraw $50 since that is the amount of cash they have remaining.",
            "type": "number",
            "format": "money-usd"
          },
          "pre_pay_credits_remaining": {
            "nullable": true,
            "title": "double",
            "description": "The amount of credits remaining in the balance. This is typically the amount of cash * some multiplier they get for pre-paying their account. This number lowers every time a bill is paid with the balance. This number increases every time a user adds funds to their balance. This may be through a subscription or a one off payment.",
            "type": "number",
            "format": "money-usd"
          }
        }
      },
      "UpdateUser": {
        "description": "The user-modifiable parts of a User.",
        "type": "object",
        "properties": {
          "company": {
            "description": "The user's company.",
            "type": "string"
          },
          "discord": {
            "description": "The user's Discord handle.",
            "type": "string"
          },
          "first_name": {
            "description": "The user's first name.",
            "type": "string"
          },
          "github": {
            "description": "The user's GitHub handle.",
            "type": "string"
          },
          "image": {
            "title": "String",
            "description": "The image URL for the user. NOTE: If the user uses an OAuth2 provider, this will be overwritten by the provider's image URL when the user logs in next.",
            "type": "string",
            "format": "uri"
          },
          "last_name": {
            "description": "The user's last name.",
            "type": "string"
          },
          "phone": {
            "title": "String",
            "description": "The user's phone number.",
            "default": "",
            "type": "string",
            "format": "phone"
          }
        },
        "required": [
          "image"
        ]
      },
      "User": {
        "description": "A user.",
        "type": "object",
        "properties": {
          "block": {
            "nullable": true,
            "description": "If the user should be blocked and the reason why.",
            "allOf": [
              {
                "$ref": "#/components/schemas/BlockReason"
              }
            ]
          },
          "can_train_on_data": {
            "description": "If we can train on the user's data. If the user is a member of an organization, the organization's setting will override this.",
            "default": false,
            "type": "boolean"
          },
          "company": {
            "description": "The user's company.",
            "type": "string"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the user was created.",
            "type": "string",
            "format": "date-time"
          },
          "discord": {
            "description": "The user's Discord handle.",
            "type": "string"
          },
          "email": {
            "description": "The email address of the user.",
            "type": "string",
            "format": "email"
          },
          "email_verified": {
            "nullable": true,
            "title": "DateTime",
            "description": "The date and time the email address was verified.",
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "description": "The user's first name.",
            "type": "string"
          },
          "github": {
            "description": "The user's GitHub handle.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the user.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "image": {
            "title": "String",
            "description": "The image avatar for the user. This is a URL.",
            "type": "string",
            "format": "uri"
          },
          "is_service_account": {
            "description": "If the user is tied to a service account.",
            "default": false,
            "type": "boolean"
          },
          "last_name": {
            "description": "The user's last name.",
            "type": "string"
          },
          "name": {
            "description": "The name of the user. This is auto populated at first from the authentication provider (if there was a name). It can be updated by the user by updating their `first_name` and `last_name` fields.",
            "type": "string"
          },
          "phone": {
            "title": "String",
            "description": "The user's phone number.",
            "default": "",
            "type": "string",
            "format": "phone"
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the user was last updated.",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "created_at",
          "id",
          "image",
          "updated_at"
        ]
      },
      "UserOrgInfo": {
        "description": "A user's information about an org, including their role.",
        "type": "object",
        "properties": {
          "allow_users_in_domain_to_auto_join": {
            "nullable": true,
            "description": "If we should allow all future users who are created with email addresses from this domain to join the org.",
            "type": "boolean"
          },
          "billing_email": {
            "description": "The billing email address of the org.",
            "type": "string",
            "format": "email"
          },
          "billing_email_verified": {
            "nullable": true,
            "title": "DateTime",
            "description": "The date and time the billing email address was verified.",
            "type": "string",
            "format": "date-time"
          },
          "block": {
            "nullable": true,
            "description": "If the org should be blocked and the reason why.",
            "allOf": [
              {
                "$ref": "#/components/schemas/BlockReason"
              }
            ]
          },
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the org was created.",
            "type": "string",
            "format": "date-time"
          },
          "domain": {
            "nullable": true,
            "description": "The org's domain.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the org.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "image": {
            "nullable": true,
            "title": "String",
            "description": "The image for the org. This is a URL.",
            "type": "string",
            "format": "uri"
          },
          "name": {
            "description": "The name of the org.",
            "type": "string"
          },
          "phone": {
            "title": "String",
            "description": "The org's phone number.",
            "default": "",
            "type": "string",
            "format": "phone"
          },
          "role": {
            "description": "The user's role in the org.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OrgRole"
              }
            ]
          },
          "stripe_id": {
            "nullable": true,
            "description": "The org's stripe id.",
            "type": "string"
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the org was last updated.",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "created_at",
          "id",
          "role",
          "updated_at"
        ]
      },
      "UserOrgRole": {
        "description": "The roles for users in an organization.",
        "oneOf": [
          {
            "description": "Admins can do anything in the org.",
            "type": "string",
            "enum": [
              "admin"
            ]
          },
          {
            "description": "Members of an org can not modify an org, but they belong in the org.",
            "type": "string",
            "enum": [
              "member"
            ]
          }
        ]
      },
      "UserResultsPage": {
        "description": "A single page of results",
        "type": "object",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "next_page": {
            "nullable": true,
            "description": "token used to fetch the next page of results (if any)",
            "type": "string"
          }
        },
        "required": [
          "items"
        ]
      },
      "Uuid": {
        "description": "A UUID usually v4 or v7",
        "type": "string",
        "format": "uuid"
      },
      "VerificationTokenResponse": {
        "description": "A verification token response.",
        "type": "object",
        "properties": {
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the verification token was created.",
            "type": "string",
            "format": "date-time"
          },
          "expires": {
            "title": "DateTime",
            "description": "The date and time the verification token expires.",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "description": "The token used for verification. This is used as the id for the table since it is unique per record.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "identifier": {
            "description": "The identifier for the user. This is typically the user's email address since that is what we are verifying.",
            "type": "string"
          },
          "saml_redirect_url": {
            "nullable": true,
            "title": "String",
            "description": "The URL to redirect to if the user requires SAML authentication.",
            "type": "string",
            "format": "uri"
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the verification token was last updated.",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "created_at",
          "expires",
          "id",
          "updated_at"
        ]
      },
      "ViewIsometric": {
        "description": "The response from the `ViewIsometric` command.",
        "type": "object",
        "properties": {
          "settings": {
            "description": "Camera settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/CameraSettings"
              }
            ]
          }
        },
        "required": [
          "settings"
        ]
      },
      "Volume": {
        "description": "The volume response.",
        "type": "object",
        "properties": {
          "output_unit": {
            "description": "The output unit for the volume.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitVolume"
              }
            ]
          },
          "volume": {
            "description": "The volume.",
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "output_unit",
          "volume"
        ]
      },
      "WebSocketRequest": {
        "description": "The websocket messages the server receives.",
        "oneOf": [
          {
            "description": "The trickle ICE candidate request.",
            "type": "object",
            "properties": {
              "candidate": {
                "description": "Information about the ICE candidate.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RtcIceCandidateInit"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "trickle_ice"
                ]
              }
            },
            "required": [
              "candidate",
              "type"
            ]
          },
          {
            "description": "The SDP offer request.",
            "type": "object",
            "properties": {
              "offer": {
                "description": "The session description.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RtcSessionDescription"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "sdp_offer"
                ]
              }
            },
            "required": [
              "offer",
              "type"
            ]
          },
          {
            "description": "The modeling command request.",
            "type": "object",
            "properties": {
              "cmd": {
                "description": "Which command to submit to the Kittycad engine.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ModelingCmd"
                  }
                ]
              },
              "cmd_id": {
                "description": "ID of command being submitted.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ModelingCmdId"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "modeling_cmd_req"
                ]
              }
            },
            "required": [
              "cmd",
              "cmd_id",
              "type"
            ]
          },
          {
            "description": "A sequence of modeling requests. If any request fails, following requests will not be tried.",
            "type": "object",
            "properties": {
              "batch_id": {
                "description": "ID of batch being submitted. Each request has their own individual ModelingCmdId, but this is the ID of the overall batch.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ModelingCmdId"
                  }
                ]
              },
              "requests": {
                "description": "A sequence of modeling requests. If any request fails, following requests will not be tried.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ModelingCmdReq"
                }
              },
              "responses": {
                "description": "If false or omitted, responses to each batch command will just be Ok(()). If true, responses will be the actual response data for that modeling command.",
                "default": false,
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "enum": [
                  "modeling_cmd_batch_req"
                ]
              }
            },
            "required": [
              "batch_id",
              "requests",
              "type"
            ]
          },
          {
            "description": "The client-to-server Ping to ensure the WebSocket stays alive.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "ping"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "The response to a metrics collection request from the server.",
            "type": "object",
            "properties": {
              "metrics": {
                "description": "Collected metrics from the Client's end of the engine connection.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ClientMetrics"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "metrics_response"
                ]
              }
            },
            "required": [
              "metrics",
              "type"
            ]
          },
          {
            "description": "Authentication header request.",
            "type": "object",
            "properties": {
              "headers": {
                "description": "The authentication header.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "headers"
                ]
              }
            },
            "required": [
              "headers",
              "type"
            ]
          }
        ]
      },
      "WebSocketResponse": {
        "description": "Websocket responses can either be successful or unsuccessful. Slightly different schemas in either case.",
        "anyOf": [
          {
            "description": "Response sent when a request succeeded.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SuccessWebSocketResponse"
              }
            ]
          },
          {
            "description": "Response sent when a request did not succeed.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FailureWebSocketResponse"
              }
            ]
          }
        ]
      },
      "ZooProductSubscription": {
        "description": "A Zoo product subscription.",
        "oneOf": [
          {
            "description": "A subscription to the modeling app.",
            "type": "object",
            "properties": {
              "description": {
                "description": "A description of the tier.",
                "type": "string"
              },
              "features": {
                "description": "Features that are included in the subscription.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubscriptionTierFeature"
                },
                "minItems": 0,
                "maxItems": 15
              },
              "name": {
                "description": "The name of the tier.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ModelingAppSubscriptionTierName"
                  }
                ]
              },
              "pay_as_you_go_credits": {
                "title": "double",
                "description": "The amount of pay-as-you-go credits the individual or org gets outside the modeling app.",
                "type": "number",
                "format": "money-usd"
              },
              "price": {
                "description": "The price of the tier per month. If this is for an individual, this is the price they pay. If this is for an organization, this is the price the organization pays per member in the org. This is in USD.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubscriptionTierPrice"
                  }
                ]
              },
              "support_tier": {
                "description": "The support tier the subscription provides.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SupportTier"
                  }
                ]
              },
              "training_data_behavior": {
                "description": "The behavior of the users data (can it be used for training, etc).",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubscriptionTrainingDataBehavior"
                  }
                ]
              },
              "type": {
                "description": "If the tier is offered for an individual or an org.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubscriptionTierType"
                  }
                ]
              },
              "zoo_tools_included": {
                "description": "The Zoo tools that you can call unlimited times with this tier.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ZooTool"
                }
              }
            },
            "required": [
              "description",
              "name",
              "pay_as_you_go_credits",
              "price",
              "support_tier",
              "training_data_behavior",
              "type"
            ]
          }
        ]
      },
      "ZooProductSubscriptions": {
        "description": "A struct of Zoo product subscriptions.",
        "type": "object",
        "properties": {
          "modeling_app": {
            "description": "A modeling app subscription.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModelingAppSubscriptionTier"
              }
            ]
          }
        },
        "required": [
          "modeling_app"
        ]
      },
      "ZooProductSubscriptionsOrgRequest": {
        "description": "A struct of Zoo product subscriptions an organization can request.",
        "type": "object",
        "properties": {
          "modeling_app": {
            "description": "A modeling app subscription.",
            "default": "team",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModelingAppOrganizationSubscriptionTier"
              }
            ]
          }
        }
      },
      "ZooProductSubscriptionsUserRequest": {
        "description": "A struct of Zoo product subscriptions a user can request.",
        "type": "object",
        "properties": {
          "modeling_app": {
            "description": "A modeling app subscription.",
            "default": "free",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModelingAppIndividualSubscriptionTier"
              }
            ]
          }
        }
      },
      "ZooTool": {
        "description": "The Zoo tools that can make API calls.",
        "oneOf": [
          {
            "description": "The modeling app.",
            "type": "string",
            "enum": [
              "modeling_app"
            ]
          },
          {
            "description": "The Text-to-CAD UI.",
            "type": "string",
            "enum": [
              "text_to_cad"
            ]
          },
          {
            "description": "The Diff Chrome Extension.",
            "type": "string",
            "enum": [
              "diff_chrome_extension"
            ]
          }
        ]
      },
      "ZoomToFit": {
        "description": "The response from the `ZoomToFit` command.",
        "type": "object",
        "properties": {
          "settings": {
            "description": "Camera settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/CameraSettings"
              }
            ]
          }
        },
        "required": [
          "settings"
        ]
      }
    },
    "responses": {
      "Error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "api-calls",
      "description": "API calls that have been performed by users can be queried by the API. This is helpful for debugging as well as billing.",
      "externalDocs": {
        "url": "https://zoo.dev/docs/api/api-calls"
      }
    },
    {
      "name": "api-tokens",
      "description": "API tokens allow users to call the API outside of their session token that is used as a cookie in the user interface. Users can create, delete, and list their API tokens. But, of course, you need an API token to do this, so first be sure to generate one in the account UI.",
      "externalDocs": {
        "url": "https://zoo.dev/docs/api/api-tokens"
      }
    },
    {
      "name": "apps",
      "description": "Endpoints for third party app grant flows.",
      "externalDocs": {
        "url": "https://zoo.dev/docs/api/apps"
      }
    },
    {
      "name": "beta",
      "description": "Beta API endpoints. We will not charge for these endpoints while they are in beta.",
      "externalDocs": {
        "url": "https://zoo.dev/docs/api/beta"
      }
    },
    {
      "name": "constant",
      "description": "Constants. These are helpful as helpers.",
      "externalDocs": {
        "url": "https://zoo.dev/docs/api/constant"
      }
    },
    {
      "name": "executor",
      "description": "Endpoints that allow for code execution or creation of code execution environments.",
      "externalDocs": {
        "url": "https://zoo.dev/docs/api/executor"
      }
    },
    {
      "name": "file",
      "description": "CAD file operations. Create, get, and list CAD file conversions. More endpoints will be added here in the future as we build out transforms, etc on CAD models.",
      "externalDocs": {
        "url": "https://zoo.dev/docs/api/file"
      }
    },
    {
      "name": "hidden",
      "description": "Hidden API endpoints that should not show up in the docs.",
      "externalDocs": {
        "url": "https://zoo.dev/docs/api/hidden"
      }
    },
    {
      "name": "meta",
      "description": "Meta information about the API.",
      "externalDocs": {
        "url": "https://zoo.dev/docs/api/meta"
      }
    },
    {
      "name": "ml",
      "description": "Machine learning to generate CAD models and other things.",
      "externalDocs": {
        "url": "https://zoo.dev/docs/api/ml"
      }
    },
    {
      "name": "modeling",
      "description": "Modeling API for updating your 3D files using the Zoo engine.",
      "externalDocs": {
        "url": "https://zoo.dev/docs/api/modeling"
      }
    },
    {
      "name": "oauth2",
      "description": "Endpoints that implement OAuth 2.0 grant flows.",
      "externalDocs": {
        "url": "https://zoo.dev/docs/api/oauth2"
      }
    },
    {
      "name": "orgs",
      "description": "An organization is a group of users of the Zoo API. Here, we can add users to an org and perform operations on orgs.",
      "externalDocs": {
        "url": "https://zoo.dev/docs/api/orgs"
      }
    },
    {
      "name": "payments",
      "description": "Operations around payments and billing.",
      "externalDocs": {
        "url": "https://zoo.dev/docs/api/payments"
      }
    },
    {
      "name": "service-accounts",
      "description": "Service accounts allow organizations to call the API. Organization admins can create, delete, and list the service accounts for their org. Service accounts are scoped to an organization not individual users, these are better to use for automations than individual API tokens, since they won't stop working when an individual leaves the company.",
      "externalDocs": {
        "url": "https://zoo.dev/docs/api/service-accounts"
      }
    },
    {
      "name": "store",
      "description": "Operations involving our swag store.",
      "externalDocs": {
        "url": "https://zoo.dev/docs/api/store"
      }
    },
    {
      "name": "unit",
      "description": "Unit conversion operations.",
      "externalDocs": {
        "url": "https://zoo.dev/docs/api/file"
      }
    },
    {
      "name": "users",
      "description": "A user is someone who uses the Zoo API. Here, we can create, delete, and list users. We can also get information about a user. Operations will only be authorized if the user is requesting information about themselves.",
      "externalDocs": {
        "url": "https://zoo.dev/docs/api/users"
      }
    }
  ]
}