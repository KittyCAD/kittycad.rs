{
  "openapi": "3.0.3",
  "info": {
    "title": "KittyCAD API",
    "description": "API server for KittyCAD",
    "contact": {
      "url": "https://kittycad.io",
      "email": "api@kittycad.io"
    },
    "version": "0.1.0"
  },
  "paths": {
    "/": {
      "get": {
        "tags": [
          "meta"
        ],
        "summary": "Get OpenAPI schema.",
        "operationId": "get_schema",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/.well-known/ai-plugin.json": {
      "get": {
        "tags": [
          "meta",
          "hidden"
        ],
        "summary": "Get AI plugin manifest.",
        "operationId": "get_ai_plugin_manifest",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AiPluginManifest"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/_meta/info": {
      "get": {
        "tags": [
          "meta",
          "hidden"
        ],
        "summary": "Get the metadata about our currently running server.",
        "description": "This includes information on any of our other distributed systems it is connected to.\nYou must be a KittyCAD employee to perform this request.",
        "operationId": "get_metadata",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ai-prompts": {
      "get": {
        "tags": [
          "ai",
          "hidden"
        ],
        "summary": "List all AI prompts.",
        "description": "For text-to-cad prompts, this will always return the STEP file contents as well as the format the user originally requested.\nThis endpoint requires authentication by a KittyCAD employee.\nThe AI prompts are returned in order of creation, with the most recently created AI prompts first.",
        "operationId": "list_ai_prompts",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AiPromptResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/ai-prompts/{id}": {
      "get": {
        "tags": [
          "ai",
          "hidden"
        ],
        "summary": "Get an AI prompt.",
        "description": "This endpoint requires authentication by a KittyCAD employee.",
        "operationId": "get_ai_prompt",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The id of the model to give feedback to.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AiPrompt"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ai/text-to-cad/{output_format}": {
      "post": {
        "tags": [
          "ai",
          "beta",
          "hidden"
        ],
        "summary": "Generate a CAD model from text.",
        "description": "Because our source of truth for the resulting model is a STEP file, you will always have STEP file contents when you list your generated models. Any other formats you request here will also be returned when you list your generated models.\nThis operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.\nOne thing to note, if you hit the cache, this endpoint will return right away. So you only have to wait if the status is not `Completed` or `Failed`.\nThis is an alpha endpoint. It will change in the future. The current output is honestly pretty bad. So if you find this endpoint, you get what you pay for, which currently is nothing. But in the future will be made a lot better.",
        "operationId": "create_text_to_cad",
        "parameters": [
          {
            "in": "path",
            "name": "output_format",
            "description": "The format the output file should be converted to.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileExportFormat"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextToCadCreateBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextToCad"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_text_to_cad",
        "parameters": [
          {
            "in": "path",
            "name": "output_format",
            "description": "The format the output file should be converted to.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileExportFormat"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/api-call-metrics": {
      "get": {
        "tags": [
          "api-calls",
          "hidden"
        ],
        "summary": "Get API call metrics.",
        "description": "This endpoint requires authentication by a KittyCAD employee. The API calls are grouped by the parameter passed.",
        "operationId": "get_api_call_metrics",
        "parameters": [
          {
            "in": "query",
            "name": "group_by",
            "description": "What field to group the metrics by.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ApiCallQueryGroupBy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_ApiCallQueryGroup",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiCallQueryGroup"
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/api-calls": {
      "get": {
        "tags": [
          "api-calls",
          "hidden"
        ],
        "summary": "List API calls.",
        "description": "This endpoint requires authentication by a KittyCAD employee. The API calls are returned in order of creation, with the most recently created API calls first.",
        "operationId": "list_api_calls",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCallWithPriceResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/api-calls/{id}": {
      "get": {
        "tags": [
          "api-calls",
          "hidden"
        ],
        "summary": "Get details of an API call.",
        "description": "This endpoint requires authentication by any KittyCAD user. It returns details of the requested API call for the user.\nIf the user is not authenticated to view the specified API call, then it is not returned.\nOnly KittyCAD employees can view API calls for other users.",
        "operationId": "get_api_call",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the API call.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCallWithPrice"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/apps/github/callback": {
      "get": {
        "tags": [
          "apps",
          "hidden"
        ],
        "summary": "Listen for callbacks to GitHub app authentication.",
        "description": "This is different than OAuth 2.0 authentication for users. This endpoint grants access for KittyCAD to access user's repos.\nThe user doesn't need KittyCAD OAuth authorization for this endpoint, this is purely for the GitHub permissions to access repos.",
        "operationId": "apps_github_callback",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/apps/github/consent": {
      "get": {
        "tags": [
          "apps",
          "hidden"
        ],
        "summary": "Get the consent URL for GitHub app authentication.",
        "description": "This is different than OAuth 2.0 authentication for users. This endpoint grants access for KittyCAD to access user's repos.\nThe user doesn't need KittyCAD OAuth authorization for this endpoint, this is purely for the GitHub permissions to access repos.",
        "operationId": "apps_github_consent",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClientInfo"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/apps/github/webhook": {
      "post": {
        "tags": [
          "apps",
          "hidden"
        ],
        "summary": "Listen for GitHub webhooks.",
        "description": "These come from the GitHub app.",
        "operationId": "apps_github_webhook",
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_apps_github_webhook",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/async/operations": {
      "get": {
        "tags": [
          "api-calls",
          "hidden"
        ],
        "summary": "List async operations.",
        "description": "For async file conversion operations, this endpoint does not return the contents of converted files (`output`). To get the contents use the `/async/operations/{id}` endpoint.\nThis endpoint requires authentication by a KittyCAD employee.",
        "operationId": "list_async_operations",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status to filter by.",
            "schema": {
              "$ref": "#/components/schemas/ApiCallStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncApiCallResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/async/operations/{id}": {
      "get": {
        "tags": [
          "api-calls"
        ],
        "summary": "Get an async operation.",
        "description": "Get the status and output of an async operation.\nThis endpoint requires authentication by any KittyCAD user. It returns details of the requested async operation for the user.\nIf the user is not authenticated to view the specified async operation, then it is not returned.\nOnly KittyCAD employees with the proper access can view async operations for other users.",
        "operationId": "get_async_operation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the async operation.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncApiCallOutput"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/auth/email": {
      "post": {
        "tags": [
          "hidden"
        ],
        "summary": "Create an email verification request for a user.",
        "operationId": "auth_email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailAuthenticationForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationToken"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_auth_email",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/auth/email/callback": {
      "get": {
        "tags": [
          "hidden"
        ],
        "summary": "Listen for callbacks for email verification for users.",
        "operationId": "auth_email_callback",
        "parameters": [
          {
            "in": "query",
            "name": "callback_url",
            "description": "The URL to redirect back to after we have authenticated.",
            "schema": {
              "nullable": true,
              "type": "string",
              "format": "uri"
            }
          },
          {
            "in": "query",
            "name": "email",
            "description": "The user's email.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "in": "query",
            "name": "token",
            "description": "The verification token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Temporary Redirect",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Set-Cookie": {
                "description": "Set-Cookie header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/file/center-of-mass": {
      "post": {
        "tags": [
          "file",
          "beta"
        ],
        "summary": "Get CAD file center of mass.",
        "description": "We assume any file given to us has one consistent unit throughout. We also assume the file is at the proper scale.\nThis endpoint returns the cartesian coordinate in world space measure units.\nIn the future, we will use the units inside the file if they are given and do any conversions if necessary for the calculation. But currently, that is not supported.\nGet the center of mass of an object in a CAD file. If the file is larger than 25MB, it will be performed asynchronously.\nIf the operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.",
        "operationId": "create_file_center_of_mass",
        "parameters": [
          {
            "in": "query",
            "name": "output_unit",
            "description": "The output unit for the center of mass.",
            "schema": {
              "$ref": "#/components/schemas/UnitLength"
            }
          },
          {
            "in": "query",
            "name": "src_format",
            "description": "The format of the file.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileCenterOfMass"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_file_center_of_mass",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/file/conversion/{src_format}/{output_format}": {
      "post": {
        "tags": [
          "file"
        ],
        "summary": "Convert CAD file with defaults.",
        "description": "If you wish to specify the conversion options, use the `/file/conversion` endpoint instead.\nConvert a CAD file from one format to another. If the file being converted is larger than 25MB, it will be performed asynchronously.\nIf the conversion is performed synchronously, the contents of the converted file (`output`) will be returned as a base64 encoded string.\nIf the operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.",
        "operationId": "create_file_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "output_format",
            "description": "The format the file should be converted to.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileExportFormat"
            }
          },
          {
            "in": "path",
            "name": "src_format",
            "description": "The format of the file to convert.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_file_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "output_format",
            "description": "The format the file should be converted to.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileExportFormat"
            }
          },
          {
            "in": "path",
            "name": "src_format",
            "description": "The format of the file to convert.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/file/density": {
      "post": {
        "tags": [
          "file",
          "beta"
        ],
        "summary": "Get CAD file density.",
        "description": "We assume any file given to us has one consistent unit throughout. We also assume the file is at the proper scale.\nThis endpoint assumes if you are giving a material mass in a specific mass units, we return a density in mass unit per cubic measure unit.\nIn the future, we will use the units inside the file if they are given and do any conversions if necessary for the calculation. But currently, that is not supported.\nGet the density of an object in a CAD file. If the file is larger than 25MB, it will be performed asynchronously.\nIf the operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.",
        "operationId": "create_file_density",
        "parameters": [
          {
            "in": "query",
            "name": "material_mass",
            "description": "The material mass.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "material_mass_unit",
            "description": "The unit of the material mass.",
            "schema": {
              "$ref": "#/components/schemas/UnitMass"
            }
          },
          {
            "in": "query",
            "name": "output_unit",
            "description": "The output unit for the density.",
            "schema": {
              "$ref": "#/components/schemas/UnitDensity"
            }
          },
          {
            "in": "query",
            "name": "src_format",
            "description": "The format of the file.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDensity"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_file_density",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/file/execute/{lang}": {
      "post": {
        "tags": [
          "executor",
          "hidden"
        ],
        "summary": "Execute a KittyCAD program in a specific language.",
        "operationId": "create_file_execution",
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "description": "The language of the code.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CodeLanguage"
            }
          },
          {
            "in": "query",
            "name": "output",
            "description": "The output file we want to get the contents for (the paths are relative to where in litterbox it is being run). You can denote more than one file with a comma separated list of string paths.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeOutput"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_file_execution",
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "description": "The language of the code.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CodeLanguage"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/file/mass": {
      "post": {
        "tags": [
          "file",
          "beta"
        ],
        "summary": "Get CAD file mass.",
        "description": "We assume any file given to us has one consistent unit throughout. We also assume the file is at the proper scale.\nThis endpoint assumes if you are giving a material density in a specific mass unit per cubic measure unit, we return a mass in mass units. The same mass units as passed in the material density.\nIn the future, we will use the units inside the file if they are given and do any conversions if necessary for the calculation. But currently, that is not supported.\nGet the mass of an object in a CAD file. If the file is larger than 25MB, it will be performed asynchronously.\nIf the operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.",
        "operationId": "create_file_mass",
        "parameters": [
          {
            "in": "query",
            "name": "material_density",
            "description": "The material density.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "in": "query",
            "name": "material_density_unit",
            "description": "The unit of the material density.",
            "schema": {
              "$ref": "#/components/schemas/UnitDensity"
            }
          },
          {
            "in": "query",
            "name": "output_unit",
            "description": "The output unit for the mass.",
            "schema": {
              "$ref": "#/components/schemas/UnitMass"
            }
          },
          {
            "in": "query",
            "name": "src_format",
            "description": "The format of the file.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileMass"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_file_mass",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/file/surface-area": {
      "post": {
        "tags": [
          "file",
          "beta"
        ],
        "summary": "Get CAD file surface area.",
        "description": "We assume any file given to us has one consistent unit throughout. We also assume the file is at the proper scale.\nThis endpoint returns the square measure units.\nIn the future, we will use the units inside the file if they are given and do any conversions if necessary for the calculation. But currently, that is not supported.\nGet the surface area of an object in a CAD file. If the file is larger than 25MB, it will be performed asynchronously.\nIf the operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.",
        "operationId": "create_file_surface_area",
        "parameters": [
          {
            "in": "query",
            "name": "output_unit",
            "description": "The output unit for the surface area.",
            "schema": {
              "$ref": "#/components/schemas/UnitArea"
            }
          },
          {
            "in": "query",
            "name": "src_format",
            "description": "The format of the file.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileSurfaceArea"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_file_surface_area",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/file/volume": {
      "post": {
        "tags": [
          "file",
          "beta"
        ],
        "summary": "Get CAD file volume.",
        "description": "We assume any file given to us has one consistent unit throughout. We also assume the file is at the proper scale.\nThis endpoint returns the cubic measure units.\nIn the future, we will use the units inside the file if they are given and do any conversions if necessary for the calculation. But currently, that is not supported.\nGet the volume of an object in a CAD file. If the file is larger than 25MB, it will be performed asynchronously.\nIf the operation is performed asynchronously, the `id` of the operation will be returned. You can use the `id` returned from the request to get status information about the async operation from the `/async/operations/{id}` endpoint.",
        "operationId": "create_file_volume",
        "parameters": [
          {
            "in": "query",
            "name": "output_unit",
            "description": "The output unit for the volume.",
            "schema": {
              "$ref": "#/components/schemas/UnitVolume"
            }
          },
          {
            "in": "query",
            "name": "src_format",
            "description": "The format of the file.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FileImportFormat"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileVolume"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_file_volume",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/hidden/ws/modeling": {
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "Hidden endpoint for defining the modeling websocket types.",
        "operationId": "hidden_ws_modeling_types",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebSocketRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebSocketResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/internal/discord/api-token/{discord_id}": {
      "get": {
        "tags": [
          "meta",
          "hidden"
        ],
        "summary": "Get an API token for a user by their discord id.",
        "description": "This endpoint allows us to run API calls from our discord bot on behalf of a user. The user must have a discord account linked to their KittyCAD Account via oauth2 for this to work.\nYou must be a KittyCAD employee to use this endpoint.",
        "operationId": "internal_get_api_token_for_discord_user",
        "parameters": [
          {
            "in": "path",
            "name": "discord_id",
            "description": "The user's discord ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiToken"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "hidden"
        ],
        "summary": "This endpoint removes the session cookie for a user.",
        "description": "This is used in logout scenarios.",
        "operationId": "logout",
        "responses": {
          "204": {
            "description": "resource updated",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Set-Cookie": {
                "description": "Set-Cookie header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_logout",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/oauth2/device/auth": {
      "post": {
        "tags": [
          "oauth2",
          "hidden"
        ],
        "summary": "Start an OAuth 2.0 Device Authorization Grant.",
        "description": "This endpoint is designed to be accessed from an *unauthenticated* API client. It generates and records a `device_code` and `user_code` which must be verified and confirmed prior to a token being granted.",
        "operationId": "device_auth_request",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceAuthRequestForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {}
              }
            }
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_device_auth_request",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/oauth2/device/confirm": {
      "post": {
        "tags": [
          "oauth2",
          "hidden"
        ],
        "summary": "Confirm an OAuth 2.0 Device Authorization Grant.",
        "description": "This endpoint is designed to be accessed by the user agent (browser), not the client requesting the token. So we do not actually return the token here; it will be returned in response to the poll on `/oauth2/device/token`.",
        "operationId": "device_auth_confirm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceAuthVerifyParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_device_auth_confirm",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/oauth2/device/token": {
      "post": {
        "tags": [
          "oauth2",
          "hidden"
        ],
        "summary": "Request a device access token.",
        "description": "This endpoint should be polled by the client until the user code is verified and the grant is confirmed.",
        "operationId": "device_access_token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeviceAccessTokenRequestForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {}
              }
            }
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_device_access_token",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/oauth2/device/verify": {
      "get": {
        "tags": [
          "oauth2",
          "hidden"
        ],
        "summary": "Verify an OAuth 2.0 Device Authorization Grant.",
        "description": "This endpoint should be accessed in a full user agent (e.g., a browser). If the user is not logged in, we redirect them to the login page and use the `callback_url` parameter to get them to the UI verification form upon logging in. If they are logged in, we redirect them to the UI verification form on the website.",
        "operationId": "device_auth_verify",
        "parameters": [
          {
            "in": "query",
            "name": "user_code",
            "description": "The user code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Temporary Redirect",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/oauth2/provider/{provider}/callback": {
      "get": {
        "tags": [
          "oauth2",
          "hidden"
        ],
        "summary": "Listen for callbacks for the OAuth 2.0 provider.",
        "operationId": "oauth2_provider_callback",
        "parameters": [
          {
            "in": "path",
            "name": "provider",
            "description": "The provider.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AccountProvider"
            }
          },
          {
            "in": "query",
            "name": "code",
            "description": "The authorization code.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "state",
            "description": "The state that we had passed in through the user consent URL.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Temporary Redirect",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Set-Cookie": {
                "description": "Set-Cookie header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/oauth2/provider/{provider}/consent": {
      "get": {
        "tags": [
          "oauth2",
          "hidden"
        ],
        "summary": "Get the consent URL and other information for the OAuth 2.0 provider.",
        "operationId": "oauth2_provider_consent",
        "parameters": [
          {
            "in": "path",
            "name": "provider",
            "description": "The provider.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AccountProvider"
            }
          },
          {
            "in": "query",
            "name": "callback_url",
            "description": "The URL to redirect back to after we have authenticated.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuth2ClientInfo"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/openai/openapi.json": {
      "get": {
        "tags": [
          "meta",
          "hidden"
        ],
        "summary": "Get AI plugin OpenAPI schema.",
        "description": "This is the same as the OpenAPI schema, BUT it has some modifications to make it compatible with OpenAI. For example, descriptions must be < 300 chars.",
        "operationId": "get_openai_schema",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "meta"
        ],
        "summary": "Return pong.",
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pong"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/angle/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert angle units.",
        "description": "Convert an angle unit value to another angle unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_angle_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitAngle"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitAngle"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitAngleConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/area/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert area units.",
        "description": "Convert an area unit value to another area unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_area_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitArea"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitArea"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitAreaConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/current/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert current units.",
        "description": "Convert a current unit value to another current unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_current_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitCurrent"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitCurrent"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitCurrentConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/energy/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert energy units.",
        "description": "Convert a energy unit value to another energy unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_energy_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitEnergy"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitEnergy"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitEnergyConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/force/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert force units.",
        "description": "Convert a force unit value to another force unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_force_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitForce"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitForce"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitForceConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/frequency/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert frequency units.",
        "description": "Convert a frequency unit value to another frequency unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_frequency_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitFrequency"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitFrequency"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitFrequencyConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/length/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert length units.",
        "description": "Convert a length unit value to another length unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_length_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitLength"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitLength"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitLengthConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/mass/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert mass units.",
        "description": "Convert a mass unit value to another mass unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_mass_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitMass"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitMass"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMassConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/power/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert power units.",
        "description": "Convert a power unit value to another power unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_power_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitPower"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitPower"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitPowerConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/pressure/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert pressure units.",
        "description": "Convert a pressure unit value to another pressure unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_pressure_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitPressure"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitPressure"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitPressureConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/temperature/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert temperature units.",
        "description": "Convert a temperature unit value to another temperature unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_temperature_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitTemperature"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitTemperature"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitTemperatureConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/torque/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert torque units.",
        "description": "Convert a torque unit value to another torque unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_torque_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitTorque"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitTorque"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitTorqueConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/unit/conversion/volume/{input_unit}/{output_unit}": {
      "get": {
        "tags": [
          "unit"
        ],
        "summary": "Convert volume units.",
        "description": "Convert a volume unit value to another volume unit value. This is a nice endpoint to use for helper functions.",
        "operationId": "get_volume_unit_conversion",
        "parameters": [
          {
            "in": "path",
            "name": "input_unit",
            "description": "The source format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitVolume"
            }
          },
          {
            "in": "path",
            "name": "output_unit",
            "description": "The output format of the unit.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnitVolume"
            }
          },
          {
            "in": "query",
            "name": "value",
            "description": "The initial value.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitVolumeConversion"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get your user.",
        "description": "Get the user information for the authenticated user.\nAlternatively, you can also use the `/users/me` endpoint.",
        "operationId": "get_user_self",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update your user.",
        "description": "This endpoint requires authentication by any KittyCAD user. It updates information about the authenticated user.",
        "operationId": "update_user_self",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete your user.",
        "description": "This endpoint requires authentication by any KittyCAD user. It deletes the authenticated user from KittyCAD's database.\nThis call will only succeed if all invoices associated with the user have been paid in full and there is no outstanding balance.",
        "operationId": "delete_user_self",
        "responses": {
          "204": {
            "description": "successful deletion",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_user_self",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/api-calls": {
      "get": {
        "tags": [
          "api-calls"
        ],
        "summary": "List API calls for your user.",
        "description": "This endpoint requires authentication by any KittyCAD user. It returns the API calls for the authenticated user.\nThe API calls are returned in order of creation, with the most recently created API calls first.",
        "operationId": "user_list_api_calls",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCallWithPriceResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/user/api-calls/{id}": {
      "get": {
        "tags": [
          "api-calls"
        ],
        "summary": "Get an API call for a user.",
        "description": "This endpoint requires authentication by any KittyCAD user. It returns details of the requested API call for the user.",
        "operationId": "get_api_call_for_user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the API call.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCallWithPrice"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/api-tokens": {
      "get": {
        "tags": [
          "api-tokens"
        ],
        "summary": "List API tokens for your user.",
        "description": "This endpoint requires authentication by any KittyCAD user. It returns the API tokens for the authenticated user.\nThe API tokens are returned in order of creation, with the most recently created API tokens first.",
        "operationId": "list_api_tokens_for_user",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiTokenResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      },
      "post": {
        "tags": [
          "api-tokens"
        ],
        "summary": "Create a new API token for your user.",
        "description": "This endpoint requires authentication by any KittyCAD user. It creates a new API token for the authenticated user.",
        "operationId": "create_api_token_for_user",
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiToken"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_api_token_for_user",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/api-tokens/{token}": {
      "get": {
        "tags": [
          "api-tokens"
        ],
        "summary": "Get an API token for your user.",
        "description": "This endpoint requires authentication by any KittyCAD user. It returns details of the requested API token for the user.",
        "operationId": "get_api_token_for_user",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "The API token.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiToken"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "api-tokens"
        ],
        "summary": "Delete an API token for your user.",
        "description": "This endpoint requires authentication by any KittyCAD user. It deletes the requested API token for the user.\nThis endpoint does not actually delete the API token from the database. It merely marks the token as invalid. We still want to keep the token in the database for historical purposes.",
        "operationId": "delete_api_token_for_user",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "The API token.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful deletion",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_api_token_for_user",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "The API token.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/extended": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get extended information about your user.",
        "description": "Get the user information for the authenticated user.\nAlternatively, you can also use the `/users-extended/me` endpoint.",
        "operationId": "get_user_self_extended",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedUser"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/front-hash": {
      "get": {
        "tags": [
          "users",
          "hidden"
        ],
        "summary": "Get your user's front verification hash.",
        "description": "This info is sent to front when initialing the front chat, it prevents impersonations using js hacks in the browser",
        "operationId": "get_user_front_hash_self",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "title": "String",
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/onboarding": {
      "get": {
        "tags": [
          "users",
          "hidden"
        ],
        "summary": "Get your user's onboarding status.",
        "description": "Checks key part of their api usage to determine their onboarding progress",
        "operationId": "get_user_onboarding_self",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Onboarding"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/payment": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Get payment info about your user.",
        "description": "This includes billing address, phone, and name.\nThis endpoint requires authentication by any KittyCAD user. It gets the payment information for the authenticated user.",
        "operationId": "get_payment_information_for_user",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "payments"
        ],
        "summary": "Update payment info for your user.",
        "description": "This includes billing address, phone, and name.\nThis endpoint requires authentication by any KittyCAD user. It updates the payment information for the authenticated user.",
        "operationId": "update_payment_information_for_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Create payment info for your user.",
        "description": "This includes billing address, phone, and name.\nThis endpoint requires authentication by any KittyCAD user. It creates the payment information for the authenticated user.",
        "operationId": "create_payment_information_for_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "payments"
        ],
        "summary": "Delete payment info for your user.",
        "description": "This includes billing address, phone, and name.\nThis endpoint requires authentication by any KittyCAD user. It deletes the payment information for the authenticated user.",
        "operationId": "delete_payment_information_for_user",
        "responses": {
          "204": {
            "description": "successful deletion",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_payment_information_for_user",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/payment/balance": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Get balance for your user.",
        "description": "This endpoint requires authentication by any KittyCAD user. It gets the balance information for the authenticated user.",
        "operationId": "get_payment_balance_for_user",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerBalance"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/payment/intent": {
      "post": {
        "tags": [
          "payments",
          "hidden"
        ],
        "summary": "Create a payment intent for your user.",
        "description": "This endpoint requires authentication by any KittyCAD user. It creates a new payment intent for the authenticated user.",
        "operationId": "create_payment_intent_for_user",
        "responses": {
          "201": {
            "description": "successful creation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntent"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_payment_intent_for_user",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/payment/invoices": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "List invoices for your user.",
        "description": "This endpoint requires authentication by any KittyCAD user. It lists invoices for the authenticated user.",
        "operationId": "list_invoices_for_user",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_Invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/payment/methods": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "List payment methods for your user.",
        "description": "This endpoint requires authentication by any KittyCAD user. It lists payment methods for the authenticated user.",
        "operationId": "list_payment_methods_for_user",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array_of_PaymentMethod",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/payment/methods/{id}": {
      "delete": {
        "tags": [
          "payments",
          "hidden"
        ],
        "summary": "Delete a payment method for your user.",
        "description": "This endpoint requires authentication by any KittyCAD user. It deletes the specified payment method for the authenticated user.",
        "operationId": "delete_payment_method_for_user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the payment method.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful deletion",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_payment_methods_for_user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the payment method.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/payment/tax": {
      "get": {
        "tags": [
          "payments",
          "hidden"
        ],
        "summary": "Validate a customer's information is correct and valid for automatic tax.",
        "description": "This endpoint requires authentication by any KittyCAD user. It will return an error if the customer's information is not valid for automatic tax. Otherwise, it will return an empty successful response.",
        "operationId": "validate_customer_tax_information_for_user",
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/session/{token}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get a session for your user.",
        "description": "This endpoint requires authentication by any KittyCAD user. It returns details of the requested API token for the user.",
        "operationId": "get_session_for_user",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "The API token.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/user/text-to-cad": {
      "get": {
        "tags": [
          "ai",
          "beta",
          "hidden"
        ],
        "summary": "List text-to-CAD models you've generated.",
        "description": "This will always return the STEP file contents as well as the format the user originally requested.\nThis endpoint requires authentication by any KittyCAD user. It returns the text-to-CAD models for the authenticated user.\nThe text-to-CAD models are returned in order of creation, with the most recently created text-to-CAD models first.",
        "operationId": "list_text_to_cad_models_for_user",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextToCadResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/user/text-to-cad/{id}": {
      "get": {
        "tags": [
          "ai",
          "beta",
          "hidden"
        ],
        "summary": "Get a text-to-CAD response.",
        "description": "This endpoint requires authentication by any KittyCAD user. The user must be the owner of the text-to-CAD model.",
        "operationId": "get_text_to_cad_model_for_user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The id of the model to give feedback to.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextToCad"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "ai",
          "beta",
          "hidden"
        ],
        "summary": "Give feedback to a specific text-to-CAD response.",
        "description": "This endpoint requires authentication by any KittyCAD user. The user must be the owner of the text-to-CAD model, in order to give feedback.",
        "operationId": "create_text_to_cad_model_feedback",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The id of the model to give feedback to.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "feedback",
            "description": "The feedback.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AiFeedback"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "resource updated",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "options": {
        "tags": [
          "hidden"
        ],
        "summary": "OPTIONS endpoint.",
        "description": "This is necessary for some preflight requests, specifically POST, PUT, and DELETE.",
        "operationId": "options_create_text_to_cad_model_feedback",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The id of the model to give feedback to.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation, no content",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users",
          "hidden"
        ],
        "summary": "List users.",
        "description": "This endpoint required authentication by a KittyCAD employee. The users are returned in order of creation, with the most recently created users first.",
        "operationId": "list_users",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/users-extended": {
      "get": {
        "tags": [
          "users",
          "hidden"
        ],
        "summary": "List users with extended information.",
        "description": "This endpoint required authentication by a KittyCAD employee. The users are returned in order of creation, with the most recently created users first.",
        "operationId": "list_users_extended",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedUserResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/users-extended/{id}": {
      "get": {
        "tags": [
          "users",
          "hidden"
        ],
        "summary": "Get extended information about a user.",
        "description": "To get information about yourself, use `/users-extended/me` as the endpoint. By doing so you will get the user information for the authenticated user.\nAlternatively, to get information about the authenticated user, use `/user/extended` endpoint.\nTo get information about any KittyCAD user, you must be a KittyCAD employee.",
        "operationId": "get_user_extended",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The user ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedUser"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users",
          "hidden"
        ],
        "summary": "Get a user.",
        "description": "To get information about yourself, use `/users/me` as the endpoint. By doing so you will get the user information for the authenticated user.\nAlternatively, to get information about the authenticated user, use `/user` endpoint.\nTo get information about any KittyCAD user, you must be a KittyCAD employee.",
        "operationId": "get_user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The user ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/users/{id}/api-calls": {
      "get": {
        "tags": [
          "api-calls",
          "hidden"
        ],
        "summary": "List API calls for a user.",
        "description": "This endpoint requires authentication by any KittyCAD user. It returns the API calls for the authenticated user if \"me\" is passed as the user id.\nAlternatively, you can use the `/user/api-calls` endpoint to get the API calls for your user.\nIf the authenticated user is a KittyCAD employee, then the API calls are returned for the user specified by the user id.\nThe API calls are returned in order of creation, with the most recently created API calls first.",
        "operationId": "list_api_calls_for_user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The user ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items returned by a single call",
            "schema": {
              "nullable": true,
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "description": "Token returned by previous call to retrieve the subsequent page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "$ref": "#/components/schemas/CreatedAtSortMode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Credentials": {
                "description": "Access-Control-Allow-Credentials header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "description": "Access-Control-Allow-Headers header. This is a comma-separated list of headers.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "description": "Access-Control-Allow-Methods header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "description": "Access-Control-Allow-Origin header.",
                "style": "simple",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCallWithPriceResultsPage"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-dropshot-pagination": {
          "required": []
        }
      }
    },
    "/ws/executor/term": {
      "get": {
        "tags": [
          "executor",
          "hidden"
        ],
        "summary": "Create a terminal.",
        "description": "Attach to a docker container to create an interactive terminal.",
        "operationId": "create_executor_term",
        "responses": {
          "default": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {}
              }
            }
          }
        },
        "x-dropshot-websocket": {}
      }
    },
    "/ws/modeling/commands": {
      "get": {
        "tags": [
          "modeling",
          "beta"
        ],
        "summary": "Open a websocket which accepts modeling commands.",
        "description": "Pass those commands to the engine via websocket, and pass responses back to the client. Basically, this is a websocket proxy between the frontend/client and the engine.",
        "operationId": "modeling_commands_ws",
        "parameters": [
          {
            "in": "query",
            "name": "fps",
            "description": "Frames per second of the video feed.",
            "schema": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "unlocked_framerate",
            "description": "If true, engine will render video frames as fast as it can.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "video_res_height",
            "description": "Height of the video feed. Must be a multiple of 4.",
            "schema": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "video_res_width",
            "description": "Width of the video feed. Must be a multiple of 4.",
            "schema": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "webrtc",
            "description": "If true, will start a webrtc connection.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "Websocket requests",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebSocketRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Websocket responses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebSocketResponse"
                }
              }
            }
          }
        },
        "x-dropshot-websocket": {}
      }
    }
  },
  "components": {
    "responses": {
      "Error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "AccountProvider": {
        "description": "An account provider.",
        "oneOf": [
          {
            "description": "The Discord account provider.",
            "type": "string",
            "enum": [
              "discord"
            ]
          },
          {
            "description": "The Google account provider.",
            "type": "string",
            "enum": [
              "google"
            ]
          },
          {
            "description": "The GitHub account provider.",
            "type": "string",
            "enum": [
              "github"
            ]
          }
        ]
      },
      "AiFeedback": {
        "description": "Human feedback on an AI response.",
        "oneOf": [
          {
            "description": "Thumbs up.",
            "type": "string",
            "enum": [
              "thumbs_up"
            ]
          },
          {
            "description": "Thumbs down.",
            "type": "string",
            "enum": [
              "thumbs_down"
            ]
          }
        ]
      },
      "AiPluginApi": {
        "description": "AI plugin api information.",
        "type": "object",
        "properties": {
          "is_user_authenticated": {
            "description": "If the API is authenticated.",
            "default": false,
            "type": "boolean"
          },
          "type": {
            "description": "The type of API.",
            "default": "openapi",
            "allOf": [
              {
                "$ref": "#/components/schemas/AiPluginApiType"
              }
            ]
          },
          "url": {
            "description": "The url to the API's schema.",
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "url"
        ]
      },
      "AiPluginApiType": {
        "description": "AI plugin api type.",
        "oneOf": [
          {
            "description": "An OpenAPI specification.",
            "type": "string",
            "enum": [
              "openapi"
            ]
          }
        ]
      },
      "AiPluginAuth": {
        "description": "AI plugin auth information.",
        "type": "object",
        "properties": {
          "authorization_type": {
            "nullable": true,
            "description": "The type of http authorization.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AiPluginHttpAuthType"
              }
            ]
          },
          "type": {
            "description": "The type of authentication.",
            "default": "none",
            "allOf": [
              {
                "$ref": "#/components/schemas/AiPluginAuthType"
              }
            ]
          }
        }
      },
      "AiPluginAuthType": {
        "description": "AI plugin auth type.",
        "oneOf": [
          {
            "description": "None.",
            "type": "string",
            "enum": [
              "none"
            ]
          },
          {
            "description": "User http.",
            "type": "string",
            "enum": [
              "user_http"
            ]
          },
          {
            "description": "Service http.",
            "type": "string",
            "enum": [
              "service_http"
            ]
          },
          {
            "description": "OAuth.",
            "type": "string",
            "enum": [
              "oauth"
            ]
          }
        ]
      },
      "AiPluginHttpAuthType": {
        "description": "AI plugin http auth type.",
        "oneOf": [
          {
            "description": "Basic.",
            "type": "string",
            "enum": [
              "basic"
            ]
          },
          {
            "description": "Bearer.",
            "type": "string",
            "enum": [
              "bearer"
            ]
          }
        ]
      },
      "AiPluginManifest": {
        "description": "AI plugin manifest.\n\nThis is used for OpenAI's ChatGPT plugins. You can read more about them [here](https://platform.openai.com/docs/plugins/getting-started/plugin-manifest).",
        "type": "object",
        "properties": {
          "api": {
            "description": "API specification.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AiPluginApi"
              }
            ]
          },
          "auth": {
            "description": "Authentication schema.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AiPluginAuth"
              }
            ]
          },
          "contact_email": {
            "description": "Email contact for safety/moderation reachout, support, and deactivation.",
            "type": "string",
            "format": "email"
          },
          "description_for_human": {
            "description": "Human-readable description of the plugin.",
            "type": "string"
          },
          "description_for_model": {
            "description": "Description better tailored to the model, such as token context length considerations or keyword usage for improved plugin prompting.",
            "type": "string"
          },
          "legal_info_url": {
            "description": "Redirect URL for users to view plugin information.",
            "type": "string",
            "format": "uri"
          },
          "logo_url": {
            "description": "URL used to fetch the plugin's logo.",
            "type": "string",
            "format": "uri"
          },
          "name_for_human": {
            "description": "Human-readable name, such as the full company name.",
            "type": "string"
          },
          "name_for_model": {
            "description": "Name the model will used to target the plugin.",
            "type": "string"
          },
          "schema_version": {
            "description": "Manifest schema version.",
            "type": "string"
          }
        },
        "required": [
          "api",
          "auth",
          "legal_info_url",
          "logo_url"
        ]
      },
      "AiPrompt": {
        "description": "An AI prompt.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "When the prompt was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the AI prompt was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error message if the prompt failed.",
            "type": "string"
          },
          "feedback": {
            "nullable": true,
            "description": "Feedback from the user, if any.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AiFeedback"
              }
            ]
          },
          "id": {
            "description": "The unique identifier for the AI Prompt.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "metadata": {
            "nullable": true,
            "description": "The metadata for the prompt."
          },
          "model_version": {
            "description": "The version of the model.",
            "type": "string"
          },
          "output_file": {
            "nullable": true,
            "description": "The output file. In the case of TextToCad this is a link to a file in a GCP bucket.",
            "type": "string"
          },
          "prompt": {
            "description": "The prompt.",
            "type": "string"
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "When the prompt was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the prompt.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "type": {
            "description": "The type of prompt.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AiPromptType"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the AI prompt was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the AI Prompt.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "model_version",
          "prompt",
          "status",
          "type",
          "updated_at",
          "user_id"
        ]
      },
      "AiPromptResultsPage": {
        "description": "A single page of results",
        "type": "object",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AiPrompt"
            }
          },
          "next_page": {
            "nullable": true,
            "description": "token used to fetch the next page of results (if any)",
            "type": "string"
          }
        },
        "required": [
          "items"
        ]
      },
      "AiPromptType": {
        "description": "A type of AI prompt.",
        "oneOf": [
          {
            "description": "Text to CAD.",
            "type": "string",
            "enum": [
              "text_to_cad"
            ]
          }
        ]
      },
      "Angle": {
        "description": "An angle, with a specific unit.",
        "type": "object",
        "properties": {
          "unit": {
            "description": "What unit is the measurement?",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitAngle"
              }
            ]
          },
          "value": {
            "description": "The size of the angle, measured in the chosen unit.",
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "unit",
          "value"
        ]
      },
      "AnnotationLineEnd": {
        "description": "Annotation line end type",
        "type": "string",
        "enum": [
          "none",
          "arrow"
        ]
      },
      "AnnotationLineEndOptions": {
        "description": "Options for annotation text",
        "type": "object",
        "properties": {
          "end": {
            "description": "How to style the end of the annotation line.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AnnotationLineEnd"
              }
            ]
          },
          "start": {
            "description": "How to style the start of the annotation line.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AnnotationLineEnd"
              }
            ]
          }
        },
        "required": [
          "end",
          "start"
        ]
      },
      "AnnotationOptions": {
        "description": "Options for annotations",
        "type": "object",
        "properties": {
          "color": {
            "nullable": true,
            "description": "Color to render the annotation",
            "allOf": [
              {
                "$ref": "#/components/schemas/Color"
              }
            ]
          },
          "line_ends": {
            "nullable": true,
            "description": "How to style the start and end of the line",
            "allOf": [
              {
                "$ref": "#/components/schemas/AnnotationLineEndOptions"
              }
            ]
          },
          "line_width": {
            "nullable": true,
            "description": "Width of the annotation's line",
            "type": "number",
            "format": "float"
          },
          "position": {
            "nullable": true,
            "description": "Position to put the annotation",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "text": {
            "nullable": true,
            "description": "Text displayed on the annotation",
            "allOf": [
              {
                "$ref": "#/components/schemas/AnnotationTextOptions"
              }
            ]
          }
        }
      },
      "AnnotationTextAlignmentX": {
        "description": "Horizontal Text alignment",
        "type": "string",
        "enum": [
          "left",
          "center",
          "right"
        ]
      },
      "AnnotationTextAlignmentY": {
        "description": "Vertical Text alignment",
        "type": "string",
        "enum": [
          "bottom",
          "center",
          "top"
        ]
      },
      "AnnotationTextOptions": {
        "description": "Options for annotation text",
        "type": "object",
        "properties": {
          "point_size": {
            "description": "Text font's point size",
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "text": {
            "description": "Text displayed on the annotation",
            "type": "string"
          },
          "x": {
            "description": "Alignment along the X axis",
            "allOf": [
              {
                "$ref": "#/components/schemas/AnnotationTextAlignmentX"
              }
            ]
          },
          "y": {
            "description": "Alignment along the Y axis",
            "allOf": [
              {
                "$ref": "#/components/schemas/AnnotationTextAlignmentY"
              }
            ]
          }
        },
        "required": [
          "point_size",
          "text",
          "x",
          "y"
        ]
      },
      "AnnotationType": {
        "description": "The type of annotation",
        "oneOf": [
          {
            "description": "2D annotation type (screen or planar space)",
            "type": "string",
            "enum": [
              "t2d"
            ]
          },
          {
            "description": "3D annotation type",
            "type": "string",
            "enum": [
              "t3d"
            ]
          }
        ]
      },
      "ApiCallQueryGroup": {
        "description": "A response for a query on the API call table that is grouped by something.",
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "query": {
            "type": "string"
          }
        },
        "required": [
          "count",
          "query"
        ]
      },
      "ApiCallQueryGroupBy": {
        "description": "The field of an API call to group by.",
        "oneOf": [
          {
            "description": "The email of the user that requested the API call.",
            "type": "string",
            "enum": [
              "email"
            ]
          },
          {
            "description": "The HTTP method of the API call.",
            "type": "string",
            "enum": [
              "method"
            ]
          },
          {
            "description": "The endpoint of the API call.",
            "type": "string",
            "enum": [
              "endpoint"
            ]
          },
          {
            "description": "The user ID of the user that requested the API call.",
            "type": "string",
            "enum": [
              "user_id"
            ]
          },
          {
            "description": "The origin of the API call. This is parsed from the `Origin` header.",
            "type": "string",
            "enum": [
              "origin"
            ]
          },
          {
            "description": "The IP address of the user making the API call.",
            "type": "string",
            "enum": [
              "ip_address"
            ]
          }
        ]
      },
      "ApiCallStatus": {
        "description": "The status of an async API call.",
        "oneOf": [
          {
            "description": "The async API call is queued.",
            "type": "string",
            "enum": [
              "queued"
            ]
          },
          {
            "description": "The async API call was uploaded to be converted.",
            "type": "string",
            "enum": [
              "uploaded"
            ]
          },
          {
            "description": "The async API call is in progress.",
            "type": "string",
            "enum": [
              "in_progress"
            ]
          },
          {
            "description": "The async API call has completed.",
            "type": "string",
            "enum": [
              "completed"
            ]
          },
          {
            "description": "The async API call has failed.",
            "type": "string",
            "enum": [
              "failed"
            ]
          }
        ]
      },
      "ApiCallWithPrice": {
        "description": "An API call with the price.\n\nThis is a join of the `ApiCall` and `ApiCallPrice` tables.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The date and time the API call completed billing.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "nullable": true,
            "title": "int64",
            "description": "The duration of the API call.",
            "type": "integer",
            "format": "duration"
          },
          "email": {
            "description": "The user's email address.",
            "type": "string",
            "format": "email"
          },
          "endpoint": {
            "description": "The endpoint requested by the API call.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "ip_address": {
            "title": "String",
            "description": "The ip address of the origin.",
            "default": "",
            "type": "string",
            "format": "ip"
          },
          "litterbox": {
            "nullable": true,
            "description": "If the API call was spawned from the litterbox or not.",
            "type": "boolean"
          },
          "method": {
            "description": "The HTTP method requested by the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Method"
              }
            ]
          },
          "minutes": {
            "nullable": true,
            "description": "The number of minutes the API call was billed for.",
            "type": "integer",
            "format": "int32"
          },
          "origin": {
            "description": "The origin of the API call.",
            "type": "string"
          },
          "price": {
            "nullable": true,
            "title": "double",
            "description": "The price of the API call.",
            "type": "number",
            "format": "money-usd"
          },
          "request_body": {
            "nullable": true,
            "description": "The request body sent by the API call.",
            "type": "string"
          },
          "request_query_params": {
            "description": "The request query params sent by the API call.",
            "type": "string"
          },
          "response_body": {
            "nullable": true,
            "description": "The response body returned by the API call. We do not store this information if it is above a certain size.",
            "type": "string"
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The date and time the API call started billing.",
            "type": "string",
            "format": "date-time"
          },
          "status_code": {
            "nullable": true,
            "title": "int32",
            "description": "The status code returned by the API call.",
            "type": "integer",
            "format": "int32"
          },
          "stripe_invoice_item_id": {
            "description": "The Stripe invoice item ID of the API call if it is billable.",
            "type": "string"
          },
          "token": {
            "description": "The API token that made the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_agent": {
            "description": "The user agent of the request.",
            "type": "string"
          },
          "user_id": {
            "description": "The ID of the user that made the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "method",
          "token",
          "updated_at",
          "user_agent",
          "user_id"
        ]
      },
      "ApiCallWithPriceResultsPage": {
        "description": "A single page of results",
        "type": "object",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiCallWithPrice"
            }
          },
          "next_page": {
            "nullable": true,
            "description": "token used to fetch the next page of results (if any)",
            "type": "string"
          }
        },
        "required": [
          "items"
        ]
      },
      "ApiError": {
        "description": "An error.",
        "type": "object",
        "properties": {
          "error_code": {
            "description": "The error code.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorCode"
              }
            ]
          },
          "message": {
            "description": "The error message.",
            "type": "string"
          }
        },
        "required": [
          "error_code",
          "message"
        ]
      },
      "ApiToken": {
        "description": "An API token.\n\nThese are used to authenticate users with Bearer authentication.",
        "type": "object",
        "properties": {
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the API token was created.",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "description": "The unique identifier for the API token.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "is_valid": {
            "description": "If the token is valid. We never delete API tokens, but we can mark them as invalid. We save them for ever to preserve the history of the API token.",
            "type": "boolean"
          },
          "token": {
            "description": "The API token itself.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the API token was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The ID of the user that owns the API token.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "is_valid",
          "token",
          "updated_at",
          "user_id"
        ]
      },
      "ApiTokenResultsPage": {
        "description": "A single page of results",
        "type": "object",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiToken"
            }
          },
          "next_page": {
            "nullable": true,
            "description": "token used to fetch the next page of results (if any)",
            "type": "string"
          }
        },
        "required": [
          "items"
        ]
      },
      "AppClientInfo": {
        "description": "Information about a third party app client.",
        "type": "object",
        "properties": {
          "url": {
            "description": "The URL for consent.",
            "type": "string"
          }
        }
      },
      "AsyncApiCall": {
        "description": "An async API call.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the async API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the async API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the async API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The JSON input for the API call. These are determined by the endpoint that is run."
          },
          "output": {
            "nullable": true,
            "description": "The JSON output for the API call. These are determined by the endpoint that is run."
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the async API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the async API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "type": {
            "description": "The type of async API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AsyncApiCallType"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the async API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the async API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "worker": {
            "description": "The worker node that is performing or performed the async API call.",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "id",
          "status",
          "type",
          "updated_at",
          "user_id"
        ]
      },
      "AsyncApiCallOutput": {
        "description": "The output from the async API call.",
        "oneOf": [
          {
            "description": "A file conversion.",
            "type": "object",
            "properties": {
              "completed_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was completed.",
                "type": "string",
                "format": "date-time"
              },
              "created_at": {
                "title": "DateTime",
                "description": "The time and date the API call was created.",
                "type": "string",
                "format": "date-time"
              },
              "error": {
                "nullable": true,
                "description": "The error the function returned, if any.",
                "type": "string"
              },
              "id": {
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              },
              "output_format": {
                "description": "The output format of the file conversion.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileExportFormat"
                  }
                ]
              },
              "output_format_options": {
                "nullable": true,
                "description": "The output format options of the file conversion.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OutputFormat"
                  }
                ]
              },
              "outputs": {
                "description": "The converted files (if multiple file conversion), if completed, base64 encoded. The key of the map is the path of the output file.",
                "type": "object",
                "additionalProperties": {
                  "title": "String",
                  "type": "string",
                  "format": "byte"
                }
              },
              "src_format": {
                "description": "The source format of the file conversion.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileImportFormat"
                  }
                ]
              },
              "src_format_options": {
                "nullable": true,
                "description": "The source format options of the file conversion.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InputFormat"
                  }
                ]
              },
              "started_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was started.",
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "description": "The status of the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "file_conversion"
                ]
              },
              "updated_at": {
                "title": "DateTime",
                "description": "The time and date the API call was last updated.",
                "type": "string",
                "format": "date-time"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              }
            },
            "required": [
              "created_at",
              "id",
              "output_format",
              "src_format",
              "status",
              "type",
              "updated_at",
              "user_id"
            ]
          },
          {
            "description": "File center of mass.",
            "type": "object",
            "properties": {
              "center_of_mass": {
                "nullable": true,
                "description": "The resulting center of mass.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "completed_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was completed.",
                "type": "string",
                "format": "date-time"
              },
              "created_at": {
                "title": "DateTime",
                "description": "The time and date the API call was created.",
                "type": "string",
                "format": "date-time"
              },
              "error": {
                "nullable": true,
                "description": "The error the function returned, if any.",
                "type": "string"
              },
              "id": {
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              },
              "output_unit": {
                "description": "The output unit for the center of mass.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              },
              "src_format": {
                "description": "The source format of the file.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileImportFormat"
                  }
                ]
              },
              "started_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was started.",
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "description": "The status of the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "file_center_of_mass"
                ]
              },
              "updated_at": {
                "title": "DateTime",
                "description": "The time and date the API call was last updated.",
                "type": "string",
                "format": "date-time"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              }
            },
            "required": [
              "created_at",
              "id",
              "output_unit",
              "src_format",
              "status",
              "type",
              "updated_at",
              "user_id"
            ]
          },
          {
            "description": "A file mass.",
            "type": "object",
            "properties": {
              "completed_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was completed.",
                "type": "string",
                "format": "date-time"
              },
              "created_at": {
                "title": "DateTime",
                "description": "The time and date the API call was created.",
                "type": "string",
                "format": "date-time"
              },
              "error": {
                "nullable": true,
                "description": "The error the function returned, if any.",
                "type": "string"
              },
              "id": {
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              },
              "mass": {
                "nullable": true,
                "description": "The resulting mass.",
                "type": "number",
                "format": "double"
              },
              "material_density": {
                "description": "The material density as denoted by the user.",
                "default": 0.0,
                "type": "number",
                "format": "double"
              },
              "material_density_unit": {
                "description": "The material density unit.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitDensity"
                  }
                ]
              },
              "output_unit": {
                "description": "The output unit for the mass.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitMass"
                  }
                ]
              },
              "src_format": {
                "description": "The source format of the file.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileImportFormat"
                  }
                ]
              },
              "started_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was started.",
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "description": "The status of the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "file_mass"
                ]
              },
              "updated_at": {
                "title": "DateTime",
                "description": "The time and date the API call was last updated.",
                "type": "string",
                "format": "date-time"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              }
            },
            "required": [
              "created_at",
              "id",
              "material_density_unit",
              "output_unit",
              "src_format",
              "status",
              "type",
              "updated_at",
              "user_id"
            ]
          },
          {
            "description": "A file volume.",
            "type": "object",
            "properties": {
              "completed_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was completed.",
                "type": "string",
                "format": "date-time"
              },
              "created_at": {
                "title": "DateTime",
                "description": "The time and date the API call was created.",
                "type": "string",
                "format": "date-time"
              },
              "error": {
                "nullable": true,
                "description": "The error the function returned, if any.",
                "type": "string"
              },
              "id": {
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              },
              "output_unit": {
                "description": "The output unit for the volume.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitVolume"
                  }
                ]
              },
              "src_format": {
                "description": "The source format of the file.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileImportFormat"
                  }
                ]
              },
              "started_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was started.",
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "description": "The status of the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "file_volume"
                ]
              },
              "updated_at": {
                "title": "DateTime",
                "description": "The time and date the API call was last updated.",
                "type": "string",
                "format": "date-time"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              },
              "volume": {
                "nullable": true,
                "description": "The resulting volume.",
                "type": "number",
                "format": "double"
              }
            },
            "required": [
              "created_at",
              "id",
              "output_unit",
              "src_format",
              "status",
              "type",
              "updated_at",
              "user_id"
            ]
          },
          {
            "description": "A file density.",
            "type": "object",
            "properties": {
              "completed_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was completed.",
                "type": "string",
                "format": "date-time"
              },
              "created_at": {
                "title": "DateTime",
                "description": "The time and date the API call was created.",
                "type": "string",
                "format": "date-time"
              },
              "density": {
                "nullable": true,
                "description": "The resulting density.",
                "type": "number",
                "format": "double"
              },
              "error": {
                "nullable": true,
                "description": "The error the function returned, if any.",
                "type": "string"
              },
              "id": {
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              },
              "material_mass": {
                "description": "The material mass as denoted by the user.",
                "default": 0.0,
                "type": "number",
                "format": "double"
              },
              "material_mass_unit": {
                "description": "The material mass unit.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitMass"
                  }
                ]
              },
              "output_unit": {
                "description": "The output unit for the density.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitDensity"
                  }
                ]
              },
              "src_format": {
                "description": "The source format of the file.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileImportFormat"
                  }
                ]
              },
              "started_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was started.",
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "description": "The status of the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "file_density"
                ]
              },
              "updated_at": {
                "title": "DateTime",
                "description": "The time and date the API call was last updated.",
                "type": "string",
                "format": "date-time"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              }
            },
            "required": [
              "created_at",
              "id",
              "material_mass_unit",
              "output_unit",
              "src_format",
              "status",
              "type",
              "updated_at",
              "user_id"
            ]
          },
          {
            "description": "A file surface area.",
            "type": "object",
            "properties": {
              "completed_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was completed.",
                "type": "string",
                "format": "date-time"
              },
              "created_at": {
                "title": "DateTime",
                "description": "The time and date the API call was created.",
                "type": "string",
                "format": "date-time"
              },
              "error": {
                "nullable": true,
                "description": "The error the function returned, if any.",
                "type": "string"
              },
              "id": {
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              },
              "output_unit": {
                "description": "The output unit for the surface area.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitArea"
                  }
                ]
              },
              "src_format": {
                "description": "The source format of the file.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileImportFormat"
                  }
                ]
              },
              "started_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was started.",
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "description": "The status of the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ]
              },
              "surface_area": {
                "nullable": true,
                "description": "The resulting surface area.",
                "type": "number",
                "format": "double"
              },
              "type": {
                "type": "string",
                "enum": [
                  "file_surface_area"
                ]
              },
              "updated_at": {
                "title": "DateTime",
                "description": "The time and date the API call was last updated.",
                "type": "string",
                "format": "date-time"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              }
            },
            "required": [
              "created_at",
              "id",
              "output_unit",
              "src_format",
              "status",
              "type",
              "updated_at",
              "user_id"
            ]
          },
          {
            "description": "Text to CAD.",
            "type": "object",
            "properties": {
              "completed_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was completed.",
                "type": "string",
                "format": "date-time"
              },
              "created_at": {
                "title": "DateTime",
                "description": "The time and date the API call was created.",
                "type": "string",
                "format": "date-time"
              },
              "error": {
                "nullable": true,
                "description": "The error the function returned, if any.",
                "type": "string"
              },
              "feedback": {
                "nullable": true,
                "description": "Feedback from the user, if any.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AiFeedback"
                  }
                ]
              },
              "id": {
                "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              },
              "model_version": {
                "description": "The version of the model.",
                "type": "string"
              },
              "output_format": {
                "description": "The output format of the model.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileExportFormat"
                  }
                ]
              },
              "outputs": {
                "description": "The output of the model in the given file format the user requested, base64 encoded. The key of the map is the path of the output file.",
                "type": "object",
                "additionalProperties": {
                  "title": "String",
                  "type": "string",
                  "format": "byte"
                }
              },
              "prompt": {
                "description": "The prompt.",
                "type": "string"
              },
              "started_at": {
                "nullable": true,
                "title": "DateTime",
                "description": "The time and date the API call was started.",
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "description": "The status of the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallStatus"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "text_to_cad"
                ]
              },
              "updated_at": {
                "title": "DateTime",
                "description": "The time and date the API call was last updated.",
                "type": "string",
                "format": "date-time"
              },
              "user_id": {
                "description": "The user ID of the user who created the API call.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Uuid"
                  }
                ]
              }
            },
            "required": [
              "created_at",
              "id",
              "model_version",
              "output_format",
              "prompt",
              "status",
              "type",
              "updated_at",
              "user_id"
            ]
          }
        ]
      },
      "AsyncApiCallResultsPage": {
        "description": "A single page of results",
        "type": "object",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AsyncApiCall"
            }
          },
          "next_page": {
            "nullable": true,
            "description": "token used to fetch the next page of results (if any)",
            "type": "string"
          }
        },
        "required": [
          "items"
        ]
      },
      "AsyncApiCallType": {
        "description": "The type of async API call.",
        "oneOf": [
          {
            "description": "File conversion.",
            "type": "string",
            "enum": [
              "file_conversion"
            ]
          },
          {
            "description": "File volume.",
            "type": "string",
            "enum": [
              "file_volume"
            ]
          },
          {
            "description": "File center of mass.",
            "type": "string",
            "enum": [
              "file_center_of_mass"
            ]
          },
          {
            "description": "File mass.",
            "type": "string",
            "enum": [
              "file_mass"
            ]
          },
          {
            "description": "File density.",
            "type": "string",
            "enum": [
              "file_density"
            ]
          },
          {
            "description": "File surface area.",
            "type": "string",
            "enum": [
              "file_surface_area"
            ]
          },
          {
            "description": "Text to CAD.",
            "type": "string",
            "enum": [
              "text_to_cad"
            ]
          }
        ]
      },
      "Axis": {
        "description": "Co-ordinate axis specifier.\n\nSee [cglearn.eu] for background reading.\n\n[cglearn.eu]: https://cglearn.eu/pub/computer-graphics/introduction-to-geometry#material-coordinate-systems-1",
        "oneOf": [
          {
            "description": "'Y' axis.",
            "type": "string",
            "enum": [
              "y"
            ]
          },
          {
            "description": "'Z' axis.",
            "type": "string",
            "enum": [
              "z"
            ]
          }
        ]
      },
      "AxisDirectionPair": {
        "description": "An [`Axis`] paired with a [`Direction`].",
        "type": "object",
        "properties": {
          "axis": {
            "description": "Axis specifier.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Axis"
              }
            ]
          },
          "direction": {
            "description": "Specifies which direction the axis is pointing.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Direction"
              }
            ]
          }
        },
        "required": [
          "axis",
          "direction"
        ]
      },
      "BillingInfo": {
        "description": "The billing information for payments.",
        "type": "object",
        "properties": {
          "address": {
            "nullable": true,
            "description": "The address of the customer.",
            "allOf": [
              {
                "$ref": "#/components/schemas/NewAddress"
              }
            ]
          },
          "name": {
            "description": "The name of the customer.",
            "type": "string"
          },
          "phone": {
            "title": "String",
            "description": "The phone for the customer.",
            "default": "",
            "type": "string",
            "format": "phone"
          }
        }
      },
      "CacheMetadata": {
        "description": "Metadata about our cache.\n\nThis is mostly used for internal purposes and debugging.",
        "type": "object",
        "properties": {
          "ok": {
            "description": "If the cache returned an ok response from ping.",
            "type": "boolean"
          }
        },
        "required": [
          "ok"
        ]
      },
      "CameraDragInteractionType": {
        "description": "The type of camera drag interaction.",
        "oneOf": [
          {
            "description": "Camera pan",
            "type": "string",
            "enum": [
              "pan"
            ]
          },
          {
            "description": "Camera rotate (revolve/orbit)",
            "type": "string",
            "enum": [
              "rotate"
            ]
          },
          {
            "description": "Camera zoom (increase or decrease distance to reference point center)",
            "type": "string",
            "enum": [
              "zoom"
            ]
          }
        ]
      },
      "CardDetails": {
        "description": "The card details of a payment method.",
        "type": "object",
        "properties": {
          "brand": {
            "description": "Card brand.\n\nCan be `amex`, `diners`, `discover`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
            "type": "string"
          },
          "checks": {
            "description": "Checks on Card address and CVC if provided.",
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodCardChecks"
              }
            ]
          },
          "country": {
            "description": "Two-letter ISO code representing the country of the card.",
            "type": "string"
          },
          "exp_month": {
            "description": "Two-digit number representing the card's expiration month.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "exp_year": {
            "description": "Four-digit number representing the card's expiration year.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular card number.",
            "type": "string"
          },
          "funding": {
            "description": "Card funding type.\n\nCan be `credit`, `debit`, `prepaid`, or `unknown`.",
            "type": "string"
          },
          "last4": {
            "description": "The last four digits of the card.",
            "type": "string"
          }
        }
      },
      "CenterOfMass": {
        "description": "The center of mass response.",
        "type": "object",
        "properties": {
          "center_of_mass": {
            "description": "The center of mass.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "output_unit": {
            "description": "The output unit for the center of mass.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitLength"
              }
            ]
          }
        },
        "required": [
          "center_of_mass",
          "output_unit"
        ]
      },
      "ClientMetrics": {
        "description": "ClientMetrics contains information regarding the state of the peer.",
        "type": "object",
        "properties": {
          "rtc_frames_decoded": {
            "description": "Counter of the number of WebRTC frames that the client has decoded during this session.",
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          },
          "rtc_frames_dropped": {
            "description": "Counter of the number of WebRTC frames the client has dropped during this session.",
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "rtc_frames_per_second": {
            "description": "Current number of frames being rendered per second. A good target is 60 frames per second, but it can fluctuate depending on network conditions.",
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          },
          "rtc_frames_received": {
            "description": "Counter of the number of WebRTC frames that the client has received during this session.",
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          },
          "rtc_freeze_count": {
            "description": "Number of times the WebRTC playback has frozen. This is usually due to network conditions.",
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "rtc_jitter_sec": {
            "description": "Amount of \"jitter\" in the WebRTC session. Network latency is the time it takes a packet to traverse the network. The amount that the latency varies is the jitter. Video latency is the time it takes to render a frame sent by the server (including network latency). A low jitter means the video latency can be reduced without impacting smooth playback. High jitter means clients will increase video latency to ensure smooth playback.",
            "type": "number",
            "format": "float"
          },
          "rtc_keyframes_decoded": {
            "description": "Number of \"key frames\" decoded in the underlying h.264 stream. A key frame is an expensive (bandwidth-wise) \"full image\" of the video frame. Data after the keyframe become -- effectively -- \"diff\" operations on that key frame. The Engine will only send a keyframe if required, which is an indication that some of the \"diffs\" have been lost, usually an indication of poor network conditions. We like this metric to understand times when the connection has had to recover.",
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "rtc_total_freezes_duration_sec": {
            "description": "Number of seconds of frozen video the user has been subjected to.",
            "type": "number",
            "format": "float"
          }
        },
        "required": [
          "rtc_frames_decoded",
          "rtc_frames_dropped",
          "rtc_frames_per_second",
          "rtc_frames_received",
          "rtc_freeze_count",
          "rtc_jitter_sec",
          "rtc_keyframes_decoded",
          "rtc_total_freezes_duration_sec"
        ]
      },
      "Cluster": {
        "description": "Cluster information.",
        "type": "object",
        "properties": {
          "addr": {
            "nullable": true,
            "description": "The IP address of the cluster.",
            "type": "string"
          },
          "auth_timeout": {
            "description": "The auth timeout of the cluster.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "cluster_port": {
            "description": "The port of the cluster.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "description": "The name of the cluster.",
            "default": "",
            "type": "string"
          },
          "tls_timeout": {
            "description": "The TLS timeout for the cluster.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "urls": {
            "description": "The urls of the cluster.",
            "default": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CodeLanguage": {
        "description": "The language code is written in.",
        "oneOf": [
          {
            "description": "The `go` programming language.",
            "type": "string",
            "enum": [
              "go"
            ]
          },
          {
            "description": "The `python` programming language.",
            "type": "string",
            "enum": [
              "python"
            ]
          },
          {
            "description": "The `node` programming language.",
            "type": "string",
            "enum": [
              "node"
            ]
          }
        ]
      },
      "CodeOutput": {
        "description": "Output of the code being executed.",
        "type": "object",
        "properties": {
          "output_files": {
            "description": "The contents of the files requested if they were passed.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutputFile"
            }
          },
          "stderr": {
            "description": "The stderr of the code.",
            "default": "",
            "type": "string"
          },
          "stdout": {
            "description": "The stdout of the code.",
            "default": "",
            "type": "string"
          }
        }
      },
      "Color": {
        "description": "An RGBA color",
        "type": "object",
        "properties": {
          "a": {
            "description": "Alpha",
            "type": "number",
            "format": "float"
          },
          "b": {
            "description": "Blue",
            "type": "number",
            "format": "float"
          },
          "g": {
            "description": "Green",
            "type": "number",
            "format": "float"
          },
          "r": {
            "description": "Red",
            "type": "number",
            "format": "float"
          }
        },
        "required": [
          "a",
          "b",
          "g",
          "r"
        ]
      },
      "Connection": {
        "description": "Metadata about a pub-sub connection.\n\nThis is mostly used for internal purposes and debugging.",
        "type": "object",
        "properties": {
          "auth_timeout": {
            "description": "The auth timeout of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "cluster": {
            "description": "Information about the cluster.",
            "default": {
              "addr": null,
              "auth_timeout": 0,
              "cluster_port": 0,
              "name": "",
              "tls_timeout": 0,
              "urls": []
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Cluster"
              }
            ]
          },
          "config_load_time": {
            "description": "The time the configuration was loaded.",
            "type": "string",
            "format": "date-time"
          },
          "connections": {
            "description": "The number of connections to the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "cores": {
            "description": "The CPU core usage of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "cpu": {
            "description": "The CPU usage of the server.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "gateway": {
            "description": "Information about the gateway.",
            "default": {
              "auth_timeout": 0,
              "host": "",
              "name": "",
              "port": 0,
              "tls_timeout": 0
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Gateway"
              }
            ]
          },
          "git_commit": {
            "description": "The git commit.",
            "default": "",
            "type": "string"
          },
          "go": {
            "description": "The go version.",
            "default": "",
            "type": "string"
          },
          "gomaxprocs": {
            "description": "`GOMAXPROCS` of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "host": {
            "description": "The host of the server.",
            "type": "string",
            "format": "ip"
          },
          "http_base_path": {
            "description": "The http base path of the server.",
            "default": "",
            "type": "string"
          },
          "http_host": {
            "description": "The http host of the server.",
            "default": "",
            "type": "string"
          },
          "http_port": {
            "description": "The http port of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "http_req_stats": {
            "description": "HTTP request statistics.",
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            }
          },
          "https_port": {
            "description": "The https port of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "in_bytes": {
            "description": "The count of inbound bytes for the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "in_msgs": {
            "description": "The number of inbound messages for the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "jetstream": {
            "description": "Jetstream information.",
            "default": {
              "config": {
                "domain": "",
                "max_memory": 0,
                "max_storage": 0,
                "store_dir": ""
              },
              "meta": {
                "cluster_size": 0,
                "leader": "",
                "name": ""
              },
              "stats": {
                "accounts": 0,
                "api": {
                  "errors": 0,
                  "inflight": 0,
                  "total": 0
                },
                "ha_assets": 0,
                "memory": 0,
                "reserved_memory": 0,
                "reserved_store": 0,
                "store": 0
              }
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Jetstream"
              }
            ]
          },
          "leaf": {
            "description": "Information about leaf nodes.",
            "default": {
              "auth_timeout": 0,
              "host": "",
              "port": 0,
              "tls_timeout": 0
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/LeafNode"
              }
            ]
          },
          "leafnodes": {
            "description": "The number of leaf nodes for the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "max_connections": {
            "description": "The max connections of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "max_control_line": {
            "description": "The max control line of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "max_payload": {
            "description": "The max payload of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "max_pending": {
            "description": "The max pending of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "mem": {
            "description": "The memory usage of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "now": {
            "description": "The time now.",
            "type": "string",
            "format": "date-time"
          },
          "out_bytes": {
            "description": "The count of outbound bytes for the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "out_msgs": {
            "description": "The number of outbound messages for the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "ping_interval": {
            "description": "The ping interval of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "ping_max": {
            "description": "The ping max of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "port": {
            "description": "The port of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "proto": {
            "description": "The protocol version.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "remotes": {
            "description": "The number of remotes for the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "routes": {
            "description": "The number of routes for the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "server_id": {
            "description": "The server ID.",
            "default": "",
            "type": "string"
          },
          "server_name": {
            "description": "The server name.",
            "default": "",
            "type": "string"
          },
          "slow_consumers": {
            "description": "The number of slow consumers for the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "start": {
            "description": "When the server was started.",
            "type": "string",
            "format": "date-time"
          },
          "subscriptions": {
            "description": "The number of subscriptions for the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "system_account": {
            "description": "The system account.",
            "default": "",
            "type": "string"
          },
          "tls_timeout": {
            "description": "The TLS timeout of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "total_connections": {
            "description": "The total number of connections to the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "uptime": {
            "description": "The uptime of the server.",
            "default": "",
            "type": "string"
          },
          "version": {
            "description": "The version of the service.",
            "default": "",
            "type": "string"
          },
          "write_deadline": {
            "description": "The write deadline of the server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "config_load_time",
          "host",
          "http_req_stats",
          "now",
          "start"
        ]
      },
      "CountryCode": {
        "description": "An ISO-3166 alpha-2 country code. Always uppercase.",
        "type": "string"
      },
      "Coupon": {
        "description": "The resource representing a Coupon.",
        "type": "object",
        "properties": {
          "amount_off": {
            "nullable": true,
            "title": "double",
            "description": "Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.",
            "type": "number",
            "format": "money-usd"
          },
          "deleted": {
            "description": "Always true for a deleted object.",
            "default": false,
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "percent_off": {
            "nullable": true,
            "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon.\n\nFor example, a coupon with percent_off of 50 will make a %s100 invoice %s50 instead.",
            "type": "number",
            "format": "double"
          }
        }
      },
      "CreatedAtSortMode": {
        "description": "Supported set of sort modes for scanning by created_at only.\n\nCurrently, we only support scanning in ascending order.",
        "oneOf": [
          {
            "description": "Sort in increasing order of \"created_at\".",
            "type": "string",
            "enum": [
              "created_at_ascending"
            ]
          },
          {
            "description": "Sort in decreasing order of \"created_at\".",
            "type": "string",
            "enum": [
              "created_at_descending"
            ]
          }
        ]
      },
      "Currency": {
        "description": "Currency is the list of supported currencies. Always lowercase.\n\nThis comes from the Stripe API docs: For more details see <https://support.stripe.com/questions/which-currencies-does-stripe-support>.",
        "type": "string"
      },
      "CurveGetControlPoints": {
        "description": "The response from the `CurveGetControlPoints` command.",
        "type": "object",
        "properties": {
          "control_points": {
            "description": "Control points in the curve.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Point3d"
            }
          }
        },
        "required": [
          "control_points"
        ]
      },
      "CurveGetEndPoints": {
        "description": "Endpoints of a curve",
        "type": "object",
        "properties": {
          "end": {
            "description": "End",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "start": {
            "description": "Start",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          }
        },
        "required": [
          "end",
          "start"
        ]
      },
      "CurveGetType": {
        "description": "The response from the `CurveGetType` command.",
        "type": "object",
        "properties": {
          "curve_type": {
            "description": "Curve type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CurveType"
              }
            ]
          }
        },
        "required": [
          "curve_type"
        ]
      },
      "CurveType": {
        "description": "The type of Curve (embedded within path)",
        "type": "string",
        "enum": [
          "line",
          "arc",
          "nurbs"
        ]
      },
      "Customer": {
        "description": "The resource representing a payment \"Customer\".",
        "type": "object",
        "properties": {
          "address": {
            "nullable": true,
            "description": "The customer's address.",
            "allOf": [
              {
                "$ref": "#/components/schemas/NewAddress"
              }
            ]
          },
          "balance": {
            "title": "double",
            "description": "Current balance, if any, being stored on the customer in the payments service.\n\nIf negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.",
            "default": 0.0,
            "type": "number",
            "format": "money-usd"
          },
          "created_at": {
            "description": "Time at which the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "description": "Three-letter ISO code for the currency the customer can be charged in for recurring billing purposes.",
            "default": "usd",
            "allOf": [
              {
                "$ref": "#/components/schemas/Currency"
              }
            ]
          },
          "delinquent": {
            "description": "When the customer's latest invoice is billed by charging automatically, `delinquent` is `true` if the invoice's latest charge failed.\n\nWhen the customer's latest invoice is billed by sending an invoice, `delinquent` is `true` if the invoice isn't paid by its due date.  If an invoice is marked uncollectible by dunning, `delinquent` doesn't get reset to `false`.",
            "default": false,
            "type": "boolean"
          },
          "email": {
            "description": "The customer's email address.",
            "type": "string",
            "format": "email"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "metadata": {
            "description": "Set of key-value pairs.",
            "default": {},
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "description": "The customer's full name or business name.",
            "type": "string"
          },
          "phone": {
            "title": "String",
            "description": "The customer's phone number.",
            "default": "",
            "type": "string",
            "format": "phone"
          }
        },
        "required": [
          "created_at"
        ]
      },
      "CustomerBalance": {
        "description": "A balance for a user.\n\nThis holds information about the financial balance for the user.",
        "type": "object",
        "properties": {
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the balance was created.",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "description": "The unique identifier for the balance.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "monthly_credits_remaining": {
            "title": "double",
            "description": "The monthy credits remaining in the balance. This gets re-upped every month, but if the credits are not used for a month they do not carry over to the next month. It is a stable amount granted to the user per month.",
            "type": "number",
            "format": "money-usd"
          },
          "pre_pay_cash_remaining": {
            "title": "double",
            "description": "The amount of pre-pay cash remaining in the balance. This number goes down as the user uses their pre-paid credits. The reason we track this amount is if a user ever wants to withdraw their pre-pay cash, we can use this amount to determine how much to give them. Say a user has $100 in pre-paid cash, their bill is worth, $50 after subtracting any other credits (like monthly etc.) Their bill is $50, their pre-pay cash remaining will be subtracted by 50 to pay the bill and their `pre_pay_credits_remaining` will be subtracted by 50 to pay the bill. This way if they want to withdraw money after, they can only withdraw $50 since that is the amount of cash they have remaining.",
            "type": "number",
            "format": "money-usd"
          },
          "pre_pay_credits_remaining": {
            "title": "double",
            "description": "The amount of credits remaining in the balance. This is typically the amount of cash * some multiplier they get for pre-paying their account. This number lowers every time a bill is paid with the balance. This number increases every time a user adds funds to their balance. This may be through a subscription or a one off payment.",
            "type": "number",
            "format": "money-usd"
          },
          "total_due": {
            "title": "double",
            "description": "This includes any outstanding, draft, or open invoices and any pending invoice items. This does not include any credits the user has on their account.",
            "type": "number",
            "format": "money-usd"
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the balance was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID the balance belongs to.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "monthly_credits_remaining",
          "pre_pay_cash_remaining",
          "pre_pay_credits_remaining",
          "total_due",
          "updated_at",
          "user_id"
        ]
      },
      "Density": {
        "description": "The density response.",
        "type": "object",
        "properties": {
          "density": {
            "description": "The density.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output unit for the density.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitDensity"
              }
            ]
          }
        },
        "required": [
          "density",
          "output_unit"
        ]
      },
      "DeviceAccessTokenRequestForm": {
        "description": "The form for a device access token request.",
        "type": "object",
        "properties": {
          "client_id": {
            "description": "The client ID.",
            "type": "string",
            "format": "uuid"
          },
          "device_code": {
            "description": "The device code.",
            "type": "string",
            "format": "uuid"
          },
          "grant_type": {
            "description": "The grant type.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OAuth2GrantType"
              }
            ]
          }
        },
        "required": [
          "client_id",
          "device_code",
          "grant_type"
        ]
      },
      "DeviceAuthRequestForm": {
        "description": "The request parameters for the OAuth 2.0 Device Authorization Grant flow.",
        "type": "object",
        "properties": {
          "client_id": {
            "description": "The client ID.",
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "client_id"
        ]
      },
      "DeviceAuthVerifyParams": {
        "description": "The request parameters to verify the `user_code` for the OAuth 2.0 Device Authorization Grant.",
        "type": "object",
        "properties": {
          "user_code": {
            "description": "The user code.",
            "type": "string"
          }
        },
        "required": [
          "user_code"
        ]
      },
      "Direction": {
        "description": "Specifies the sign of a co-ordinate axis.",
        "oneOf": [
          {
            "description": "Increasing numbers.",
            "type": "string",
            "enum": [
              "positive"
            ]
          },
          {
            "description": "Decreasing numbers.",
            "type": "string",
            "enum": [
              "negative"
            ]
          }
        ]
      },
      "Discount": {
        "description": "The resource representing a Discount.",
        "type": "object",
        "properties": {
          "coupon": {
            "description": "The coupon that applied to create this discount.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Coupon"
              }
            ]
          }
        },
        "required": [
          "coupon"
        ]
      },
      "EmailAuthenticationForm": {
        "description": "The body of the form for email authentication.",
        "type": "object",
        "properties": {
          "callback_url": {
            "nullable": true,
            "description": "The URL to redirect back to after we have authenticated.",
            "type": "string",
            "format": "uri"
          },
          "email": {
            "description": "The user's email.",
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "email"
        ]
      },
      "EntityGetAllChildUuids": {
        "description": "The response from the `EntityGetAllChildUuids` command.",
        "type": "object",
        "properties": {
          "entity_ids": {
            "description": "The UUIDs of the child entities.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "entity_ids"
        ]
      },
      "EntityGetChildUuid": {
        "description": "The response from the `EntityGetChildUuid` command.",
        "type": "object",
        "properties": {
          "entity_id": {
            "description": "The UUID of the child entity.",
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "entity_id"
        ]
      },
      "EntityGetNumChildren": {
        "description": "The response from the `EntityGetNumChildren` command.",
        "type": "object",
        "properties": {
          "num": {
            "description": "The number of children the entity has.",
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        },
        "required": [
          "num"
        ]
      },
      "EntityGetParentId": {
        "description": "The response from the `EntityGetParentId` command.",
        "type": "object",
        "properties": {
          "entity_id": {
            "description": "The UUID of the parent entity.",
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "entity_id"
        ]
      },
      "EntityType": {
        "description": "The type of entity",
        "type": "string",
        "enum": [
          "entity",
          "object",
          "path",
          "curve",
          "solid2d",
          "solid3d",
          "edge",
          "face",
          "plane"
        ]
      },
      "Environment": {
        "description": "The environment the server is running in.",
        "oneOf": [
          {
            "description": "The development environment. This is for running locally.",
            "type": "string",
            "enum": [
              "DEVELOPMENT"
            ]
          },
          {
            "description": "The preview environment. This is when PRs are created and a service is deployed for testing.",
            "type": "string",
            "enum": [
              "PREVIEW"
            ]
          },
          {
            "description": "The production environment.",
            "type": "string",
            "enum": [
              "PRODUCTION"
            ]
          }
        ]
      },
      "Error": {
        "description": "Error information from a response.",
        "type": "object",
        "properties": {
          "error_code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "request_id": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "request_id"
        ]
      },
      "ErrorCode": {
        "description": "The type of error sent by the KittyCAD API.",
        "oneOf": [
          {
            "description": "Graphics engine failed to complete request, consider retrying",
            "type": "string",
            "enum": [
              "internal_engine"
            ]
          },
          {
            "description": "API failed to complete request, consider retrying",
            "type": "string",
            "enum": [
              "internal_api"
            ]
          },
          {
            "description": "User requested something geometrically or graphically impossible. Don't retry this request, as it's inherently impossible. Instead, read the error message and change your request.",
            "type": "string",
            "enum": [
              "bad_request"
            ]
          },
          {
            "description": "Client sent invalid JSON.",
            "type": "string",
            "enum": [
              "invalid_json"
            ]
          },
          {
            "description": "Client sent invalid BSON.",
            "type": "string",
            "enum": [
              "invalid_bson"
            ]
          },
          {
            "description": "Client sent a message which is not accepted over this protocol.",
            "type": "string",
            "enum": [
              "wrong_protocol"
            ]
          },
          {
            "description": "Problem sending data between client and KittyCAD API.",
            "type": "string",
            "enum": [
              "connection_problem"
            ]
          },
          {
            "description": "Client sent a Websocket message type which the KittyCAD API does not handle.",
            "type": "string",
            "enum": [
              "message_type_not_accepted"
            ]
          },
          {
            "description": "Client sent a Websocket message intended for WebRTC but it was configured as a WebRTC connection.",
            "type": "string",
            "enum": [
              "message_type_not_accepted_for_web_r_t_c"
            ]
          }
        ]
      },
      "Export": {
        "description": "The response from the `Export` endpoint.",
        "type": "object",
        "properties": {
          "files": {
            "description": "The files that were exported.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExportFile"
            }
          }
        },
        "required": [
          "files"
        ]
      },
      "ExportFile": {
        "description": "A file to be exported to the client.",
        "type": "object",
        "properties": {
          "contents": {
            "title": "String",
            "description": "The contents of the file, base64 encoded.",
            "type": "string",
            "format": "byte"
          },
          "name": {
            "description": "The name of the file.",
            "type": "string"
          }
        },
        "required": [
          "contents",
          "name"
        ]
      },
      "ExtendedUser": {
        "description": "Extended user information.\n\nThis is mostly used for internal purposes. It returns a mapping of the user's information, including that of our third party services we use for users: MailChimp, Stripe, and Front",
        "type": "object",
        "properties": {
          "company": {
            "description": "The user's company.",
            "type": "string"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the user was created.",
            "type": "string",
            "format": "date-time"
          },
          "discord": {
            "description": "The user's Discord handle.",
            "type": "string"
          },
          "email": {
            "description": "The email address of the user.",
            "type": "string",
            "format": "email"
          },
          "email_verified": {
            "nullable": true,
            "title": "DateTime",
            "description": "The date and time the email address was verified.",
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "description": "The user's first name.",
            "type": "string"
          },
          "front_id": {
            "nullable": true,
            "description": "The user's Front ID. This is mostly used for internal mapping.",
            "type": "string"
          },
          "github": {
            "description": "The user's GitHub handle.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the user.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "image": {
            "title": "String",
            "description": "The image avatar for the user. This is a URL.",
            "type": "string",
            "format": "uri"
          },
          "last_name": {
            "description": "The user's last name.",
            "type": "string"
          },
          "mailchimp_id": {
            "nullable": true,
            "description": "The user's MailChimp ID. This is mostly used for internal mapping.",
            "type": "string"
          },
          "name": {
            "description": "The name of the user. This is auto populated at first from the authentication provider (if there was a name). It can be updated by the user by updating their `first_name` and `last_name` fields.",
            "type": "string"
          },
          "phone": {
            "title": "String",
            "description": "The user's phone number.",
            "default": "",
            "type": "string",
            "format": "phone"
          },
          "stripe_id": {
            "nullable": true,
            "description": "The user's Stripe ID. This is mostly used for internal mapping.",
            "type": "string"
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the user was last updated.",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "created_at",
          "id",
          "image",
          "updated_at"
        ]
      },
      "ExtendedUserResultsPage": {
        "description": "A single page of results",
        "type": "object",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedUser"
            }
          },
          "next_page": {
            "nullable": true,
            "description": "token used to fetch the next page of results (if any)",
            "type": "string"
          }
        },
        "required": [
          "items"
        ]
      },
      "FailureWebSocketResponse": {
        "description": "Unsuccessful Websocket response.",
        "type": "object",
        "properties": {
          "errors": {
            "description": "The errors that occurred.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "request_id": {
            "nullable": true,
            "description": "Which request this is a response to. If the request was a modeling command, this is the modeling command ID. If no request ID was sent, this will be null.",
            "type": "string",
            "format": "uuid"
          },
          "success": {
            "description": "Always false",
            "type": "boolean"
          }
        },
        "required": [
          "errors",
          "success"
        ]
      },
      "FbxStorage": {
        "description": "Describes the storage format of an FBX file.",
        "oneOf": [
          {
            "description": "ASCII FBX encoding.",
            "type": "string",
            "enum": [
              "ascii"
            ]
          },
          {
            "description": "Binary FBX encoding.",
            "type": "string",
            "enum": [
              "binary"
            ]
          }
        ]
      },
      "FileCenterOfMass": {
        "description": "A file center of mass result.",
        "type": "object",
        "properties": {
          "center_of_mass": {
            "nullable": true,
            "description": "The resulting center of mass.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "output_unit": {
            "description": "The output unit for the center of mass.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitLength"
              }
            ]
          },
          "src_format": {
            "description": "The source format of the file.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileImportFormat"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "output_unit",
          "src_format",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "FileConversion": {
        "description": "A file conversion.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "output_format": {
            "description": "The output format of the file conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileExportFormat"
              }
            ]
          },
          "output_format_options": {
            "nullable": true,
            "description": "The output format options of the file conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OutputFormat"
              }
            ]
          },
          "outputs": {
            "description": "The converted files (if multiple file conversion), if completed, base64 encoded. The key of the map is the path of the output file.",
            "type": "object",
            "additionalProperties": {
              "title": "String",
              "type": "string",
              "format": "byte"
            }
          },
          "src_format": {
            "description": "The source format of the file conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileImportFormat"
              }
            ]
          },
          "src_format_options": {
            "nullable": true,
            "description": "The source format options of the file conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/InputFormat"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "output_format",
          "src_format",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "FileDensity": {
        "description": "A file density result.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "density": {
            "nullable": true,
            "description": "The resulting density.",
            "type": "number",
            "format": "double"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "material_mass": {
            "description": "The material mass as denoted by the user.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "material_mass_unit": {
            "description": "The material mass unit.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitMass"
              }
            ]
          },
          "output_unit": {
            "description": "The output unit for the density.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitDensity"
              }
            ]
          },
          "src_format": {
            "description": "The source format of the file.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileImportFormat"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "material_mass_unit",
          "output_unit",
          "src_format",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "FileExportFormat": {
        "description": "The valid types of output file formats.",
        "oneOf": [
          {
            "description": "Autodesk Filmbox (FBX) format. <https://en.wikipedia.org/wiki/FBX>",
            "type": "string",
            "enum": [
              "fbx"
            ]
          },
          {
            "description": "Binary glTF 2.0.\n\nThis is a single binary with .glb extension.\n\nThis is better if you want a compressed format as opposed to the human readable glTF that lacks compression.",
            "type": "string",
            "enum": [
              "glb"
            ]
          },
          {
            "description": "glTF 2.0. Embedded glTF 2.0 (pretty printed).\n\nSingle JSON file with .gltf extension binary data encoded as base64 data URIs.\n\nThe JSON contents are pretty printed.\n\nIt is human readable, single file, and you can view the diff easily in a git commit.",
            "type": "string",
            "enum": [
              "gltf"
            ]
          },
          {
            "description": "The OBJ file format. <https://en.wikipedia.org/wiki/Wavefront_.obj_file> It may or may not have an an attached material (mtl // mtllib) within the file, but we interact with it as if it does not.",
            "type": "string",
            "enum": [
              "obj"
            ]
          },
          {
            "description": "The PLY file format. <https://en.wikipedia.org/wiki/PLY_(file_format)>",
            "type": "string",
            "enum": [
              "ply"
            ]
          },
          {
            "description": "The STEP file format. <https://en.wikipedia.org/wiki/ISO_10303-21>",
            "type": "string",
            "enum": [
              "step"
            ]
          },
          {
            "description": "The STL file format. <https://en.wikipedia.org/wiki/STL_(file_format)>",
            "type": "string",
            "enum": [
              "stl"
            ]
          }
        ]
      },
      "FileImportFormat": {
        "description": "The valid types of source file formats.",
        "oneOf": [
          {
            "description": "Autodesk Filmbox (FBX) format. <https://en.wikipedia.org/wiki/FBX>",
            "type": "string",
            "enum": [
              "fbx"
            ]
          },
          {
            "description": "glTF 2.0.",
            "type": "string",
            "enum": [
              "gltf"
            ]
          },
          {
            "description": "The OBJ file format. <https://en.wikipedia.org/wiki/Wavefront_.obj_file> It may or may not have an an attached material (mtl // mtllib) within the file, but we interact with it as if it does not.",
            "type": "string",
            "enum": [
              "obj"
            ]
          },
          {
            "description": "The PLY file format. <https://en.wikipedia.org/wiki/PLY_(file_format)>",
            "type": "string",
            "enum": [
              "ply"
            ]
          },
          {
            "description": "SolidWorks part (SLDPRT) format.",
            "type": "string",
            "enum": [
              "sldprt"
            ]
          },
          {
            "description": "The STEP file format. <https://en.wikipedia.org/wiki/ISO_10303-21>",
            "type": "string",
            "enum": [
              "step"
            ]
          },
          {
            "description": "The STL file format. <https://en.wikipedia.org/wiki/STL_(file_format)>",
            "type": "string",
            "enum": [
              "stl"
            ]
          }
        ]
      },
      "FileMass": {
        "description": "A file mass result.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "mass": {
            "nullable": true,
            "description": "The resulting mass.",
            "type": "number",
            "format": "double"
          },
          "material_density": {
            "description": "The material density as denoted by the user.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "material_density_unit": {
            "description": "The material density unit.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitDensity"
              }
            ]
          },
          "output_unit": {
            "description": "The output unit for the mass.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitMass"
              }
            ]
          },
          "src_format": {
            "description": "The source format of the file.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileImportFormat"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "material_density_unit",
          "output_unit",
          "src_format",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "FileSurfaceArea": {
        "description": "A file surface area result.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "output_unit": {
            "description": "The output unit for the surface area.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitArea"
              }
            ]
          },
          "src_format": {
            "description": "The source format of the file.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileImportFormat"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "surface_area": {
            "nullable": true,
            "description": "The resulting surface area.",
            "type": "number",
            "format": "double"
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "output_unit",
          "src_format",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "FileSystemMetadata": {
        "description": "Metadata about our file system.\n\nThis is mostly used for internal purposes and debugging.",
        "type": "object",
        "properties": {
          "ok": {
            "description": "If the file system passed a sanity check.",
            "type": "boolean"
          }
        },
        "required": [
          "ok"
        ]
      },
      "FileVolume": {
        "description": "A file volume result.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "output_unit": {
            "description": "The output unit for the volume.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitVolume"
              }
            ]
          },
          "src_format": {
            "description": "The source format of the file.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileImportFormat"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "volume": {
            "nullable": true,
            "description": "The resulting volume.",
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "created_at",
          "id",
          "output_unit",
          "src_format",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "Gateway": {
        "description": "Gateway information.",
        "type": "object",
        "properties": {
          "auth_timeout": {
            "description": "The auth timeout of the gateway.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "host": {
            "description": "The host of the gateway.",
            "default": "",
            "type": "string"
          },
          "name": {
            "description": "The name of the gateway.",
            "default": "",
            "type": "string"
          },
          "port": {
            "description": "The port of the gateway.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "tls_timeout": {
            "description": "The TLS timeout for the gateway.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetEntityType": {
        "description": "The response from the `GetEntityType` command.",
        "type": "object",
        "properties": {
          "entity_type": {
            "description": "The type of the entity.",
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityType"
              }
            ]
          }
        },
        "required": [
          "entity_type"
        ]
      },
      "GetSketchModePlane": {
        "description": "The plane for sketch mode.",
        "type": "object",
        "properties": {
          "x_axis": {
            "description": "The x axis.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "y_axis": {
            "description": "The y axis.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          },
          "z_axis": {
            "description": "The z axis (normal).",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point3d"
              }
            ]
          }
        },
        "required": [
          "x_axis",
          "y_axis",
          "z_axis"
        ]
      },
      "GltfPresentation": {
        "description": "Describes the presentation style of the glTF JSON.",
        "oneOf": [
          {
            "description": "Condense the JSON into the smallest possible size.",
            "type": "string",
            "enum": [
              "compact"
            ]
          },
          {
            "description": "Expand the JSON into a more human readable format.\n\nThis is the default setting.",
            "type": "string",
            "enum": [
              "pretty"
            ]
          }
        ]
      },
      "GltfStorage": {
        "description": "Describes the storage format of a glTF 2.0 scene.",
        "oneOf": [
          {
            "description": "Binary glTF 2.0.\n\nThis is a single binary with .glb extension.",
            "type": "string",
            "enum": [
              "binary"
            ]
          },
          {
            "description": "Standard glTF 2.0.\n\nThis is a JSON file with .gltf extension paired with a separate binary blob file with .bin extension.",
            "type": "string",
            "enum": [
              "standard"
            ]
          },
          {
            "description": "Embedded glTF 2.0.\n\nSingle JSON file with .gltf extension binary data encoded as base64 data URIs.\n\nThis is the default setting.",
            "type": "string",
            "enum": [
              "embedded"
            ]
          }
        ]
      },
      "HighlightSetEntity": {
        "description": "The response from the `HighlightSetEntity` command.",
        "type": "object",
        "properties": {
          "entity_id": {
            "nullable": true,
            "description": "The UUID of the entity that was highlighted.",
            "type": "string",
            "format": "uuid"
          },
          "sequence": {
            "nullable": true,
            "description": "If the client sent a sequence ID with its request, the backend sends it back.",
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          }
        }
      },
      "IceServer": {
        "description": "Representation of an ICE server used for STUN/TURN Used to initiate WebRTC connections based on <https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer>",
        "type": "object",
        "properties": {
          "credential": {
            "nullable": true,
            "description": "Credentials for a given TURN server.",
            "type": "string"
          },
          "urls": {
            "description": "URLs for a given STUN/TURN server. IceServer urls can either be a string or an array of strings But, we choose to always convert to an array of strings for consistency",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "username": {
            "nullable": true,
            "description": "Username for a given TURN server.",
            "type": "string"
          }
        },
        "required": [
          "urls"
        ]
      },
      "ImageFormat": {
        "description": "Enum containing the variety of image formats snapshots may be exported to.",
        "oneOf": [
          {
            "description": ".png format",
            "type": "string",
            "enum": [
              "png"
            ]
          },
          {
            "description": ".jpeg format",
            "type": "string",
            "enum": [
              "jpeg"
            ]
          }
        ]
      },
      "ImportFile": {
        "description": "File to import into the current model",
        "type": "object",
        "properties": {
          "data": {
            "description": "The raw bytes of the file",
            "type": "array",
            "items": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0
            }
          },
          "path": {
            "description": "The file's full path, including file extension.",
            "type": "string"
          }
        },
        "required": [
          "data",
          "path"
        ]
      },
      "ImportFiles": {
        "description": "Data from importing the files",
        "type": "object",
        "properties": {
          "object_id": {
            "description": "ID of the imported 3D models within the scene.",
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "object_id"
        ]
      },
      "InputFormat": {
        "description": "Input format specifier.",
        "oneOf": [
          {
            "description": "Autodesk Filmbox (FBX) format.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "fbx"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Binary glTF 2.0. We refer to this as glTF since that is how our customers refer to it, but this can also import binary glTF (glb).",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gltf"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Wavefront OBJ format.",
            "type": "object",
            "properties": {
              "coords": {
                "description": "Co-ordinate system of input data.\n\nDefaults to the [KittyCAD co-ordinate system].\n\n[KittyCAD co-ordinate system]: ../coord/constant.KITTYCAD.html",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/System"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "obj"
                ]
              },
              "units": {
                "description": "The units of the input data. This is very important for correct scaling and when calculating physics properties like mass, etc.\n\nDefaults to meters.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              }
            },
            "required": [
              "coords",
              "type",
              "units"
            ]
          },
          {
            "description": "The PLY Polygon File Format.",
            "type": "object",
            "properties": {
              "coords": {
                "description": "Co-ordinate system of input data.\n\nDefaults to the [KittyCAD co-ordinate system].\n\n[KittyCAD co-ordinate system]: ../coord/constant.KITTYCAD.html",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/System"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "ply"
                ]
              },
              "units": {
                "description": "The units of the input data. This is very important for correct scaling and when calculating physics properties like mass, etc.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              }
            },
            "required": [
              "coords",
              "type",
              "units"
            ]
          },
          {
            "description": "SolidWorks part (SLDPRT) format.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "sldprt"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "ISO 10303-21 (STEP) format.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "step"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "*ST**ereo**L**ithography format.",
            "type": "object",
            "properties": {
              "coords": {
                "description": "Co-ordinate system of input data.\n\nDefaults to the [KittyCAD co-ordinate system].\n\n[KittyCAD co-ordinate system]: ../coord/constant.KITTYCAD.html",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/System"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "stl"
                ]
              },
              "units": {
                "description": "The units of the input data. This is very important for correct scaling and when calculating physics properties like mass, etc.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              }
            },
            "required": [
              "coords",
              "type",
              "units"
            ]
          }
        ]
      },
      "Invoice": {
        "description": "An invoice.",
        "type": "object",
        "properties": {
          "amount_due": {
            "title": "double",
            "description": "Final amount due at this time for this invoice.\n\nIf the invoice's total is smaller than the minimum charge amount, for example, or if there is account credit that can be applied to the invoice, the `amount_due` may be 0. If there is a positive `starting_balance` for the invoice (the customer owes money), the `amount_due` will also take that into account. The charge that gets generated for the invoice will be for the amount specified in `amount_due`.",
            "default": 0.0,
            "type": "number",
            "format": "money-usd"
          },
          "amount_paid": {
            "title": "double",
            "description": "The amount, in USD, that was paid.",
            "default": 0.0,
            "type": "number",
            "format": "money-usd"
          },
          "amount_remaining": {
            "title": "double",
            "description": "The amount remaining, in USD, that is due.",
            "default": 0.0,
            "type": "number",
            "format": "money-usd"
          },
          "attempt_count": {
            "description": "Number of payment attempts made for this invoice, from the perspective of the payment retry schedule.\n\nAny payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count. In other words, manual payment attempts after the first attempt do not affect the retry schedule.",
            "default": 0,
            "type": "integer",
            "format": "uint64",
            "minimum": 0
          },
          "attempted": {
            "description": "Whether an attempt has been made to pay the invoice.\n\nAn invoice is not attempted until 1 hour after the `invoice.created` webhook, for example, so you might not want to display that invoice as unpaid to your users.",
            "default": false,
            "type": "boolean"
          },
          "created_at": {
            "description": "Time at which the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.",
            "default": "usd",
            "allOf": [
              {
                "$ref": "#/components/schemas/Currency"
              }
            ]
          },
          "customer_email": {
            "description": "The email address for the customer. Until the invoice is finalized, this field will equal customer.email. Once the invoice is finalized, this field will no longer be updated.",
            "type": "string",
            "format": "email"
          },
          "customer_id": {
            "description": "Customer ID. The unique identifier for the customer this invoice belongs to. This is the customer ID in the payments service, not our database customer ID.",
            "type": "string"
          },
          "default_payment_method": {
            "description": "Default payment method.",
            "type": "string"
          },
          "description": {
            "description": "Description of the invoice.",
            "type": "string"
          },
          "discounts": {
            "description": "The discounts applied to the invoice. This is an array of discount objects.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Discount"
            }
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "lines": {
            "description": "The individual line items that make up the invoice.\n\n`lines` is sorted as follows: invoice items in reverse chronological order, followed by the subscription, if any.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItem"
            }
          },
          "metadata": {
            "description": "Set of key-value pairs.",
            "default": {},
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "number": {
            "description": "A unique, identifying string that appears on emails sent to the customer for this invoice.",
            "type": "string"
          },
          "paid": {
            "description": "Whether payment was successfully collected for this invoice.\n\nAn invoice can be paid (most commonly) with a charge or with credit from the customer's account balance.",
            "default": false,
            "type": "boolean"
          },
          "pdf": {
            "nullable": true,
            "description": "The link to download the PDF for the invoice.",
            "type": "string",
            "format": "uri"
          },
          "receipt_number": {
            "description": "This is the transaction number that appears on email receipts sent for this invoice.",
            "type": "string"
          },
          "statement_descriptor": {
            "description": "Extra information about an invoice for the customer's credit card statement.",
            "type": "string"
          },
          "status": {
            "nullable": true,
            "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`.\n\n[Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview).",
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceStatus"
              }
            ]
          },
          "subtotal": {
            "title": "double",
            "description": "Total of all subscriptions, invoice items, and prorations on the invoice before any invoice level discount or tax is applied.\n\nItem discounts are already incorporated.",
            "default": 0.0,
            "type": "number",
            "format": "money-usd"
          },
          "tax": {
            "title": "double",
            "description": "The amount of tax on this invoice.\n\nThis is the sum of all the tax amounts on this invoice.",
            "default": 0.0,
            "type": "number",
            "format": "money-usd"
          },
          "total": {
            "title": "double",
            "description": "Total after discounts and taxes.",
            "default": 0.0,
            "type": "number",
            "format": "money-usd"
          },
          "url": {
            "nullable": true,
            "description": "The URL for the hosted invoice page, which allows customers to view and pay an invoice.",
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "created_at"
        ]
      },
      "InvoiceLineItem": {
        "description": "An invoice line item.",
        "type": "object",
        "properties": {
          "amount": {
            "title": "double",
            "description": "The amount, in USD.",
            "default": 0.0,
            "type": "number",
            "format": "money-usd"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.",
            "default": "usd",
            "allOf": [
              {
                "$ref": "#/components/schemas/Currency"
              }
            ]
          },
          "description": {
            "description": "The description.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "invoice_item": {
            "description": "The ID of the invoice item associated with this line item if any.",
            "type": "string"
          },
          "metadata": {
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object.\n\nSet of key-value pairs.",
            "default": {},
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "InvoiceStatus": {
        "description": "An enum representing the possible values of an `Invoice`'s `status` field.",
        "oneOf": [
          {
            "description": "Deleted.",
            "type": "string",
            "enum": [
              "deleted"
            ]
          },
          {
            "description": "Draft.",
            "type": "string",
            "enum": [
              "draft"
            ]
          },
          {
            "description": "Open.",
            "type": "string",
            "enum": [
              "open"
            ]
          },
          {
            "description": "Paid.",
            "type": "string",
            "enum": [
              "paid"
            ]
          },
          {
            "description": "Uncollectible.",
            "type": "string",
            "enum": [
              "uncollectible"
            ]
          },
          {
            "description": "Void.",
            "type": "string",
            "enum": [
              "void"
            ]
          }
        ]
      },
      "Jetstream": {
        "description": "Jetstream information.",
        "type": "object",
        "properties": {
          "config": {
            "description": "The Jetstream config.",
            "default": {
              "domain": "",
              "max_memory": 0,
              "max_storage": 0,
              "store_dir": ""
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/JetstreamConfig"
              }
            ]
          },
          "meta": {
            "description": "Meta information about the cluster.",
            "default": {
              "cluster_size": 0,
              "leader": "",
              "name": ""
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/MetaClusterInfo"
              }
            ]
          },
          "stats": {
            "description": "Jetstream statistics.",
            "default": {
              "accounts": 0,
              "api": {
                "errors": 0,
                "inflight": 0,
                "total": 0
              },
              "ha_assets": 0,
              "memory": 0,
              "reserved_memory": 0,
              "reserved_store": 0,
              "store": 0
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/JetstreamStats"
              }
            ]
          }
        }
      },
      "JetstreamApiStats": {
        "description": "Jetstream API statistics.",
        "type": "object",
        "properties": {
          "errors": {
            "description": "The number of errors.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "inflight": {
            "description": "The number of inflight requests.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "total": {
            "description": "The number of requests.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "JetstreamConfig": {
        "description": "Jetstream configuration.",
        "type": "object",
        "properties": {
          "domain": {
            "description": "The domain.",
            "default": "",
            "type": "string"
          },
          "max_memory": {
            "description": "The max memory.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "max_storage": {
            "description": "The max storage.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "store_dir": {
            "description": "The store directory.",
            "default": "",
            "type": "string"
          }
        }
      },
      "JetstreamStats": {
        "description": "Jetstream statistics.",
        "type": "object",
        "properties": {
          "accounts": {
            "description": "The number of accounts.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "api": {
            "description": "API stats.",
            "default": {
              "errors": 0,
              "inflight": 0,
              "total": 0
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/JetstreamApiStats"
              }
            ]
          },
          "ha_assets": {
            "description": "The number of HA assets.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "memory": {
            "description": "The memory used by the Jetstream server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "reserved_memory": {
            "description": "The reserved memory for the Jetstream server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "reserved_store": {
            "description": "The reserved storage for the Jetstream server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "store": {
            "description": "The storage used by the Jetstream server.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "LeafNode": {
        "description": "Leaf node information.",
        "type": "object",
        "properties": {
          "auth_timeout": {
            "description": "The auth timeout of the leaf node.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "host": {
            "description": "The host of the leaf node.",
            "default": "",
            "type": "string"
          },
          "port": {
            "description": "The port of the leaf node.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "tls_timeout": {
            "description": "The TLS timeout for the leaf node.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Mass": {
        "description": "The mass response.",
        "type": "object",
        "properties": {
          "mass": {
            "description": "The mass.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output unit for the mass.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitMass"
              }
            ]
          }
        },
        "required": [
          "mass",
          "output_unit"
        ]
      },
      "MetaClusterInfo": {
        "description": "Jetstream statistics.",
        "type": "object",
        "properties": {
          "cluster_size": {
            "description": "The size of the cluster.",
            "default": 0,
            "type": "integer",
            "format": "int64"
          },
          "leader": {
            "description": "The leader of the cluster.",
            "default": "",
            "type": "string"
          },
          "name": {
            "description": "The name of the cluster.",
            "default": "",
            "type": "string"
          }
        }
      },
      "Metadata": {
        "description": "Metadata about our currently running server.\n\nThis is mostly used for internal purposes and debugging.",
        "type": "object",
        "properties": {
          "cache": {
            "description": "Metadata about our cache.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CacheMetadata"
              }
            ]
          },
          "environment": {
            "description": "The environment we are running in.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Environment"
              }
            ]
          },
          "fs": {
            "description": "Metadata about our file system.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileSystemMetadata"
              }
            ]
          },
          "git_hash": {
            "description": "The git hash of the server.",
            "type": "string"
          },
          "pubsub": {
            "description": "Metadata about our pub-sub connection.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Connection"
              }
            ]
          }
        },
        "required": [
          "cache",
          "environment",
          "fs",
          "git_hash",
          "pubsub"
        ]
      },
      "Method": {
        "description": "The Request Method (VERB)\n\nThis type also contains constants for a number of common HTTP methods such as GET, POST, etc.\n\nCurrently includes 8 variants representing the 8 methods defined in [RFC 7230](https://tools.ietf.org/html/rfc7231#section-4.1), plus PATCH, and an Extension variant for all extensions.",
        "oneOf": [
          {
            "description": "The `OPTIONS` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.2.1).",
            "type": "string",
            "enum": [
              "OPTIONS"
            ]
          },
          {
            "description": "The `GET` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3.1).",
            "type": "string",
            "enum": [
              "GET"
            ]
          },
          {
            "description": "The `POST` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3.1).",
            "type": "string",
            "enum": [
              "POST"
            ]
          },
          {
            "description": "The `PUT` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3.1).",
            "type": "string",
            "enum": [
              "PUT"
            ]
          },
          {
            "description": "The `DELETE` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3.5).",
            "type": "string",
            "enum": [
              "DELETE"
            ]
          },
          {
            "description": "The `HEAD` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3.2).",
            "type": "string",
            "enum": [
              "HEAD"
            ]
          },
          {
            "description": "The `TRACE` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3).",
            "type": "string",
            "enum": [
              "TRACE"
            ]
          },
          {
            "description": "The `CONNECT` method as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4.3.6).",
            "type": "string",
            "enum": [
              "CONNECT"
            ]
          },
          {
            "description": "The `PATCH` method as defined in [RFC 5789](https://tools.ietf.org/html/rfc5789).",
            "type": "string",
            "enum": [
              "PATCH"
            ]
          },
          {
            "description": "A catch all.",
            "type": "string",
            "enum": [
              "EXTENSION"
            ]
          }
        ]
      },
      "ModelingCmd": {
        "description": "Commands that the KittyCAD engine can execute.",
        "oneOf": [
          {
            "description": "Start a path.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "start_path"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Move the path's \"pen\".",
            "type": "object",
            "properties": {
              "path": {
                "description": "The ID of the command which created the path.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ModelingCmdId"
                  }
                ]
              },
              "to": {
                "description": "Where the path's pen should be.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "move_path_pen"
                ]
              }
            },
            "required": [
              "path",
              "to",
              "type"
            ]
          },
          {
            "description": "Extend a path by adding a new segment which starts at the path's \"pen\". If no \"pen\" location has been set before (via `MovePen`), then the pen is at the origin.",
            "type": "object",
            "properties": {
              "path": {
                "description": "The ID of the command which created the path.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ModelingCmdId"
                  }
                ]
              },
              "segment": {
                "description": "Segment to append to the path. This segment will implicitly begin at the current \"pen\" location.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PathSegment"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "extend_path"
                ]
              }
            },
            "required": [
              "path",
              "segment",
              "type"
            ]
          },
          {
            "description": "Extrude a 2D solid.",
            "type": "object",
            "properties": {
              "cap": {
                "description": "Whether to cap the extrusion with a face, or not. If true, the resulting solid will be closed on all sides, like a dice. If false, it will be open on one side, like a drinking glass.",
                "type": "boolean"
              },
              "distance": {
                "description": "How far off the plane to extrude",
                "type": "number",
                "format": "double"
              },
              "target": {
                "description": "Which sketch to extrude. Must be a closed 2D solid.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ModelingCmdId"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "extrude"
                ]
              }
            },
            "required": [
              "cap",
              "distance",
              "target",
              "type"
            ]
          },
          {
            "description": "Closes a path, converting it to a 2D solid.",
            "type": "object",
            "properties": {
              "path_id": {
                "description": "Which path to close.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "close_path"
                ]
              }
            },
            "required": [
              "path_id",
              "type"
            ]
          },
          {
            "description": "Camera drag started.",
            "type": "object",
            "properties": {
              "interaction": {
                "description": "The type of camera drag interaction.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CameraDragInteractionType"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "camera_drag_start"
                ]
              },
              "window": {
                "description": "The initial mouse position.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              }
            },
            "required": [
              "interaction",
              "type",
              "window"
            ]
          },
          {
            "description": "Camera drag continued.",
            "type": "object",
            "properties": {
              "interaction": {
                "description": "The type of camera drag interaction.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CameraDragInteractionType"
                  }
                ]
              },
              "sequence": {
                "nullable": true,
                "description": "Logical timestamp. The client should increment this with every event in the current mouse drag. That way, if the events are being sent over an unordered channel, the API can ignore the older events.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "type": {
                "type": "string",
                "enum": [
                  "camera_drag_move"
                ]
              },
              "window": {
                "description": "The current mouse position.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              }
            },
            "required": [
              "interaction",
              "type",
              "window"
            ]
          },
          {
            "description": "Camera drag ended.",
            "type": "object",
            "properties": {
              "interaction": {
                "description": "The type of camera drag interaction.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CameraDragInteractionType"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "camera_drag_end"
                ]
              },
              "window": {
                "description": "The final mouse position.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              }
            },
            "required": [
              "interaction",
              "type",
              "window"
            ]
          },
          {
            "description": "Change what the default camera is looking at.",
            "type": "object",
            "properties": {
              "center": {
                "description": "What the camera is looking at. Center of the camera's field of vision",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "default_camera_look_at"
                ]
              },
              "up": {
                "description": "Which way is \"up\", from the camera's point of view.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "vantage": {
                "description": "Where the camera is positioned",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              }
            },
            "required": [
              "center",
              "type",
              "up",
              "vantage"
            ]
          },
          {
            "description": "Adjust zoom of the default camera.",
            "type": "object",
            "properties": {
              "magnitude": {
                "description": "Move the camera forward along the vector it's looking at, by this magnitudedefaultCameraZoom. Basically, how much should the camera move forward by.",
                "type": "number",
                "format": "float"
              },
              "type": {
                "type": "string",
                "enum": [
                  "default_camera_zoom"
                ]
              }
            },
            "required": [
              "magnitude",
              "type"
            ]
          },
          {
            "description": "Enable sketch mode, where users can sketch 2D geometry. Users choose a plane to sketch on.",
            "type": "object",
            "properties": {
              "animated": {
                "description": "Should we animate or snap for the camera transition?",
                "type": "boolean"
              },
              "distance_to_plane": {
                "description": "How far to the sketching plane?",
                "type": "number",
                "format": "float"
              },
              "origin": {
                "description": "What's the origin of the sketching plane?",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "ortho": {
                "description": "Should the camera use orthographic projection? In other words, should an object's size in the rendered image stay constant regardless of its distance from the camera.",
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "enum": [
                  "default_camera_enable_sketch_mode"
                ]
              },
              "x_axis": {
                "description": "Which 3D axis of the scene should be the X axis of the sketching plane?",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "y_axis": {
                "description": "Which 3D axis of the scene should be the Y axis of the sketching plane?",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              }
            },
            "required": [
              "animated",
              "distance_to_plane",
              "origin",
              "ortho",
              "type",
              "x_axis",
              "y_axis"
            ]
          },
          {
            "description": "Disable sketch mode, from the default camera.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "default_camera_disable_sketch_mode"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Focus default camera on object.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "default_camera_focus_on"
                ]
              },
              "uuid": {
                "description": "UUID of object to focus on.",
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "type",
              "uuid"
            ]
          },
          {
            "description": "Export the scene to a file.",
            "type": "object",
            "properties": {
              "entity_ids": {
                "description": "IDs of the entities to be exported. If this is empty, then all entities are exported.",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "format": {
                "description": "The file format to export to.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OutputFormat"
                  }
                ]
              },
              "source_unit": {
                "description": "Select the unit interpretation of exported objects.\n\nThis is not the same as the export units. Setting export units is part of the format options.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "export"
                ]
              }
            },
            "required": [
              "entity_ids",
              "format",
              "source_unit",
              "type"
            ]
          },
          {
            "description": "What is this entity's parent?",
            "type": "object",
            "properties": {
              "entity_id": {
                "description": "ID of the entity being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_get_parent_id"
                ]
              }
            },
            "required": [
              "entity_id",
              "type"
            ]
          },
          {
            "description": "How many children does the entity have?",
            "type": "object",
            "properties": {
              "entity_id": {
                "description": "ID of the entity being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_get_num_children"
                ]
              }
            },
            "required": [
              "entity_id",
              "type"
            ]
          },
          {
            "description": "What is the UUID of this entity's n-th child?",
            "type": "object",
            "properties": {
              "child_index": {
                "description": "Index into the entity's list of children.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "entity_id": {
                "description": "ID of the entity being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_get_child_uuid"
                ]
              }
            },
            "required": [
              "child_index",
              "entity_id",
              "type"
            ]
          },
          {
            "description": "What are all UUIDs of this entity's children?",
            "type": "object",
            "properties": {
              "entity_id": {
                "description": "ID of the entity being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_get_all_child_uuids"
                ]
              }
            },
            "required": [
              "entity_id",
              "type"
            ]
          },
          {
            "description": "Enter edit mode",
            "type": "object",
            "properties": {
              "target": {
                "description": "The edit target",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "edit_mode_enter"
                ]
              }
            },
            "required": [
              "target",
              "type"
            ]
          },
          {
            "description": "Exit edit mode",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "edit_mode_exit"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Modifies the selection by simulating a \"mouse click\" at the given x,y window coordinate Returns ID of whatever was selected.",
            "type": "object",
            "properties": {
              "selected_at_window": {
                "description": "Where in the window was selected",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              },
              "selection_type": {
                "description": "What entity was selected?",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SceneSelectionType"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "select_with_point"
                ]
              }
            },
            "required": [
              "selected_at_window",
              "selection_type",
              "type"
            ]
          },
          {
            "description": "Clear the selection",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "select_clear"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Adds one or more entities (by UUID) to the selection.",
            "type": "object",
            "properties": {
              "entities": {
                "description": "Which entities to select",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "select_add"
                ]
              }
            },
            "required": [
              "entities",
              "type"
            ]
          },
          {
            "description": "Removes one or more entities (by UUID) from the selection.",
            "type": "object",
            "properties": {
              "entities": {
                "description": "Which entities to unselect",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "select_remove"
                ]
              }
            },
            "required": [
              "entities",
              "type"
            ]
          },
          {
            "description": "Replaces the current selection with these new entities (by UUID). Equivalent to doing SelectClear then SelectAdd.",
            "type": "object",
            "properties": {
              "entities": {
                "description": "Which entities to select",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "select_replace"
                ]
              }
            },
            "required": [
              "entities",
              "type"
            ]
          },
          {
            "description": "Find all IDs of selected entities",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "select_get"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Changes the current highlighted entity to whichever one is at the given window coordinate. If there's no entity at this location, clears the highlight.",
            "type": "object",
            "properties": {
              "selected_at_window": {
                "description": "Coordinates of the window being clicked",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              },
              "sequence": {
                "nullable": true,
                "description": "Logical timestamp. The client should increment this with every event in the current mouse drag. That way, if the events are being sent over an unordered channel, the API can ignore the older events.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "type": {
                "type": "string",
                "enum": [
                  "highlight_set_entity"
                ]
              }
            },
            "required": [
              "selected_at_window",
              "type"
            ]
          },
          {
            "description": "Changes the current highlighted entity to these entities.",
            "type": "object",
            "properties": {
              "entities": {
                "description": "Highlight these entities.",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "highlight_set_entities"
                ]
              }
            },
            "required": [
              "entities",
              "type"
            ]
          },
          {
            "description": "Create a new annotation",
            "type": "object",
            "properties": {
              "annotation_type": {
                "description": "What type of annotation to create.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AnnotationType"
                  }
                ]
              },
              "clobber": {
                "description": "If true, any existing drawables within the obj will be replaced (the object will be reset)",
                "type": "boolean"
              },
              "options": {
                "description": "What should the annotation contain?",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AnnotationOptions"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "new_annotation"
                ]
              }
            },
            "required": [
              "annotation_type",
              "clobber",
              "options",
              "type"
            ]
          },
          {
            "description": "Update an annotation",
            "type": "object",
            "properties": {
              "annotation_id": {
                "description": "Which annotation to update",
                "type": "string",
                "format": "uuid"
              },
              "options": {
                "description": "If any of these fields are set, they will overwrite the previous options for the annotation.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AnnotationOptions"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "update_annotation"
                ]
              }
            },
            "required": [
              "annotation_id",
              "options",
              "type"
            ]
          },
          {
            "description": "Hide or show an object",
            "type": "object",
            "properties": {
              "hidden": {
                "description": "Whether or not the object should be hidden.",
                "type": "boolean"
              },
              "object_id": {
                "description": "Which object to change",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "object_visible"
                ]
              }
            },
            "required": [
              "hidden",
              "object_id",
              "type"
            ]
          },
          {
            "description": "Bring an object to the front of the scene",
            "type": "object",
            "properties": {
              "object_id": {
                "description": "Which object to change",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "object_bring_to_front"
                ]
              }
            },
            "required": [
              "object_id",
              "type"
            ]
          },
          {
            "description": "What type of entity is this?",
            "type": "object",
            "properties": {
              "entity_id": {
                "description": "ID of the entity being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "get_entity_type"
                ]
              }
            },
            "required": [
              "entity_id",
              "type"
            ]
          },
          {
            "description": "Add a hole to a Solid2d object before extruding it.",
            "type": "object",
            "properties": {
              "hole_id": {
                "description": "The id of the path to use as the inner profile (hole).",
                "type": "string",
                "format": "uuid"
              },
              "object_id": {
                "description": "Which object to add the hole to.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid2d_add_hole"
                ]
              }
            },
            "required": [
              "hole_id",
              "object_id",
              "type"
            ]
          },
          {
            "description": "Gets all faces which use the given edge.",
            "type": "object",
            "properties": {
              "edge_id": {
                "description": "Which edge you want the faces of.",
                "type": "string",
                "format": "uuid"
              },
              "object_id": {
                "description": "Which object is being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_all_edge_faces"
                ]
              }
            },
            "required": [
              "edge_id",
              "object_id",
              "type"
            ]
          },
          {
            "description": "Gets all edges which are opposite the given edge, across all possible faces.",
            "type": "object",
            "properties": {
              "along_vector": {
                "nullable": true,
                "description": "If given, ohnly faces parallel to this vector will be considered.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "edge_id": {
                "description": "Which edge you want the opposites of.",
                "type": "string",
                "format": "uuid"
              },
              "object_id": {
                "description": "Which object is being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_all_opposite_edges"
                ]
              }
            },
            "required": [
              "edge_id",
              "object_id",
              "type"
            ]
          },
          {
            "description": "Gets the edge opposite the given edge, along the given face.",
            "type": "object",
            "properties": {
              "edge_id": {
                "description": "Which edge you want the opposite of.",
                "type": "string",
                "format": "uuid"
              },
              "face_id": {
                "description": "Which face is used to figure out the opposite edge?",
                "type": "string",
                "format": "uuid"
              },
              "object_id": {
                "description": "Which object is being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_opposite_edge"
                ]
              }
            },
            "required": [
              "edge_id",
              "face_id",
              "object_id",
              "type"
            ]
          },
          {
            "description": "Gets the next adjacent edge for the given edge, along the given face.",
            "type": "object",
            "properties": {
              "edge_id": {
                "description": "Which edge you want the opposite of.",
                "type": "string",
                "format": "uuid"
              },
              "face_id": {
                "description": "Which face is used to figure out the opposite edge?",
                "type": "string",
                "format": "uuid"
              },
              "object_id": {
                "description": "Which object is being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_next_adjacent_edge"
                ]
              }
            },
            "required": [
              "edge_id",
              "face_id",
              "object_id",
              "type"
            ]
          },
          {
            "description": "Gets the previous adjacent edge for the given edge, along the given face.",
            "type": "object",
            "properties": {
              "edge_id": {
                "description": "Which edge you want the opposite of.",
                "type": "string",
                "format": "uuid"
              },
              "face_id": {
                "description": "Which face is used to figure out the opposite edge?",
                "type": "string",
                "format": "uuid"
              },
              "object_id": {
                "description": "Which object is being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_prev_adjacent_edge"
                ]
              }
            },
            "required": [
              "edge_id",
              "face_id",
              "object_id",
              "type"
            ]
          },
          {
            "description": "Sends object to front or back.",
            "type": "object",
            "properties": {
              "front": {
                "description": "Bring to front = true, send to back = false.",
                "type": "boolean"
              },
              "object_id": {
                "description": "Which object is being changed.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "send_object"
                ]
              }
            },
            "required": [
              "front",
              "object_id",
              "type"
            ]
          },
          {
            "description": "Set opacity of the entity.",
            "type": "object",
            "properties": {
              "entity_id": {
                "description": "Which entity is being changed.",
                "type": "string",
                "format": "uuid"
              },
              "opacity": {
                "description": "How transparent should it be? 0 or lower is totally transparent. 1 or greater is totally opaque.",
                "type": "number",
                "format": "float"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_set_opacity"
                ]
              }
            },
            "required": [
              "entity_id",
              "opacity",
              "type"
            ]
          },
          {
            "description": "Fade the entity in or out.",
            "type": "object",
            "properties": {
              "duration_seconds": {
                "description": "How many seconds the animation should take.",
                "default": 0.4000000059604645,
                "type": "number",
                "format": "float"
              },
              "entity_id": {
                "description": "Which entity is being changed.",
                "type": "string",
                "format": "uuid"
              },
              "fade_in": {
                "description": "Fade in = true, fade out = false.",
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_fade"
                ]
              }
            },
            "required": [
              "entity_id",
              "fade_in",
              "type"
            ]
          },
          {
            "description": "Make a plane.",
            "type": "object",
            "properties": {
              "clobber": {
                "description": "If true, any existing drawables within the obj will be replaced (the object will be reset)",
                "type": "boolean"
              },
              "hide": {
                "nullable": true,
                "description": "If true, the plane will be created but hidden initially.",
                "type": "boolean"
              },
              "origin": {
                "description": "Origin of the plane",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "size": {
                "description": "What should the plane's span/extent? When rendered visually, this is both the width and height along X and Y axis respectively.",
                "type": "number",
                "format": "double"
              },
              "type": {
                "type": "string",
                "enum": [
                  "make_plane"
                ]
              },
              "x_axis": {
                "description": "What should the plane's X axis be?",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "y_axis": {
                "description": "What should the plane's Y axis be?",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              }
            },
            "required": [
              "clobber",
              "origin",
              "size",
              "type",
              "x_axis",
              "y_axis"
            ]
          },
          {
            "description": "Set the plane's color.",
            "type": "object",
            "properties": {
              "color": {
                "description": "What color it should be.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Color"
                  }
                ]
              },
              "plane_id": {
                "description": "Which plane is being changed.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "plane_set_color"
                ]
              }
            },
            "required": [
              "color",
              "plane_id",
              "type"
            ]
          },
          {
            "description": "Set the active tool.",
            "type": "object",
            "properties": {
              "tool": {
                "description": "What tool should be active.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SceneToolType"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "set_tool"
                ]
              }
            },
            "required": [
              "tool",
              "type"
            ]
          },
          {
            "description": "Send a mouse move event.",
            "type": "object",
            "properties": {
              "sequence": {
                "nullable": true,
                "description": "Logical timestamp. The client should increment this with every event in the current mouse drag. That way, if the events are being sent over an unordered channel, the API can ignore the older events.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "type": {
                "type": "string",
                "enum": [
                  "mouse_move"
                ]
              },
              "window": {
                "description": "Where the mouse is",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              }
            },
            "required": [
              "type",
              "window"
            ]
          },
          {
            "description": "Send a mouse click event. Updates modified/selected entities.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "mouse_click"
                ]
              },
              "window": {
                "description": "Where the mouse is",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              }
            },
            "required": [
              "type",
              "window"
            ]
          },
          {
            "description": "Enable sketch mode on the given plane.",
            "type": "object",
            "properties": {
              "animated": {
                "description": "Animate the transition to sketch mode.",
                "type": "boolean"
              },
              "disable_camera_with_plane": {
                "nullable": true,
                "description": "Disable the camera entirely for sketch mode and sketch on a plane (this would be the normal of that plane).",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "ortho": {
                "description": "Use an orthographic camera.",
                "type": "boolean"
              },
              "plane_id": {
                "description": "Sketch on this plane.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "sketch_mode_enable"
                ]
              }
            },
            "required": [
              "animated",
              "ortho",
              "plane_id",
              "type"
            ]
          },
          {
            "description": "Disable sketch mode.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "sketch_mode_disable"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Get type of a given curve.",
            "type": "object",
            "properties": {
              "curve_id": {
                "description": "Which curve to query.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "curve_get_type"
                ]
              }
            },
            "required": [
              "curve_id",
              "type"
            ]
          },
          {
            "description": "Get control points of a given curve.",
            "type": "object",
            "properties": {
              "curve_id": {
                "description": "Which curve to query.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "curve_get_control_points"
                ]
              }
            },
            "required": [
              "curve_id",
              "type"
            ]
          },
          {
            "description": "Take a snapshot.",
            "type": "object",
            "properties": {
              "format": {
                "description": "What image format to return.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ImageFormat"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "take_snapshot"
                ]
              }
            },
            "required": [
              "format",
              "type"
            ]
          },
          {
            "description": "Add a gizmo showing the axes.",
            "type": "object",
            "properties": {
              "clobber": {
                "description": "If true, any existing drawables within the obj will be replaced (the object will be reset)",
                "type": "boolean"
              },
              "gizmo_mode": {
                "description": "If true, axes gizmo will be placed in the corner of the screen. If false, it will be placed at the origin of the scene.",
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "enum": [
                  "make_axes_gizmo"
                ]
              }
            },
            "required": [
              "clobber",
              "gizmo_mode",
              "type"
            ]
          },
          {
            "description": "Query the given path",
            "type": "object",
            "properties": {
              "path_id": {
                "description": "Which path to query",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "path_get_info"
                ]
              }
            },
            "required": [
              "path_id",
              "type"
            ]
          },
          {
            "description": "Get curves for vertices within a path",
            "type": "object",
            "properties": {
              "path_id": {
                "description": "Which path to query",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "path_get_curve_uuids_for_vertices"
                ]
              },
              "vertex_ids": {
                "description": "IDs of the vertices for which to obtain curve ids from",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "required": [
              "path_id",
              "type",
              "vertex_ids"
            ]
          },
          {
            "description": "Get vertices within a path",
            "type": "object",
            "properties": {
              "path_id": {
                "description": "Which path to query",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "path_get_vertex_uuids"
                ]
              }
            },
            "required": [
              "path_id",
              "type"
            ]
          },
          {
            "description": "Start dragging mouse.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "handle_mouse_drag_start"
                ]
              },
              "window": {
                "description": "The mouse position.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              }
            },
            "required": [
              "type",
              "window"
            ]
          },
          {
            "description": "Continue dragging mouse.",
            "type": "object",
            "properties": {
              "sequence": {
                "nullable": true,
                "description": "Logical timestamp. The client should increment this with every event in the current mouse drag. That way, if the events are being sent over an unordered channel, the API can ignore the older events.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "type": {
                "type": "string",
                "enum": [
                  "handle_mouse_drag_move"
                ]
              },
              "window": {
                "description": "The mouse position.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              }
            },
            "required": [
              "type",
              "window"
            ]
          },
          {
            "description": "Stop dragging mouse.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "handle_mouse_drag_end"
                ]
              },
              "window": {
                "description": "The mouse position.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              }
            },
            "required": [
              "type",
              "window"
            ]
          },
          {
            "description": "Remove scene objects.",
            "type": "object",
            "properties": {
              "object_ids": {
                "description": "Objects to remove.",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "uniqueItems": true
              },
              "type": {
                "type": "string",
                "enum": [
                  "remove_scene_objects"
                ]
              }
            },
            "required": [
              "object_ids",
              "type"
            ]
          },
          {
            "description": "Utility method. Performs both a ray cast and projection to plane-local coordinates. Returns the plane coordinates for the given window coordinates.",
            "type": "object",
            "properties": {
              "plane_id": {
                "description": "The plane you're intersecting against.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "plane_intersect_and_project"
                ]
              },
              "window": {
                "description": "Window coordinates where the ray cast should be aimed.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              }
            },
            "required": [
              "plane_id",
              "type",
              "window"
            ]
          },
          {
            "description": "Find the start and end of a curve.",
            "type": "object",
            "properties": {
              "curve_id": {
                "description": "ID of the curve being queried.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "curve_get_end_points"
                ]
              }
            },
            "required": [
              "curve_id",
              "type"
            ]
          },
          {
            "description": "Reconfigure the stream.",
            "type": "object",
            "properties": {
              "fps": {
                "description": "Frames per second.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "height": {
                "description": "Height of the stream.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              },
              "type": {
                "type": "string",
                "enum": [
                  "reconfigure_stream"
                ]
              },
              "width": {
                "description": "Width of the stream.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0
              }
            },
            "required": [
              "fps",
              "height",
              "type",
              "width"
            ]
          },
          {
            "description": "Import files to the current model.",
            "type": "object",
            "properties": {
              "files": {
                "description": "Files to import.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ImportFile"
                }
              },
              "format": {
                "description": "Input file format.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InputFormat"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "import_files"
                ]
              }
            },
            "required": [
              "files",
              "format",
              "type"
            ]
          },
          {
            "description": "Get the mass of entities in the scene or the default scene.",
            "type": "object",
            "properties": {
              "entity_ids": {
                "description": "IDs of the entities to get the mass of. If this is empty, then the default scene is included in the mass.",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "material_density": {
                "description": "The material density.",
                "type": "number",
                "format": "double"
              },
              "material_density_unit": {
                "description": "The material density unit.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitDensity"
                  }
                ]
              },
              "output_unit": {
                "description": "The output unit for the mass.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitMass"
                  }
                ]
              },
              "source_unit": {
                "description": "Select the unit interpretation of distances in the scene.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "mass"
                ]
              }
            },
            "required": [
              "entity_ids",
              "material_density",
              "material_density_unit",
              "output_unit",
              "source_unit",
              "type"
            ]
          },
          {
            "description": "Get the density of entities in the scene or the default scene.",
            "type": "object",
            "properties": {
              "entity_ids": {
                "description": "IDs of the entities to get the density of. If this is empty, then the default scene is included in the density.",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "material_mass": {
                "description": "The material mass.",
                "type": "number",
                "format": "double"
              },
              "material_mass_unit": {
                "description": "The material mass unit.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitMass"
                  }
                ]
              },
              "output_unit": {
                "description": "The output unit for the density.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitDensity"
                  }
                ]
              },
              "source_unit": {
                "description": "Select the unit interpretation of distances in the scene.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "density"
                ]
              }
            },
            "required": [
              "entity_ids",
              "material_mass",
              "material_mass_unit",
              "output_unit",
              "source_unit",
              "type"
            ]
          },
          {
            "description": "Get the volume of entities in the scene or the default scene.",
            "type": "object",
            "properties": {
              "entity_ids": {
                "description": "IDs of the entities to get the volume of. If this is empty, then the default scene is included in the volume.",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "output_unit": {
                "description": "The output unit for the volume.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitVolume"
                  }
                ]
              },
              "source_unit": {
                "description": "Select the unit interpretation of distances in the scene.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "volume"
                ]
              }
            },
            "required": [
              "entity_ids",
              "output_unit",
              "source_unit",
              "type"
            ]
          },
          {
            "description": "Get the center of mass of entities in the scene or the default scene.",
            "type": "object",
            "properties": {
              "entity_ids": {
                "description": "IDs of the entities to get the center of mass of. If this is empty, then the default scene is included in the center of mass.",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "output_unit": {
                "description": "The output unit for the center of mass.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              },
              "source_unit": {
                "description": "Select the unit interpretation of distances in the scene.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "center_of_mass"
                ]
              }
            },
            "required": [
              "entity_ids",
              "output_unit",
              "source_unit",
              "type"
            ]
          },
          {
            "description": "Get the surface area of entities in the scene or the default scene.",
            "type": "object",
            "properties": {
              "entity_ids": {
                "description": "IDs of the entities to get the surface area of. If this is empty, then the default scene is included in the surface area.",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "output_unit": {
                "description": "The output unit for the surface area.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitArea"
                  }
                ]
              },
              "source_unit": {
                "description": "Select the unit interpretation of distances in the scene.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "surface_area"
                ]
              }
            },
            "required": [
              "entity_ids",
              "output_unit",
              "source_unit",
              "type"
            ]
          },
          {
            "description": "Get the plane of the sketch mode. This is useful for getting the normal of the plane after a user selects a plane.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "get_sketch_mode_plane"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Constrain a curve.",
            "type": "object",
            "properties": {
              "constraint_bound": {
                "description": "Which constraint to apply.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PathComponentConstraintBound"
                  }
                ]
              },
              "constraint_type": {
                "description": "What part of the curve should be constrained.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PathComponentConstraintType"
                  }
                ]
              },
              "object_id": {
                "description": "Which curve to constrain.",
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "curve_set_constraint"
                ]
              }
            },
            "required": [
              "constraint_bound",
              "constraint_type",
              "object_id",
              "type"
            ]
          }
        ]
      },
      "ModelingCmdId": {
        "description": "All commands have unique IDs. These should be randomly generated.",
        "type": "string",
        "format": "uuid"
      },
      "ModelingCmdReq": {
        "description": "A graphics command submitted to the KittyCAD engine via the Modeling API.",
        "type": "object",
        "properties": {
          "cmd": {
            "description": "Which command to submit to the Kittycad engine.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModelingCmd"
              }
            ]
          },
          "cmd_id": {
            "description": "ID of command being submitted.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModelingCmdId"
              }
            ]
          }
        },
        "required": [
          "cmd",
          "cmd_id"
        ]
      },
      "MouseClick": {
        "description": "The response from the `MouseClick` command.",
        "type": "object",
        "properties": {
          "entities_modified": {
            "description": "Entities that are modified.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "entities_selected": {
            "description": "Entities that are selected.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "entities_modified",
          "entities_selected"
        ]
      },
      "NewAddress": {
        "description": "The struct that is used to create a new record. This is automatically generated and has all the same fields as the main struct only it is missing the `id`.",
        "type": "object",
        "properties": {
          "city": {
            "description": "The city component.",
            "type": "string"
          },
          "country": {
            "description": "The country component. This is a two-letter ISO country code.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CountryCode"
              }
            ]
          },
          "state": {
            "description": "The state component.",
            "type": "string"
          },
          "street1": {
            "description": "The first street component.",
            "type": "string"
          },
          "street2": {
            "description": "The second street component.",
            "type": "string"
          },
          "user_id": {
            "description": "The user ID that this address belongs to.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "zip": {
            "description": "The zip component.",
            "type": "string"
          }
        },
        "required": [
          "country",
          "user_id"
        ]
      },
      "OAuth2ClientInfo": {
        "description": "Information about an OAuth 2.0 client.",
        "type": "object",
        "properties": {
          "csrf_token": {
            "description": "Value used for [CSRF](https://tools.ietf.org/html/rfc6749#section-10.12) protection via the `state` parameter.",
            "type": "string"
          },
          "pkce_code_verifier": {
            "nullable": true,
            "description": "Code Verifier used for [PKCE]((https://tools.ietf.org/html/rfc7636)) protection via the `code_verifier` parameter. The value must have a minimum length of 43 characters and a maximum length of 128 characters.  Each character must be ASCII alphanumeric or one of the characters \"-\" / \".\" / \"_\" / \"~\".",
            "type": "string"
          },
          "url": {
            "description": "The URL for consent.",
            "type": "string"
          }
        }
      },
      "OAuth2GrantType": {
        "description": "An OAuth 2.0 Grant Type. These are documented here: <https://oauth.net/2/grant-types/>.",
        "oneOf": [
          {
            "description": "An OAuth 2.0 Device Authorization Grant.",
            "type": "string",
            "enum": [
              "urn:ietf:params:oauth:grant-type:device_code"
            ]
          }
        ]
      },
      "OkModelingCmdResponse": {
        "description": "A successful response from a modeling command. This can be one of several types of responses, depending on the command.",
        "oneOf": [
          {
            "description": "An empty response, used for any command that does not explicitly have a response defined here.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "empty"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "The response from the `Export` command. When this is being performed over a websocket, this is sent as binary not JSON. The binary data can be deserialized as `bincode` into a `Vec<ExportFile>`.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Export"
              },
              "type": {
                "type": "string",
                "enum": [
                  "export"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `SelectWithPoint` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/SelectWithPoint"
              },
              "type": {
                "type": "string",
                "enum": [
                  "select_with_point"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `HighlightSetEntity` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/HighlightSetEntity"
              },
              "type": {
                "type": "string",
                "enum": [
                  "highlight_set_entity"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `EntityGetChildUuid` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/EntityGetChildUuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_get_child_uuid"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `EntityGetNumChildren` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/EntityGetNumChildren"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_get_num_children"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `EntityGetParentId` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/EntityGetParentId"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_get_parent_id"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `EntityGetAllChildUuids` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/EntityGetAllChildUuids"
              },
              "type": {
                "type": "string",
                "enum": [
                  "entity_get_all_child_uuids"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `SelectGet` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/SelectGet"
              },
              "type": {
                "type": "string",
                "enum": [
                  "select_get"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `GetEntityType` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/GetEntityType"
              },
              "type": {
                "type": "string",
                "enum": [
                  "get_entity_type"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `Solid3dGetAllEdgeFaces` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Solid3dGetAllEdgeFaces"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_all_edge_faces"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `Solid3dGetAllOppositeEdges` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Solid3dGetAllOppositeEdges"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_all_opposite_edges"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `Solid3dGetOppositeEdge` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Solid3dGetOppositeEdge"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_opposite_edge"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `Solid3dGetPrevAdjacentEdge` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Solid3dGetPrevAdjacentEdge"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_prev_adjacent_edge"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `Solid3dGetNextAdjacentEdge` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Solid3dGetNextAdjacentEdge"
              },
              "type": {
                "type": "string",
                "enum": [
                  "solid3d_get_next_adjacent_edge"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `MouseClick` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/MouseClick"
              },
              "type": {
                "type": "string",
                "enum": [
                  "mouse_click"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `CurveGetType` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/CurveGetType"
              },
              "type": {
                "type": "string",
                "enum": [
                  "curve_get_type"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `CurveGetControlPoints` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/CurveGetControlPoints"
              },
              "type": {
                "type": "string",
                "enum": [
                  "curve_get_control_points"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `Take Snapshot` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/TakeSnapshot"
              },
              "type": {
                "type": "string",
                "enum": [
                  "take_snapshot"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `Path Get Info` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/PathGetInfo"
              },
              "type": {
                "type": "string",
                "enum": [
                  "path_get_info"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `Path Get Curve UUIDs for Vertices` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/PathGetCurveUuidsForVertices"
              },
              "type": {
                "type": "string",
                "enum": [
                  "path_get_curve_uuids_for_vertices"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `Path Get Vertex UUIDs` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/PathGetVertexUuids"
              },
              "type": {
                "type": "string",
                "enum": [
                  "path_get_vertex_uuids"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `PlaneIntersectAndProject` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/PlaneIntersectAndProject"
              },
              "type": {
                "type": "string",
                "enum": [
                  "plane_intersect_and_project"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `CurveGetEndPoints` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/CurveGetEndPoints"
              },
              "type": {
                "type": "string",
                "enum": [
                  "curve_get_end_points"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `ImportFiles` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/ImportFiles"
              },
              "type": {
                "type": "string",
                "enum": [
                  "import_files"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `Mass` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Mass"
              },
              "type": {
                "type": "string",
                "enum": [
                  "mass"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `Volume` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Volume"
              },
              "type": {
                "type": "string",
                "enum": [
                  "volume"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `Density` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Density"
              },
              "type": {
                "type": "string",
                "enum": [
                  "density"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `SurfaceArea` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/SurfaceArea"
              },
              "type": {
                "type": "string",
                "enum": [
                  "surface_area"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `CenterOfMass` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/CenterOfMass"
              },
              "type": {
                "type": "string",
                "enum": [
                  "center_of_mass"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The response from the `GetSketchModePlane` command.",
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/GetSketchModePlane"
              },
              "type": {
                "type": "string",
                "enum": [
                  "get_sketch_mode_plane"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          }
        ]
      },
      "OkWebSocketResponseData": {
        "description": "The websocket messages this server sends.",
        "oneOf": [
          {
            "description": "Information about the ICE servers.",
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "ice_servers": {
                    "description": "Information about the ICE servers.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/IceServer"
                    }
                  }
                },
                "required": [
                  "ice_servers"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "ice_server_info"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The trickle ICE candidate response.",
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "candidate": {
                    "description": "Information about the ICE candidate.",
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/RtcIceCandidateInit"
                      }
                    ]
                  }
                },
                "required": [
                  "candidate"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "trickle_ice"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The SDP answer response.",
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "answer": {
                    "description": "The session description.",
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/RtcSessionDescription"
                      }
                    ]
                  }
                },
                "required": [
                  "answer"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "sdp_answer"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The modeling command response.",
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "modeling_response": {
                    "description": "The result of the command.",
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/OkModelingCmdResponse"
                      }
                    ]
                  }
                },
                "required": [
                  "modeling_response"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "modeling"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "The exported files.",
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "files": {
                    "description": "The exported files",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RawFile"
                    }
                  }
                },
                "required": [
                  "files"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "export"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          },
          {
            "description": "Request a collection of metrics, to include WebRTC.",
            "type": "object",
            "properties": {
              "data": {
                "type": "object"
              },
              "type": {
                "type": "string",
                "enum": [
                  "metrics_request"
                ]
              }
            },
            "required": [
              "data",
              "type"
            ]
          }
        ]
      },
      "Onboarding": {
        "description": "Onboarding details",
        "type": "object",
        "properties": {
          "first_call_from_their_machine_date": {
            "description": "When the user first called an endpoint from their machine (i.e. not a litterbox execution)",
            "type": "string"
          },
          "first_litterbox_execute_date": {
            "description": "When the user first used the litterbox",
            "type": "string"
          },
          "first_token_date": {
            "description": "When the user created their first token",
            "type": "string"
          }
        }
      },
      "OutputFile": {
        "description": "Output file contents.",
        "type": "object",
        "properties": {
          "contents": {
            "nullable": true,
            "description": "The contents of the file. This is base64 encoded so we can ensure it is UTF-8 for JSON.",
            "type": "string"
          },
          "name": {
            "description": "The name of the file.",
            "default": "",
            "type": "string"
          }
        }
      },
      "OutputFormat": {
        "description": "Output format specifier.",
        "oneOf": [
          {
            "description": "Autodesk Filmbox (FBX) format.",
            "type": "object",
            "properties": {
              "storage": {
                "description": "Specifies which kind of FBX will be exported.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FbxStorage"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "fbx"
                ]
              }
            },
            "required": [
              "storage",
              "type"
            ]
          },
          {
            "description": "glTF 2.0. We refer to this as glTF since that is how our customers refer to it, although by default it will be in binary format and thus technically (glb). If you prefer ascii output, you can set that option for the export.",
            "type": "object",
            "properties": {
              "presentation": {
                "description": "Specifies how the JSON will be presented.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GltfPresentation"
                  }
                ]
              },
              "storage": {
                "description": "Specifies which kind of glTF 2.0 will be exported.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GltfStorage"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "gltf"
                ]
              }
            },
            "required": [
              "presentation",
              "storage",
              "type"
            ]
          },
          {
            "description": "Wavefront OBJ format.",
            "type": "object",
            "properties": {
              "coords": {
                "description": "Co-ordinate system of output data.\n\nDefaults to the [KittyCAD co-ordinate system].\n\n[KittyCAD co-ordinate system]: ../coord/constant.KITTYCAD.html",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/System"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "obj"
                ]
              },
              "units": {
                "description": "Export length unit.\n\nDefaults to meters.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              }
            },
            "required": [
              "coords",
              "type",
              "units"
            ]
          },
          {
            "description": "The PLY Polygon File Format.",
            "type": "object",
            "properties": {
              "coords": {
                "description": "Co-ordinate system of output data.\n\nDefaults to the [KittyCAD co-ordinate system].\n\n[KittyCAD co-ordinate system]: ../coord/constant.KITTYCAD.html",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/System"
                  }
                ]
              },
              "selection": {
                "description": "Export selection.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Selection"
                  }
                ]
              },
              "storage": {
                "description": "The storage for the output PLY file.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PlyStorage"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "ply"
                ]
              },
              "units": {
                "description": "Export length unit.\n\nDefaults to meters.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              }
            },
            "required": [
              "coords",
              "selection",
              "storage",
              "type",
              "units"
            ]
          },
          {
            "description": "ISO 10303-21 (STEP) format.",
            "type": "object",
            "properties": {
              "coords": {
                "description": "Co-ordinate system of output data.\n\nDefaults to the [KittyCAD co-ordinate system].\n\n[KittyCAD co-ordinate system]: ../coord/constant.KITTYCAD.html",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/System"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "step"
                ]
              }
            },
            "required": [
              "coords",
              "type"
            ]
          },
          {
            "description": "*ST**ereo**L**ithography format.",
            "type": "object",
            "properties": {
              "coords": {
                "description": "Co-ordinate system of output data.\n\nDefaults to the [KittyCAD co-ordinate system].\n\n[KittyCAD co-ordinate system]: ../coord/constant.KITTYCAD.html",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/System"
                  }
                ]
              },
              "selection": {
                "description": "Export selection.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Selection"
                  }
                ]
              },
              "storage": {
                "description": "Export storage.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StlStorage"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "stl"
                ]
              },
              "units": {
                "description": "Export length unit.\n\nDefaults to meters.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnitLength"
                  }
                ]
              }
            },
            "required": [
              "coords",
              "selection",
              "storage",
              "type",
              "units"
            ]
          }
        ]
      },
      "PathCommand": {
        "description": "The path component command type (within a Path)",
        "type": "string",
        "enum": [
          "move_to",
          "line_to",
          "bez_curve_to",
          "nurbs_curve_to",
          "add_arc"
        ]
      },
      "PathComponentConstraintBound": {
        "description": "The path component constraint bounds type",
        "type": "string",
        "enum": [
          "unconstrained",
          "partially_constrained",
          "fully_constrained"
        ]
      },
      "PathComponentConstraintType": {
        "description": "The path component constraint type",
        "type": "string",
        "enum": [
          "unconstrained",
          "vertical",
          "horizontal",
          "equal_length",
          "parallel",
          "angle_between"
        ]
      },
      "PathGetCurveUuidsForVertices": {
        "description": "The response from the `PathGetCurveUuidsForVertices` command.",
        "type": "object",
        "properties": {
          "curve_ids": {
            "description": "The UUIDs of the curve entities.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "curve_ids"
        ]
      },
      "PathGetInfo": {
        "description": "The response from the `PathGetInfo` command.",
        "type": "object",
        "properties": {
          "segments": {
            "description": "All segments in the path, in the order they were added.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PathSegmentInfo"
            }
          }
        },
        "required": [
          "segments"
        ]
      },
      "PathGetVertexUuids": {
        "description": "The response from the `PathGetVertexUuids` command.",
        "type": "object",
        "properties": {
          "vertex_ids": {
            "description": "The UUIDs of the vertex entities.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "vertex_ids"
        ]
      },
      "PathSegment": {
        "description": "A segment of a path. Paths are composed of many segments.",
        "oneOf": [
          {
            "description": "A straight line segment. Goes from the current path \"pen\" to the given endpoint.",
            "type": "object",
            "properties": {
              "end": {
                "description": "End point of the line.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "relative": {
                "description": "Whether or not this line is a relative offset",
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "enum": [
                  "line"
                ]
              }
            },
            "required": [
              "end",
              "relative",
              "type"
            ]
          },
          {
            "description": "A circular arc segment.",
            "type": "object",
            "properties": {
              "angle_end": {
                "deprecated": true,
                "description": "End of the arc along circle's perimeter, in degrees. Deprecated: use `end` instead.",
                "type": "number",
                "format": "double"
              },
              "angle_start": {
                "deprecated": true,
                "description": "Start of the arc along circle's perimeter, in degrees. Deprecated: use `start` instead.",
                "type": "number",
                "format": "double"
              },
              "center": {
                "description": "Center of the circle",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point2d"
                  }
                ]
              },
              "end": {
                "nullable": true,
                "description": "End of the arc along circle's perimeter. If not given, this will use `degrees_end` instead.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Angle"
                  }
                ]
              },
              "radius": {
                "description": "Radius of the circle",
                "type": "number",
                "format": "double"
              },
              "relative": {
                "description": "Whether or not this arc is a relative offset",
                "type": "boolean"
              },
              "start": {
                "nullable": true,
                "description": "Start of the arc along circle's perimeter. If not given, this will use `degrees_start` instead.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Angle"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "arc"
                ]
              }
            },
            "required": [
              "angle_end",
              "angle_start",
              "center",
              "radius",
              "relative",
              "type"
            ]
          },
          {
            "description": "A cubic bezier curve segment. Start at the end of the current line, go through control point 1 and 2, then end at a given point.",
            "type": "object",
            "properties": {
              "control1": {
                "description": "First control point.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "control2": {
                "description": "Second control point.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "end": {
                "description": "Final control point.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "relative": {
                "description": "Whether or not this bezier is a relative offset",
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "enum": [
                  "bezier"
                ]
              }
            },
            "required": [
              "control1",
              "control2",
              "end",
              "relative",
              "type"
            ]
          },
          {
            "description": "Adds a tangent arc from current pen position with the given radius and angle.",
            "type": "object",
            "properties": {
              "offset": {
                "description": "Offset of the arc.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Angle"
                  }
                ]
              },
              "radius": {
                "description": "Radius of the arc. Not to be confused with Raiders of the Lost Ark.",
                "type": "number",
                "format": "double"
              },
              "type": {
                "type": "string",
                "enum": [
                  "tangential_arc"
                ]
              }
            },
            "required": [
              "offset",
              "radius",
              "type"
            ]
          },
          {
            "description": "Adds a tangent arc from current pen position to the new position.",
            "type": "object",
            "properties": {
              "angle_snap_increment": {
                "nullable": true,
                "description": "0 will be interpreted as none/null.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Angle"
                  }
                ]
              },
              "to": {
                "description": "Where the arc should end. Must lie in the same plane as the current path pen position. Must not be colinear with current path pen position.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Point3d"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "tangential_arc_to"
                ]
              }
            },
            "required": [
              "to",
              "type"
            ]
          }
        ]
      },
      "PathSegmentInfo": {
        "description": "Info about a path segment",
        "type": "object",
        "properties": {
          "command": {
            "description": "What is the path segment?",
            "allOf": [
              {
                "$ref": "#/components/schemas/PathCommand"
              }
            ]
          },
          "command_id": {
            "nullable": true,
            "description": "Which command created this path? This field is absent if the path command is not actually creating a path segment, e.g. moving the pen doesn't create a path segment.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModelingCmdId"
              }
            ]
          },
          "relative": {
            "description": "Whether or not this segment is a relative offset",
            "type": "boolean"
          }
        },
        "required": [
          "command",
          "relative"
        ]
      },
      "PaymentIntent": {
        "description": "A payment intent response.",
        "type": "object",
        "properties": {
          "client_secret": {
            "description": "The client secret is used for client-side retrieval using a publishable key. The client secret can be used to complete payment setup from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.",
            "type": "string"
          }
        },
        "required": [
          "client_secret"
        ]
      },
      "PaymentMethod": {
        "description": "A payment method.",
        "type": "object",
        "properties": {
          "billing_info": {
            "description": "The billing info for the payment method.",
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingInfo"
              }
            ]
          },
          "card": {
            "nullable": true,
            "description": "The card, if it is one. For our purposes, this is the only type of payment method that we support.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CardDetails"
              }
            ]
          },
          "created_at": {
            "description": "Time at which the object was created.",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "type": "string"
          },
          "metadata": {
            "description": "Set of key-value pairs.",
            "default": {},
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "type": {
            "description": "The type of payment method.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodType"
              }
            ]
          }
        },
        "required": [
          "billing_info",
          "created_at",
          "type"
        ]
      },
      "PaymentMethodCardChecks": {
        "description": "Card checks.",
        "type": "object",
        "properties": {
          "address_line1_check": {
            "description": "If a address line1 was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "type": "string"
          },
          "address_postal_code_check": {
            "description": "If a address postal code was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "type": "string"
          },
          "cvc_check": {
            "description": "If a CVC was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "type": "string"
          }
        }
      },
      "PaymentMethodType": {
        "description": "An enum representing the possible values of an `PaymentMethod`'s `type` field.",
        "oneOf": [
          {
            "description": "A card payment method.",
            "type": "string",
            "enum": [
              "card"
            ]
          }
        ]
      },
      "PlaneIntersectAndProject": {
        "description": "Corresponding coordinates of given window coordinates, intersected on given plane.",
        "type": "object",
        "properties": {
          "plane_coordinates": {
            "nullable": true,
            "description": "Corresponding coordinates of given window coordinates, intersected on given plane.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Point2d"
              }
            ]
          }
        }
      },
      "PlyStorage": {
        "description": "The storage for the output PLY file.",
        "oneOf": [
          {
            "description": "Write numbers in their ascii representation (e.g. -13, 6.28, etc.). Properties are separated by spaces and elements are separated by line breaks.",
            "type": "string",
            "enum": [
              "ascii"
            ]
          },
          {
            "description": "Encode payload as binary using little endian.",
            "type": "string",
            "enum": [
              "binary_little_endian"
            ]
          },
          {
            "description": "Encode payload as binary using big endian.",
            "type": "string",
            "enum": [
              "binary_big_endian"
            ]
          }
        ]
      },
      "Point2d": {
        "description": "A point in 2D space",
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "x",
          "y"
        ]
      },
      "Point3d": {
        "description": "A point in 3D space",
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "float"
          },
          "y": {
            "type": "number",
            "format": "float"
          },
          "z": {
            "type": "number",
            "format": "float"
          }
        },
        "required": [
          "x",
          "y",
          "z"
        ]
      },
      "Pong": {
        "description": "The response from the `/ping` endpoint.",
        "type": "object",
        "properties": {
          "message": {
            "description": "The pong response.",
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "RawFile": {
        "description": "A raw file with unencoded contents to be passed over binary websockets.",
        "type": "object",
        "properties": {
          "contents": {
            "description": "The contents of the file.",
            "type": "array",
            "items": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0
            }
          },
          "name": {
            "description": "The name of the file.",
            "type": "string"
          }
        },
        "required": [
          "contents",
          "name"
        ]
      },
      "RtcIceCandidateInit": {
        "description": "ICECandidateInit is used to serialize ice candidates",
        "type": "object",
        "properties": {
          "candidate": {
            "description": "The candidate string associated with the object.",
            "type": "string"
          },
          "sdpMLineIndex": {
            "nullable": true,
            "description": "The index (starting at zero) of the m-line in the SDP this candidate is associated with.",
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          },
          "sdpMid": {
            "nullable": true,
            "description": "The identifier of the \"media stream identification\" as defined in [RFC 8841](https://tools.ietf.org/html/rfc8841).",
            "type": "string"
          },
          "usernameFragment": {
            "nullable": true,
            "description": "The username fragment (as defined in [RFC 8445](https://tools.ietf.org/html/rfc8445#section-5.2.1)) associated with the object.",
            "type": "string"
          }
        },
        "required": [
          "candidate"
        ]
      },
      "RtcSdpType": {
        "description": "SDPType describes the type of an SessionDescription.",
        "oneOf": [
          {
            "description": "Unspecified indicates that the type is unspecified.",
            "type": "string",
            "enum": [
              "unspecified"
            ]
          },
          {
            "description": "indicates that a description MUST be treated as an SDP offer.",
            "type": "string",
            "enum": [
              "offer"
            ]
          },
          {
            "description": "indicates that a description MUST be treated as an SDP answer, but not a final answer. A description used as an SDP pranswer may be applied as a response to an SDP offer, or an update to a previously sent SDP pranswer.",
            "type": "string",
            "enum": [
              "pranswer"
            ]
          },
          {
            "description": "indicates that a description MUST be treated as an SDP final answer, and the offer-answer exchange MUST be considered complete. A description used as an SDP answer may be applied as a response to an SDP offer or as an update to a previously sent SDP pranswer.",
            "type": "string",
            "enum": [
              "answer"
            ]
          },
          {
            "description": "indicates that a description MUST be treated as canceling the current SDP negotiation and moving the SDP offer and answer back to what it was in the previous stable state. Note the local or remote SDP descriptions in the previous stable state could be null if there has not yet been a successful offer-answer negotiation.",
            "type": "string",
            "enum": [
              "rollback"
            ]
          }
        ]
      },
      "RtcSessionDescription": {
        "description": "SessionDescription is used to expose local and remote session descriptions.",
        "type": "object",
        "properties": {
          "sdp": {
            "description": "SDP string.",
            "type": "string"
          },
          "type": {
            "description": "SDP type.",
            "allOf": [
              {
                "$ref": "#/components/schemas/RtcSdpType"
              }
            ]
          }
        },
        "required": [
          "sdp",
          "type"
        ]
      },
      "SceneSelectionType": {
        "description": "The type of scene selection change",
        "oneOf": [
          {
            "description": "Replaces the selection",
            "type": "string",
            "enum": [
              "replace"
            ]
          },
          {
            "description": "Adds to the selection",
            "type": "string",
            "enum": [
              "add"
            ]
          },
          {
            "description": "Removes from the selection",
            "type": "string",
            "enum": [
              "remove"
            ]
          }
        ]
      },
      "SceneToolType": {
        "description": "The type of scene's active tool",
        "type": "string",
        "enum": [
          "camera_revolve",
          "select",
          "move",
          "sketch_line",
          "sketch_tangential_arc",
          "sketch_curve",
          "sketch_curve_mod"
        ]
      },
      "SelectGet": {
        "description": "The response from the `SelectGet` command.",
        "type": "object",
        "properties": {
          "entity_ids": {
            "description": "The UUIDs of the selected entities.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "entity_ids"
        ]
      },
      "SelectWithPoint": {
        "description": "The response from the `SelectWithPoint` command.",
        "type": "object",
        "properties": {
          "entity_id": {
            "nullable": true,
            "description": "The UUID of the entity that was selected.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Selection": {
        "description": "Data item selection.",
        "oneOf": [
          {
            "description": "Visit the default scene.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "default_scene"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "Visit the indexed scene.",
            "type": "object",
            "properties": {
              "index": {
                "description": "The index.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              },
              "type": {
                "type": "string",
                "enum": [
                  "scene_by_index"
                ]
              }
            },
            "required": [
              "index",
              "type"
            ]
          },
          {
            "description": "Visit the first scene with the given name.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name.",
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "scene_by_name"
                ]
              }
            },
            "required": [
              "name",
              "type"
            ]
          },
          {
            "description": "Visit the indexed mesh.",
            "type": "object",
            "properties": {
              "index": {
                "description": "The index.",
                "type": "integer",
                "format": "uint",
                "minimum": 0
              },
              "type": {
                "type": "string",
                "enum": [
                  "mesh_by_index"
                ]
              }
            },
            "required": [
              "index",
              "type"
            ]
          },
          {
            "description": "Visit the first mesh with the given name.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name.",
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "mesh_by_name"
                ]
              }
            },
            "required": [
              "name",
              "type"
            ]
          }
        ]
      },
      "Session": {
        "description": "An authentication session.\n\nFor our UIs, these are automatically created by Next.js.",
        "type": "object",
        "properties": {
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the session was created.",
            "type": "string",
            "format": "date-time"
          },
          "expires": {
            "title": "DateTime",
            "description": "The date and time the session expires.",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "description": "The unique identifier for the session.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "session_token": {
            "description": "The session token.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the session was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user that the session belongs to.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "expires",
          "id",
          "session_token",
          "updated_at",
          "user_id"
        ]
      },
      "Solid3dGetAllEdgeFaces": {
        "description": "The response from the `Solid3dGetAllEdgeFaces` command.",
        "type": "object",
        "properties": {
          "faces": {
            "description": "The UUIDs of the faces.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "faces"
        ]
      },
      "Solid3dGetAllOppositeEdges": {
        "description": "The response from the `Solid3dGetAllOppositeEdges` command.",
        "type": "object",
        "properties": {
          "edges": {
            "description": "The UUIDs of the edges.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "edges"
        ]
      },
      "Solid3dGetNextAdjacentEdge": {
        "description": "The response from the `Solid3dGetNextAdjacentEdge` command.",
        "type": "object",
        "properties": {
          "edge": {
            "nullable": true,
            "description": "The UUID of the edge.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Solid3dGetOppositeEdge": {
        "description": "The response from the `Solid3dGetOppositeEdge` command.",
        "type": "object",
        "properties": {
          "edge": {
            "description": "The UUID of the edge.",
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "edge"
        ]
      },
      "Solid3dGetPrevAdjacentEdge": {
        "description": "The response from the `Solid3dGetPrevAdjacentEdge` command.",
        "type": "object",
        "properties": {
          "edge": {
            "nullable": true,
            "description": "The UUID of the edge.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "StlStorage": {
        "description": "Export storage.",
        "oneOf": [
          {
            "description": "Plaintext encoding.",
            "type": "string",
            "enum": [
              "ascii"
            ]
          },
          {
            "description": "Binary STL encoding.\n\nThis is the default setting.",
            "type": "string",
            "enum": [
              "binary"
            ]
          }
        ]
      },
      "SuccessWebSocketResponse": {
        "description": "Successful Websocket response.",
        "type": "object",
        "properties": {
          "request_id": {
            "nullable": true,
            "description": "Which request this is a response to. If the request was a modeling command, this is the modeling command ID. If no request ID was sent, this will be null.",
            "type": "string",
            "format": "uuid"
          },
          "resp": {
            "description": "The data sent with a successful response. This will be flattened into a 'type' and 'data' field.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OkWebSocketResponseData"
              }
            ]
          },
          "success": {
            "description": "Always true",
            "type": "boolean"
          }
        },
        "required": [
          "resp",
          "success"
        ]
      },
      "SurfaceArea": {
        "description": "The surface area response.",
        "type": "object",
        "properties": {
          "output_unit": {
            "description": "The output unit for the surface area.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitArea"
              }
            ]
          },
          "surface_area": {
            "description": "The surface area.",
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "output_unit",
          "surface_area"
        ]
      },
      "System": {
        "description": "Co-ordinate system definition.\n\nThe `up` axis must be orthogonal to the `forward` axis.\n\nSee [cglearn.eu] for background reading.\n\n[cglearn.eu](https://cglearn.eu/pub/computer-graphics/introduction-to-geometry#material-coordinate-systems-1)",
        "type": "object",
        "properties": {
          "forward": {
            "description": "Axis the front face of a model looks along.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AxisDirectionPair"
              }
            ]
          },
          "up": {
            "description": "Axis pointing up and away from a model.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AxisDirectionPair"
              }
            ]
          }
        },
        "required": [
          "forward",
          "up"
        ]
      },
      "TakeSnapshot": {
        "description": "The response from the `TakeSnapshot` command.",
        "type": "object",
        "properties": {
          "contents": {
            "title": "String",
            "description": "Contents of the image.",
            "type": "string",
            "format": "byte"
          }
        },
        "required": [
          "contents"
        ]
      },
      "TextToCad": {
        "description": "A response from a text to CAD prompt.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "feedback": {
            "nullable": true,
            "description": "Feedback from the user, if any.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AiFeedback"
              }
            ]
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "model_version": {
            "description": "The version of the model.",
            "type": "string"
          },
          "output_format": {
            "description": "The output format of the model.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileExportFormat"
              }
            ]
          },
          "outputs": {
            "description": "The output of the model in the given file format the user requested, base64 encoded. The key of the map is the path of the output file.",
            "type": "object",
            "additionalProperties": {
              "title": "String",
              "type": "string",
              "format": "byte"
            }
          },
          "prompt": {
            "description": "The prompt.",
            "type": "string"
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "model_version",
          "output_format",
          "prompt",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "TextToCadCreateBody": {
        "description": "Body for generating models from text.",
        "type": "object",
        "properties": {
          "prompt": {
            "description": "The prompt for the model.",
            "type": "string"
          }
        },
        "required": [
          "prompt"
        ]
      },
      "TextToCadResultsPage": {
        "description": "A single page of results",
        "type": "object",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TextToCad"
            }
          },
          "next_page": {
            "nullable": true,
            "description": "token used to fetch the next page of results (if any)",
            "type": "string"
          }
        },
        "required": [
          "items"
        ]
      },
      "UnitAngle": {
        "description": "The valid types of angle formats.",
        "oneOf": [
          {
            "description": "Degrees <https://en.wikipedia.org/wiki/Degree_(angle)>",
            "type": "string",
            "enum": [
              "degrees"
            ]
          },
          {
            "description": "Radians <https://en.wikipedia.org/wiki/Radian>",
            "type": "string",
            "enum": [
              "radians"
            ]
          }
        ]
      },
      "UnitAngleConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitAngle"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitAngle"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitArea": {
        "description": "The valid types of area units.",
        "oneOf": [
          {
            "description": "Square centimeters <https://en.wikipedia.org/wiki/Square_centimeter>",
            "type": "string",
            "enum": [
              "cm2"
            ]
          },
          {
            "description": "Square decimeters <https://en.wikipedia.org/wiki/Square_decimeter>",
            "type": "string",
            "enum": [
              "dm2"
            ]
          },
          {
            "description": "Square feet <https://en.wikipedia.org/wiki/Square_foot>",
            "type": "string",
            "enum": [
              "ft2"
            ]
          },
          {
            "description": "Square inches <https://en.wikipedia.org/wiki/Square_inch>",
            "type": "string",
            "enum": [
              "in2"
            ]
          },
          {
            "description": "Square kilometers <https://en.wikipedia.org/wiki/Square_kilometer>",
            "type": "string",
            "enum": [
              "km2"
            ]
          },
          {
            "description": "Square meters <https://en.wikipedia.org/wiki/Square_meter>",
            "type": "string",
            "enum": [
              "m2"
            ]
          },
          {
            "description": "Square millimeters <https://en.wikipedia.org/wiki/Square_millimeter>",
            "type": "string",
            "enum": [
              "mm2"
            ]
          },
          {
            "description": "Square yards <https://en.wikipedia.org/wiki/Square_mile>",
            "type": "string",
            "enum": [
              "yd2"
            ]
          }
        ]
      },
      "UnitAreaConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitArea"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitArea"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitCurrent": {
        "description": "The valid types of current units.",
        "oneOf": [
          {
            "description": "Amperes <https://en.wikipedia.org/wiki/Ampere>",
            "type": "string",
            "enum": [
              "amperes"
            ]
          },
          {
            "description": "Microamperes <https://en.wikipedia.org/wiki/Microampere>",
            "type": "string",
            "enum": [
              "microamperes"
            ]
          },
          {
            "description": "Milliamperes <https://en.wikipedia.org/wiki/Milliampere>",
            "type": "string",
            "enum": [
              "milliamperes"
            ]
          },
          {
            "description": "Nanoamperes <https://en.wikipedia.org/wiki/Nanoampere>",
            "type": "string",
            "enum": [
              "nanoamperes"
            ]
          }
        ]
      },
      "UnitCurrentConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitCurrent"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitCurrent"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitDensity": {
        "description": "The valid types for density units.",
        "oneOf": [
          {
            "description": "Pounds per cubic feet.",
            "type": "string",
            "enum": [
              "lb:ft3"
            ]
          },
          {
            "description": "Kilograms per cubic meter.",
            "type": "string",
            "enum": [
              "kg:m3"
            ]
          }
        ]
      },
      "UnitEnergy": {
        "description": "The valid types of energy units.",
        "oneOf": [
          {
            "description": "British Thermal Unit (BTU) <https://en.wikipedia.org/wiki/British_thermal_unit>",
            "type": "string",
            "enum": [
              "btu"
            ]
          },
          {
            "description": "Electron Volts (eV) <https://en.wikipedia.org/wiki/Electronvolt>",
            "type": "string",
            "enum": [
              "electronvolts"
            ]
          },
          {
            "description": "Joules (or watt-seconds) <https://en.wikipedia.org/wiki/Joule>",
            "type": "string",
            "enum": [
              "joules"
            ]
          },
          {
            "description": "Kilocalories (often just called calories) <https://en.wikipedia.org/wiki/Kilocalorie>",
            "type": "string",
            "enum": [
              "kilocalories"
            ]
          },
          {
            "description": "Kilowatt hours (kWh) <https://en.wikipedia.org/wiki/Kilowatt-hour>",
            "type": "string",
            "enum": [
              "kilowatt_hours"
            ]
          },
          {
            "description": "Watt hours (Wh) <https://en.wikipedia.org/wiki/Kilowatt-hour>",
            "type": "string",
            "enum": [
              "watt_hours"
            ]
          }
        ]
      },
      "UnitEnergyConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitEnergy"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitEnergy"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitForce": {
        "description": "The valid types of force units.",
        "oneOf": [
          {
            "description": "Dynes <https://en.wikipedia.org/wiki/Dyne>",
            "type": "string",
            "enum": [
              "dynes"
            ]
          },
          {
            "description": "Kiloponds <https://en.wikipedia.org/wiki/Kilopond>",
            "type": "string",
            "enum": [
              "kiloponds"
            ]
          },
          {
            "description": "Micronewtons <https://en.wikipedia.org/wiki/Newton_(unit)>",
            "type": "string",
            "enum": [
              "micronewtons"
            ]
          },
          {
            "description": "Millinewtons <https://en.wikipedia.org/wiki/Newton_(unit)>",
            "type": "string",
            "enum": [
              "millinewtons"
            ]
          },
          {
            "description": "Newtons <https://en.wikipedia.org/wiki/Newton_(unit)>",
            "type": "string",
            "enum": [
              "newtons"
            ]
          },
          {
            "description": "Poundals <https://en.wikipedia.org/wiki/Poundal>",
            "type": "string",
            "enum": [
              "poundals"
            ]
          },
          {
            "description": "Pounds <https://en.wikipedia.org/wiki/Pound_(force)>",
            "type": "string",
            "enum": [
              "pounds"
            ]
          }
        ]
      },
      "UnitForceConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitForce"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitForce"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitFrequency": {
        "description": "The valid types of frequency units.",
        "oneOf": [
          {
            "description": "Gigahertz <https://en.wikipedia.org/wiki/Hertz>",
            "type": "string",
            "enum": [
              "gigahertz"
            ]
          },
          {
            "description": "Hertz <https://en.wikipedia.org/wiki/Hertz>",
            "type": "string",
            "enum": [
              "hertz"
            ]
          },
          {
            "description": "Kilohertz <https://en.wikipedia.org/wiki/Hertz>",
            "type": "string",
            "enum": [
              "kilohertz"
            ]
          },
          {
            "description": "Megahertz <https://en.wikipedia.org/wiki/Hertz>",
            "type": "string",
            "enum": [
              "megahertz"
            ]
          },
          {
            "description": "Microhertz <https://en.wikipedia.org/wiki/Hertz>",
            "type": "string",
            "enum": [
              "microhertz"
            ]
          },
          {
            "description": "Millihertz <https://en.wikipedia.org/wiki/Hertz>",
            "type": "string",
            "enum": [
              "millihertz"
            ]
          },
          {
            "description": "Nanohertz <https://en.wikipedia.org/wiki/Hertz>",
            "type": "string",
            "enum": [
              "nanohertz"
            ]
          },
          {
            "description": "Terahertz <https://en.wikipedia.org/wiki/Hertz>",
            "type": "string",
            "enum": [
              "terahertz"
            ]
          }
        ]
      },
      "UnitFrequencyConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitFrequency"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitFrequency"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitLength": {
        "description": "The valid types of length units.",
        "oneOf": [
          {
            "description": "Centimeters <https://en.wikipedia.org/wiki/Centimeter>",
            "type": "string",
            "enum": [
              "cm"
            ]
          },
          {
            "description": "Feet <https://en.wikipedia.org/wiki/Foot_(unit)>",
            "type": "string",
            "enum": [
              "ft"
            ]
          },
          {
            "description": "Inches <https://en.wikipedia.org/wiki/Inch>",
            "type": "string",
            "enum": [
              "in"
            ]
          },
          {
            "description": "Meters <https://en.wikipedia.org/wiki/Meter>",
            "type": "string",
            "enum": [
              "m"
            ]
          },
          {
            "description": "Millimeters <https://en.wikipedia.org/wiki/Millimeter>",
            "type": "string",
            "enum": [
              "mm"
            ]
          },
          {
            "description": "Yards <https://en.wikipedia.org/wiki/Yard>",
            "type": "string",
            "enum": [
              "yd"
            ]
          }
        ]
      },
      "UnitLengthConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitLength"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitLength"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitMass": {
        "description": "The valid types of mass units.",
        "oneOf": [
          {
            "description": "Grams <https://en.wikipedia.org/wiki/Gram>",
            "type": "string",
            "enum": [
              "g"
            ]
          },
          {
            "description": "Kilograms <https://en.wikipedia.org/wiki/Kilogram>",
            "type": "string",
            "enum": [
              "kg"
            ]
          },
          {
            "description": "Pounds <https://en.wikipedia.org/wiki/Pound_(mass)>",
            "type": "string",
            "enum": [
              "lb"
            ]
          }
        ]
      },
      "UnitMassConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitMass"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitMass"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitPower": {
        "description": "The valid types of power units.",
        "oneOf": [
          {
            "description": "British thermal units (BTU) per minute <https://en.wikipedia.org/wiki/British_thermal_unit>",
            "type": "string",
            "enum": [
              "btu_per_minute"
            ]
          },
          {
            "description": "Horsepower (hp) <https://en.wikipedia.org/wiki/Horsepower>",
            "type": "string",
            "enum": [
              "horsepower"
            ]
          },
          {
            "description": "Kilowatts <https://en.wikipedia.org/wiki/Kilowatt>",
            "type": "string",
            "enum": [
              "kilowatts"
            ]
          },
          {
            "description": "Metric horsepower (PS) <https://en.wikipedia.org/wiki/Horsepower#Metric_horsepower>",
            "type": "string",
            "enum": [
              "metric_horsepower"
            ]
          },
          {
            "description": "Microwatts <https://en.wikipedia.org/wiki/Microwatt>",
            "type": "string",
            "enum": [
              "microwatts"
            ]
          },
          {
            "description": "Millwatts <https://en.wikipedia.org/wiki/Milliwatt>",
            "type": "string",
            "enum": [
              "milliwatts"
            ]
          },
          {
            "description": "Watts <https://en.wikipedia.org/wiki/Watt>",
            "type": "string",
            "enum": [
              "watts"
            ]
          }
        ]
      },
      "UnitPowerConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitPower"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitPower"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitPressure": {
        "description": "The valid types of pressure units.",
        "oneOf": [
          {
            "description": "Atmospheres <https://en.wikipedia.org/wiki/Standard_atmosphere_(unit)>",
            "type": "string",
            "enum": [
              "atmospheres"
            ]
          },
          {
            "description": "Bars <https://en.wikipedia.org/wiki/Bar_(unit)>",
            "type": "string",
            "enum": [
              "bars"
            ]
          },
          {
            "description": "Hectopascals <https://en.wikipedia.org/wiki/Hectopascal>",
            "type": "string",
            "enum": [
              "hectopascals"
            ]
          },
          {
            "description": "Kilopascals <https://en.wikipedia.org/wiki/Kilopascal>",
            "type": "string",
            "enum": [
              "kilopascals"
            ]
          },
          {
            "description": "Millibars <https://en.wikipedia.org/wiki/Bar_(unit)>",
            "type": "string",
            "enum": [
              "millibars"
            ]
          },
          {
            "description": "Pascals <https://en.wikipedia.org/wiki/Pascal_(unit)>",
            "type": "string",
            "enum": [
              "pascals"
            ]
          },
          {
            "description": "Pounds per square inch (PSI) - <https://en.wikipedia.org/wiki/Pound_per_square_inch>",
            "type": "string",
            "enum": [
              "psi"
            ]
          }
        ]
      },
      "UnitPressureConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitPressure"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitPressure"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitTemperature": {
        "description": "The valid types of temperature units.",
        "oneOf": [
          {
            "description": "Celsius <https://en.wikipedia.org/wiki/Celsius>",
            "type": "string",
            "enum": [
              "celsius"
            ]
          },
          {
            "description": "Fahrenheit <https://en.wikipedia.org/wiki/Fahrenheit>",
            "type": "string",
            "enum": [
              "fahrenheit"
            ]
          },
          {
            "description": "Kelvin <https://en.wikipedia.org/wiki/Kelvin>",
            "type": "string",
            "enum": [
              "kelvin"
            ]
          },
          {
            "description": "Rankine <https://en.wikipedia.org/wiki/Rankine_scale>",
            "type": "string",
            "enum": [
              "rankine"
            ]
          }
        ]
      },
      "UnitTemperatureConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitTemperature"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitTemperature"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitTorque": {
        "description": "The valid types of torque units.",
        "oneOf": [
          {
            "description": "Newton metres <https://en.wikipedia.org/wiki/Newton_metre>",
            "type": "string",
            "enum": [
              "newton_metres"
            ]
          },
          {
            "description": "Pound foot <https://en.wikipedia.org/wiki/Pound-foot_(torque)>",
            "type": "string",
            "enum": [
              "pound_foot"
            ]
          }
        ]
      },
      "UnitTorqueConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitTorque"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitTorque"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UnitVolume": {
        "description": "The valid types of volume units.",
        "oneOf": [
          {
            "description": "Cubic centimeters (cc or cm³) <https://en.wikipedia.org/wiki/Cubic_centimeter>",
            "type": "string",
            "enum": [
              "cm3"
            ]
          },
          {
            "description": "Cubic feet (ft³) <https://en.wikipedia.org/wiki/Cubic_foot>",
            "type": "string",
            "enum": [
              "ft3"
            ]
          },
          {
            "description": "Cubic inches (cu in or in³) <https://en.wikipedia.org/wiki/Cubic_inch>",
            "type": "string",
            "enum": [
              "in3"
            ]
          },
          {
            "description": "Cubic meters (m³) <https://en.wikipedia.org/wiki/Cubic_meter>",
            "type": "string",
            "enum": [
              "m3"
            ]
          },
          {
            "description": "Cubic yards (yd³) <https://en.wikipedia.org/wiki/Cubic_yard>",
            "type": "string",
            "enum": [
              "yd3"
            ]
          },
          {
            "description": "US Fluid Ounces (fl oz) <https://en.wikipedia.org/wiki/Fluid_ounce>",
            "type": "string",
            "enum": [
              "usfloz"
            ]
          },
          {
            "description": "US Gallons (gal US) <https://en.wikipedia.org/wiki/Gallon>",
            "type": "string",
            "enum": [
              "usgal"
            ]
          },
          {
            "description": "Liters (l) <https://en.wikipedia.org/wiki/Litre>",
            "type": "string",
            "enum": [
              "l"
            ]
          },
          {
            "description": "Milliliters (ml) <https://en.wikipedia.org/wiki/Litre>",
            "type": "string",
            "enum": [
              "ml"
            ]
          }
        ]
      },
      "UnitVolumeConversion": {
        "description": "Result of converting between units.",
        "type": "object",
        "properties": {
          "completed_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was completed.",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The time and date the API call was created.",
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "description": "The error the function returned, if any.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the API call.\n\nThis is the same as the API call ID.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "input": {
            "description": "The input value.",
            "default": 0.0,
            "type": "number",
            "format": "double"
          },
          "input_unit": {
            "description": "The source format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitVolume"
              }
            ]
          },
          "output": {
            "nullable": true,
            "description": "The resulting value.",
            "type": "number",
            "format": "double"
          },
          "output_unit": {
            "description": "The output format of the unit conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitVolume"
              }
            ]
          },
          "started_at": {
            "nullable": true,
            "title": "DateTime",
            "description": "The time and date the API call was started.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "The status of the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiCallStatus"
              }
            ]
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The time and date the API call was last updated.",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "description": "The user ID of the user who created the API call.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          }
        },
        "required": [
          "created_at",
          "id",
          "input_unit",
          "output_unit",
          "status",
          "updated_at",
          "user_id"
        ]
      },
      "UpdateUser": {
        "description": "The user-modifiable parts of a User.",
        "type": "object",
        "properties": {
          "company": {
            "description": "The user's company.",
            "type": "string"
          },
          "discord": {
            "description": "The user's Discord handle.",
            "type": "string"
          },
          "first_name": {
            "description": "The user's first name.",
            "type": "string"
          },
          "github": {
            "description": "The user's GitHub handle.",
            "type": "string"
          },
          "last_name": {
            "description": "The user's last name.",
            "type": "string"
          },
          "phone": {
            "title": "String",
            "description": "The user's phone number.",
            "default": "",
            "type": "string",
            "format": "phone"
          }
        }
      },
      "User": {
        "description": "A user.",
        "type": "object",
        "properties": {
          "company": {
            "description": "The user's company.",
            "type": "string"
          },
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the user was created.",
            "type": "string",
            "format": "date-time"
          },
          "discord": {
            "description": "The user's Discord handle.",
            "type": "string"
          },
          "email": {
            "description": "The email address of the user.",
            "type": "string",
            "format": "email"
          },
          "email_verified": {
            "nullable": true,
            "title": "DateTime",
            "description": "The date and time the email address was verified.",
            "type": "string",
            "format": "date-time"
          },
          "first_name": {
            "description": "The user's first name.",
            "type": "string"
          },
          "github": {
            "description": "The user's GitHub handle.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the user.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "image": {
            "title": "String",
            "description": "The image avatar for the user. This is a URL.",
            "type": "string",
            "format": "uri"
          },
          "last_name": {
            "description": "The user's last name.",
            "type": "string"
          },
          "name": {
            "description": "The name of the user. This is auto populated at first from the authentication provider (if there was a name). It can be updated by the user by updating their `first_name` and `last_name` fields.",
            "type": "string"
          },
          "phone": {
            "title": "String",
            "description": "The user's phone number.",
            "default": "",
            "type": "string",
            "format": "phone"
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the user was last updated.",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "created_at",
          "id",
          "image",
          "updated_at"
        ]
      },
      "UserResultsPage": {
        "description": "A single page of results",
        "type": "object",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "next_page": {
            "nullable": true,
            "description": "token used to fetch the next page of results (if any)",
            "type": "string"
          }
        },
        "required": [
          "items"
        ]
      },
      "Uuid": {
        "description": "A UUID usually v4 or v7",
        "type": "string",
        "format": "uuid"
      },
      "VerificationToken": {
        "description": "A verification token for a user.\n\nThis is typically used to verify a user's email address.",
        "type": "object",
        "properties": {
          "created_at": {
            "title": "DateTime",
            "description": "The date and time the verification token was created.",
            "type": "string",
            "format": "date-time"
          },
          "expires": {
            "title": "DateTime",
            "description": "The date and time the verification token expires.",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "description": "The token used for verification. This is used as the id for the table since it is unique per record.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Uuid"
              }
            ]
          },
          "identifier": {
            "description": "The identifier for the user. This is typically the user's email address since that is what we are verifying.",
            "type": "string"
          },
          "updated_at": {
            "title": "DateTime",
            "description": "The date and time the verification token was last updated.",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "created_at",
          "expires",
          "id",
          "updated_at"
        ]
      },
      "Volume": {
        "description": "The volume response.",
        "type": "object",
        "properties": {
          "output_unit": {
            "description": "The output unit for the volume.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitVolume"
              }
            ]
          },
          "volume": {
            "description": "The volume.",
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "output_unit",
          "volume"
        ]
      },
      "WebSocketRequest": {
        "description": "The websocket messages the server receives.",
        "oneOf": [
          {
            "description": "The trickle ICE candidate request.",
            "type": "object",
            "properties": {
              "candidate": {
                "description": "Information about the ICE candidate.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RtcIceCandidateInit"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "trickle_ice"
                ]
              }
            },
            "required": [
              "candidate",
              "type"
            ]
          },
          {
            "description": "The SDP offer request.",
            "type": "object",
            "properties": {
              "offer": {
                "description": "The session description.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RtcSessionDescription"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "sdp_offer"
                ]
              }
            },
            "required": [
              "offer",
              "type"
            ]
          },
          {
            "description": "The modeling command request.",
            "type": "object",
            "properties": {
              "cmd": {
                "description": "Which command to submit to the Kittycad engine.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ModelingCmd"
                  }
                ]
              },
              "cmd_id": {
                "description": "ID of command being submitted.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ModelingCmdId"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "modeling_cmd_req"
                ]
              }
            },
            "required": [
              "cmd",
              "cmd_id",
              "type"
            ]
          },
          {
            "description": "A sequence of modeling requests. If any request fails, following requests will not be tried.",
            "type": "object",
            "properties": {
              "requests": {
                "description": "A sequence of modeling requests. If any request fails, following requests will not be tried.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ModelingCmdReq"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "modeling_cmd_batch_req"
                ]
              }
            },
            "required": [
              "requests",
              "type"
            ]
          },
          {
            "description": "The client-to-server Ping to ensure the WebSocket stays alive.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "ping"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "description": "The response to a metrics collection request from the server.",
            "type": "object",
            "properties": {
              "metrics": {
                "description": "Collected metrics from the Client's end of the engine connection.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ClientMetrics"
                  }
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "metrics_response"
                ]
              }
            },
            "required": [
              "metrics",
              "type"
            ]
          }
        ]
      },
      "WebSocketResponse": {
        "description": "Websocket responses can either be successful or unsuccessful. Slightly different schemas in either case.",
        "anyOf": [
          {
            "description": "Response sent when a request succeeded.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SuccessWebSocketResponse"
              }
            ]
          },
          {
            "description": "Response sent when a request did not succeed.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FailureWebSocketResponse"
              }
            ]
          }
        ]
      }
    }
  },
  "tags": [
    {
      "name": "ai",
      "description": "AI uses machine learning to generate 3D meshes.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/ai"
      }
    },
    {
      "name": "api-calls",
      "description": "API calls that have been performed by users can be queried by the API. This is helpful for debugging as well as billing.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/api-calls"
      }
    },
    {
      "name": "api-tokens",
      "description": "API tokens allow users to call the API outside of their session token that is used as a cookie in the user interface. Users can create, delete, and list their API tokens. But, of course, you need an API token to do this, so first be sure to generate one in the account UI.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/api-tokens"
      }
    },
    {
      "name": "apps",
      "description": "Endpoints for third party app grant flows.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/apps"
      }
    },
    {
      "name": "beta",
      "description": "Beta API endpoints. We will not charge for these endpoints while they are in beta.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/beta"
      }
    },
    {
      "name": "constant",
      "description": "Constants. These are helpful as helpers.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/constant"
      }
    },
    {
      "name": "executor",
      "description": "Endpoints that allow for code execution or creation of code execution environments.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/executor"
      }
    },
    {
      "name": "file",
      "description": "CAD file operations. Create, get, and list CAD file conversions. More endpoints will be added here in the future as we build out transforms, etc on CAD models.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/file"
      }
    },
    {
      "name": "hidden",
      "description": "Hidden API endpoints that should not show up in the docs.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/hidden"
      }
    },
    {
      "name": "meta",
      "description": "Meta information about the API.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/meta"
      }
    },
    {
      "name": "modeling",
      "description": "Modeling API for updating your 3D files using the KittyCAD engine.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/modeling"
      }
    },
    {
      "name": "oauth2",
      "description": "Endpoints that implement OAuth 2.0 grant flows.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/oauth2"
      }
    },
    {
      "name": "payments",
      "description": "Operations around payments and billing.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/payments"
      }
    },
    {
      "name": "unit",
      "description": "Unit conversion operations.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/file"
      }
    },
    {
      "name": "users",
      "description": "A user is someone who uses the KittyCAD API. Here, we can create, delete, and list users. We can also get information about a user. Operations will only be authorized if the user is requesting information about themselves.",
      "externalDocs": {
        "url": "https://docs.kittycad.io/api/users"
      }
    }
  ]
}